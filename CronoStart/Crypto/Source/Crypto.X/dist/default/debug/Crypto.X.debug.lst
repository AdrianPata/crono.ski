

Microchip Technology PIC18 PRO Macro Assembler V1.37 build -260352376 
                                                                                               Tue May 03 14:57:06 2016

Microchip Technology Omniscient Code Generator v1.37 (PRO mode) build 201603110536
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK2,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22                           	psect	pa_nodes,global,class=CODE,delta=1
    23  0000                     tblptrh	equ	0xFF7
    24                           tblptrl	equ	0xFF6
    25                           tablat	equ	0xFF5
    26                           prodl	equ	0xFF3
    27                           wreg	equ	0xFE8
    28                           indf1	equ	0xFE7
    29                           postinc1	equ	0xFE6
    30                           postdec1	equ	0xFE5
    31                           fsr1h	equ	0xFE2
    32                           fsr1l	equ	0xFE1
    33                           indf2	equ	0xFDF
    34                           postinc2	equ	0xFDE
    35                           postdec2	equ	0xFDD
    36                           plusw2	equ	0xFDB
    37                           fsr2h	equ	0xFDA
    38                           fsr2l	equ	0xFD9
    39                           status	equ	0xFD8
    40                           
    41                           	psect	idataBANK2
    42  00ED0C                     __pidataBANK2:
    43                           	opt stack 0
    44                           
    45                           ;initializer for main@F7829
    46  00ED0C  61                 	db	97
    47  00ED0D  62                 	db	98
    48  00ED0E  63                 	db	99
    49  00ED0F  00                 	db	0
    50                           tblptrh	equ	0xFF7
    51                           tblptrl	equ	0xFF6
    52                           tablat	equ	0xFF5
    53                           prodl	equ	0xFF3
    54                           wreg	equ	0xFE8
    55                           indf1	equ	0xFE7
    56                           postinc1	equ	0xFE6
    57                           postdec1	equ	0xFE5
    58                           fsr1h	equ	0xFE2
    59                           fsr1l	equ	0xFE1
    60                           indf2	equ	0xFDF
    61                           postinc2	equ	0xFDE
    62                           postdec2	equ	0xFDD
    63                           plusw2	equ	0xFDB
    64                           fsr2h	equ	0xFDA
    65                           fsr2l	equ	0xFD9
    66                           status	equ	0xFD8
    67                           
    68                           	psect	mediumconst
    69  00FEFE                     __pmediumconst:
    70                           	opt stack 0
    71  00FEFE  00                 	db	0
    72  00FEFF                     _k:
    73                           	opt stack 0
    74  00FEFF  2F98               	dw	12184
    75  00FF01  428A               	dw	17034
    76  00FF03  4491               	dw	17553
    77  00FF05  7137               	dw	28983
    78  00FF07  FBCF               	dw	64463
    79  00FF09  B5C0               	dw	46528
    80  00FF0B  DBA5               	dw	56229
    81  00FF0D  E9B5               	dw	59829
    82  00FF0F  C25B               	dw	49755
    83  00FF11  3956               	dw	14678
    84  00FF13  11F1               	dw	4593
    85  00FF15  59F1               	dw	23025
    86  00FF17  82A4               	dw	33444
    87  00FF19  923F               	dw	37439
    88  00FF1B  5ED5               	dw	24277
    89  00FF1D  AB1C               	dw	43804
    90  00FF1F  AA98               	dw	43672
    91  00FF21  D807               	dw	55303
    92  00FF23  5B01               	dw	23297
    93  00FF25  1283               	dw	4739
    94  00FF27  85BE               	dw	34238
    95  00FF29  2431               	dw	9265
    96  00FF2B  7DC3               	dw	32195
    97  00FF2D  550C               	dw	21772
    98  00FF2F  5D74               	dw	23924
    99  00FF31  72BE               	dw	29374
   100  00FF33  B1FE               	dw	45566
   101  00FF35  80DE               	dw	32990
   102  00FF37  06A7               	dw	1703
   103  00FF39  9BDC               	dw	39900
   104  00FF3B  F174               	dw	61812
   105  00FF3D  C19B               	dw	49563
   106  00FF3F  69C1               	dw	27073
   107  00FF41  E49B               	dw	58523
   108  00FF43  4786               	dw	18310
   109  00FF45  EFBE               	dw	61374
   110  00FF47  9DC6               	dw	40390
   111  00FF49  0FC1               	dw	4033
   112  00FF4B  A1CC               	dw	41420
   113  00FF4D  240C               	dw	9228
   114  00FF4F  2C6F               	dw	11375
   115  00FF51  2DE9               	dw	11753
   116  00FF53  84AA               	dw	33962
   117  00FF55  4A74               	dw	19060
   118  00FF57  A9DC               	dw	43484
   119  00FF59  5CB0               	dw	23728
   120  00FF5B  88DA               	dw	35034
   121  00FF5D  76F9               	dw	30457
   122  00FF5F  5152               	dw	20818
   123  00FF61  983E               	dw	38974
   124  00FF63  C66D               	dw	50797
   125  00FF65  A831               	dw	43057
   126  00FF67  27C8               	dw	10184
   127  00FF69  B003               	dw	45059
   128  00FF6B  7FC7               	dw	32711
   129  00FF6D  BF59               	dw	48985
   130  00FF6F  0BF3               	dw	3059
   131  00FF71  C6E0               	dw	50912
   132  00FF73  9147               	dw	37191
   133  00FF75  D5A7               	dw	54695
   134  00FF77  6351               	dw	25425
   135  00FF79  06CA               	dw	1738
   136  00FF7B  2967               	dw	10599
   137  00FF7D  1429               	dw	5161
   138  00FF7F  0A85               	dw	2693
   139  00FF81  27B7               	dw	10167
   140  00FF83  2138               	dw	8504
   141  00FF85  2E1B               	dw	11803
   142  00FF87  6DFC               	dw	28156
   143  00FF89  4D2C               	dw	19756
   144  00FF8B  0D13               	dw	3347
   145  00FF8D  5338               	dw	21304
   146  00FF8F  7354               	dw	29524
   147  00FF91  650A               	dw	25866
   148  00FF93  0ABB               	dw	2747
   149  00FF95  766A               	dw	30314
   150  00FF97  C92E               	dw	51502
   151  00FF99  81C2               	dw	33218
   152  00FF9B  2C85               	dw	11397
   153  00FF9D  9272               	dw	37490
   154  00FF9F  E8A1               	dw	59553
   155  00FFA1  A2BF               	dw	41663
   156  00FFA3  664B               	dw	26187
   157  00FFA5  A81A               	dw	43034
   158  00FFA7  8B70               	dw	35696
   159  00FFA9  C24B               	dw	49739
   160  00FFAB  51A3               	dw	20899
   161  00FFAD  C76C               	dw	51052
   162  00FFAF  E819               	dw	59417
   163  00FFB1  D192               	dw	53650
   164  00FFB3  0624               	dw	1572
   165  00FFB5  D699               	dw	54937
   166  00FFB7  3585               	dw	13701
   167  00FFB9  F40E               	dw	62478
   168  00FFBB  A070               	dw	41072
   169  00FFBD  106A               	dw	4202
   170  00FFBF  C116               	dw	49430
   171  00FFC1  19A4               	dw	6564
   172  00FFC3  6C08               	dw	27656
   173  00FFC5  1E37               	dw	7735
   174  00FFC7  774C               	dw	30540
   175  00FFC9  2748               	dw	10056
   176  00FFCB  BCB5               	dw	48309
   177  00FFCD  34B0               	dw	13488
   178  00FFCF  0CB3               	dw	3251
   179  00FFD1  391C               	dw	14620
   180  00FFD3  AA4A               	dw	43594
   181  00FFD5  4ED8               	dw	20184
   182  00FFD7  CA4F               	dw	51791
   183  00FFD9  5B9C               	dw	23452
   184  00FFDB  6FF3               	dw	28659
   185  00FFDD  682E               	dw	26670
   186  00FFDF  82EE               	dw	33518
   187  00FFE1  748F               	dw	29839
   188  00FFE3  636F               	dw	25455
   189  00FFE5  78A5               	dw	30885
   190  00FFE7  7814               	dw	30740
   191  00FFE9  84C8               	dw	33992
   192  00FFEB  0208               	dw	520
   193  00FFED  8CC7               	dw	36039
   194  00FFEF  FFFA               	dw	65530
   195  00FFF1  90BE               	dw	37054
   196  00FFF3  6CEB               	dw	27883
   197  00FFF5  A450               	dw	42064
   198  00FFF7  A3F7               	dw	41975
   199  00FFF9  BEF9               	dw	48889
   200  00FFFB  78F2               	dw	30962
   201  00FFFD  C671               	dw	50801
   202  00FFFF                     __end_of_k:
   203                           	opt stack 0
   204  00FFFF  00                 	db	0	; dummy byte at the end
   205  0000                     tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           prodl	equ	0xFF3
   209                           wreg	equ	0xFE8
   210                           indf1	equ	0xFE7
   211                           postinc1	equ	0xFE6
   212                           postdec1	equ	0xFE5
   213                           fsr1h	equ	0xFE2
   214                           fsr1l	equ	0xFE1
   215                           indf2	equ	0xFDF
   216                           postinc2	equ	0xFDE
   217                           postdec2	equ	0xFDD
   218                           plusw2	equ	0xFDB
   219                           fsr2h	equ	0xFDA
   220                           fsr2l	equ	0xFD9
   221                           status	equ	0xFD8
   222                           
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226  00ED62                     __pcinit:
   227                           	opt stack 0
   228  00ED62                     start_initialization:
   229                           	opt stack 0
   230  00ED62                     __initialization:
   231                           	opt stack 0
   232                           
   233                           ; Initialize objects allocated to BANK2 (4 bytes)
   234                           ; load TBLPTR registers with __pidataBANK2
   235  00ED62  0E0C               	movlw	low __pidataBANK2
   236  00ED64  6EF6               	movwf	tblptrl,c
   237  00ED66  0EED               	movlw	high __pidataBANK2
   238  00ED68  6EF7               	movwf	tblptrh,c
   239  00ED6A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   240  00ED6C  6EF8               	movwf	tblptru,c
   241  00ED6E  EE02  F08C         	lfsr	0,__pdataBANK2
   242  00ED72  EE10 F004          	lfsr	1,4
   243  00ED76                     copy_data0:
   244  00ED76  0009               	tblrd		*+
   245  00ED78  CFF5 FFEE          	movff	tablat,postinc0
   246  00ED7C  50E5               	movf	postdec1,w,c
   247  00ED7E  50E1               	movf	fsr1l,w,c
   248  00ED80  E1FA               	bnz	copy_data0
   249  00ED82                     end_of_initialization:
   250                           	opt stack 0
   251  00ED82                     __end_of__initialization:
   252                           	opt stack 0
   253  00ED82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254  00ED84  6EF8               	movwf	tblptru,c
   255  00ED86  0100               	movlb	0
   256  00ED88  EFC6  F076         	goto	_main	;jump to C main() function
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           prodl	equ	0xFF3
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           indf1	equ	0xFE7
   265                           postinc1	equ	0xFE6
   266                           postdec1	equ	0xFE5
   267                           fsr1h	equ	0xFE2
   268                           fsr1l	equ	0xFE1
   269                           indf2	equ	0xFDF
   270                           postinc2	equ	0xFDE
   271                           postdec2	equ	0xFDD
   272                           plusw2	equ	0xFDB
   273                           fsr2h	equ	0xFDA
   274                           fsr2l	equ	0xFD9
   275                           status	equ	0xFD8
   276                           
   277                           	psect	dataBANK2
   278  00028C                     __pdataBANK2:
   279                           	opt stack 0
   280  00028C                     main@F7829:
   281                           	opt stack 0
   282  00028C                     	ds	4
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           prodl	equ	0xFF3
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           indf1	equ	0xFE7
   291                           postinc1	equ	0xFE6
   292                           postdec1	equ	0xFE5
   293                           fsr1h	equ	0xFE2
   294                           fsr1l	equ	0xFE1
   295                           indf2	equ	0xFDF
   296                           postinc2	equ	0xFDE
   297                           postdec2	equ	0xFDD
   298                           plusw2	equ	0xFDB
   299                           fsr2h	equ	0xFDA
   300                           fsr2l	equ	0xFD9
   301                           status	equ	0xFD8
   302                           
   303                           	psect	cstackBANK2
   304  000200                     __pcstackBANK2:
   305                           	opt stack 0
   306  000200                     main@buf:
   307                           	opt stack 0
   308                           
   309                           ; 32 bytes @ 0x0
   310  000200                     	ds	32
   311  000220                     main@text1:
   312                           	opt stack 0
   313                           
   314                           ; 4 bytes @ 0x20
   315  000220                     	ds	4
   316  000224                     main@ctx:
   317                           	opt stack 0
   318                           
   319                           ; 104 bytes @ 0x24
   320  000224                     	ds	104
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           prodl	equ	0xFF3
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           indf1	equ	0xFE7
   329                           postinc1	equ	0xFE6
   330                           postdec1	equ	0xFE5
   331                           fsr1h	equ	0xFE2
   332                           fsr1l	equ	0xFE1
   333                           indf2	equ	0xFDF
   334                           postinc2	equ	0xFDE
   335                           postdec2	equ	0xFDD
   336                           plusw2	equ	0xFDB
   337                           fsr2h	equ	0xFDA
   338                           fsr2l	equ	0xFD9
   339                           status	equ	0xFD8
   340                           
   341                           	psect	cstackBANK1
   342  000100                     __pcstackBANK1:
   343                           	opt stack 0
   344  000100                     sha256_transform@m:
   345                           	opt stack 0
   346                           
   347                           ; 256 bytes @ 0x0
   348  000100                     	ds	256
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           prodl	equ	0xFF3
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           indf1	equ	0xFE7
   357                           postinc1	equ	0xFE6
   358                           postdec1	equ	0xFE5
   359                           fsr1h	equ	0xFE2
   360                           fsr1l	equ	0xFE1
   361                           indf2	equ	0xFDF
   362                           postinc2	equ	0xFDE
   363                           postdec2	equ	0xFDD
   364                           plusw2	equ	0xFDB
   365                           fsr2h	equ	0xFDA
   366                           fsr2l	equ	0xFD9
   367                           status	equ	0xFD8
   368                           
   369                           	psect	cstackBANK0
   370  000060                     __pcstackBANK0:
   371                           	opt stack 0
   372  000060                     ??_sha256_transform:
   373                           
   374                           ; 1 bytes @ 0x0
   375  000060                     	ds	142
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           prodl	equ	0xFF3
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           indf1	equ	0xFE7
   384                           postinc1	equ	0xFE6
   385                           postdec1	equ	0xFE5
   386                           fsr1h	equ	0xFE2
   387                           fsr1l	equ	0xFE1
   388                           indf2	equ	0xFDF
   389                           postinc2	equ	0xFDE
   390                           postdec2	equ	0xFDD
   391                           plusw2	equ	0xFDB
   392                           fsr2h	equ	0xFDA
   393                           fsr2l	equ	0xFD9
   394                           status	equ	0xFD8
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	opt stack 0
   399  000001                     ?_strlen:
   400                           	opt stack 0
   401  000001                     sha256_transform@ctx:
   402                           	opt stack 0
   403  000001                     sha256_init@ctx:
   404                           	opt stack 0
   405  000001                     memset@p1:
   406                           	opt stack 0
   407  000001                     strlen@s:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000001                     	ds	2
   412  000003                     sha256_transform@data:
   413                           	opt stack 0
   414  000003                     memset@c:
   415                           	opt stack 0
   416  000003                     strlen@cp:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x2
   420  000003                     	ds	2
   421  000005                     memset@n:
   422                           	opt stack 0
   423  000005                     sha256_transform@t2:
   424                           	opt stack 0
   425                           
   426                           ; 4 bytes @ 0x4
   427  000005                     	ds	2
   428  000007                     memset@p:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x6
   432  000007                     	ds	2
   433  000009                     sha256_transform@t1:
   434                           	opt stack 0
   435                           
   436                           ; 4 bytes @ 0x8
   437  000009                     	ds	4
   438  00000D                     sha256_transform@d:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0xC
   442  00000D                     	ds	4
   443  000011                     sha256_transform@h:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x10
   447  000011                     	ds	4
   448  000015                     sha256_transform@f:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x14
   452  000015                     	ds	4
   453  000019                     sha256_transform@g:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x18
   457  000019                     	ds	4
   458  00001D                     sha256_transform@b:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x1C
   462  00001D                     	ds	4
   463  000021                     sha256_transform@c:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0x20
   467  000021                     	ds	4
   468  000025                     sha256_transform@j:
   469                           	opt stack 0
   470                           
   471                           ; 4 bytes @ 0x24
   472  000025                     	ds	4
   473  000029                     sha256_transform@l:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x28
   477  000029                     	ds	4
   478  00002D                     sha256_transform@a:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x2C
   482  00002D                     	ds	4
   483  000031                     sha256_transform@e:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x30
   487  000031                     	ds	4
   488  000035                     sha256_transform@i:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x34
   492  000035                     	ds	4
   493  000039                     sha256_update@ctx:
   494                           	opt stack 0
   495  000039                     sha256_final@ctx:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x38
   499  000039                     	ds	2
   500  00003B                     sha256_update@data:
   501                           	opt stack 0
   502  00003B                     sha256_final@hash:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x3A
   506  00003B                     	ds	2
   507  00003D                     ??_sha256_final:
   508  00003D                     sha256_update@len:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x3C
   512  00003D                     	ds	2
   513  00003F                     ??_sha256_update:
   514                           
   515                           ; 1 bytes @ 0x3E
   516  00003F                     	ds	4
   517  000043                     sha256_update@i:
   518                           	opt stack 0
   519  000043                     sha256_final@i:
   520                           	opt stack 0
   521                           
   522                           ; 4 bytes @ 0x42
   523  000043                     	ds	4
   524  000047                     tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           prodl	equ	0xFF3
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           indf1	equ	0xFE7
   532                           postinc1	equ	0xFE6
   533                           postdec1	equ	0xFE5
   534                           fsr1h	equ	0xFE2
   535                           fsr1l	equ	0xFE1
   536                           indf2	equ	0xFDF
   537                           postinc2	equ	0xFDE
   538                           postdec2	equ	0xFDD
   539                           plusw2	equ	0xFDB
   540                           fsr2h	equ	0xFDA
   541                           fsr2l	equ	0xFD9
   542                           status	equ	0xFD8
   543                           
   544                           ; 1 bytes @ 0x46
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 13 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  ctx           104   36[BANK2 ] struct .
   555 ;;  buf            32    0[BANK2 ] unsigned char [32]
   556 ;;  text1           4   32[BANK2 ] unsigned char [4]
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         0       0       0     140       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         0       0       0     140       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:      140 bytes
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		_sha256_final
   574 ;;		_sha256_init
   575 ;;		_sha256_update
   576 ;;		_strlen
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  00ED8C                     __ptext0:
   584                           	opt stack 0
   585  00ED8C                     _main:
   586                           	opt stack 29
   587                           
   588                           ;main.c: 15: BYTE text1[] = "abc";
   589                           
   590                           ; BSR set to: 0
   591                           ;incstack = 0
   592  00ED8C  C28C  F220         	movff	main@F7829,main@text1
   593  00ED90  C28D  F221         	movff	main@F7829+1,main@text1+1
   594  00ED94  C28E  F222         	movff	main@F7829+2,main@text1+2
   595  00ED98  C28F  F223         	movff	main@F7829+3,main@text1+3
   596                           
   597                           ;main.c: 16: BYTE buf[32];
   598                           ;main.c: 17: SHA256_CTX ctx;
   599                           ;main.c: 18: sha256_init(&ctx);
   600  00ED9C  0E24               	movlw	low main@ctx
   601  00ED9E  6E01               	movwf	sha256_init@ctx,c
   602  00EDA0  0E02               	movlw	high main@ctx
   603  00EDA2  6E02               	movwf	sha256_init@ctx+1,c
   604  00EDA4  EC54  F077         	call	_sha256_init	;wreg free
   605                           
   606                           ;main.c: 19: sha256_update(&ctx, text1, strlen(text1));
   607  00EDA8  0E24               	movlw	low main@ctx
   608  00EDAA  6E39               	movwf	sha256_update@ctx,c
   609  00EDAC  0E02               	movlw	high main@ctx
   610  00EDAE  6E3A               	movwf	sha256_update@ctx+1,c
   611  00EDB0  0E20               	movlw	low main@text1
   612  00EDB2  6E3B               	movwf	sha256_update@data,c
   613  00EDB4  0E02               	movlw	high main@text1
   614  00EDB6  6E3C               	movwf	sha256_update@data+1,c
   615  00EDB8  0E20               	movlw	low main@text1
   616  00EDBA  6E01               	movwf	strlen@s,c
   617  00EDBC  0E02               	movlw	high main@text1
   618  00EDBE  6E02               	movwf	strlen@s+1,c
   619  00EDC0  EC88  F076         	call	_strlen	;wreg free
   620  00EDC4  C001  F03D         	movff	?_strlen,sha256_update@len
   621  00EDC8  C002  F03E         	movff	?_strlen+1,sha256_update@len+1
   622  00EDCC  ECF4  F076         	call	_sha256_update	;wreg free
   623                           
   624                           ;main.c: 20: sha256_final(&ctx, buf);
   625  00EDD0  0E24               	movlw	low main@ctx
   626  00EDD2  6E39               	movwf	sha256_final@ctx,c
   627  00EDD4  0E02               	movlw	high main@ctx
   628  00EDD6  6E3A               	movwf	sha256_final@ctx+1,c
   629  00EDD8  0E00               	movlw	low main@buf
   630  00EDDA  6E3B               	movwf	sha256_final@hash,c
   631  00EDDC  0E02               	movlw	high main@buf
   632  00EDDE  6E3C               	movwf	sha256_final@hash+1,c
   633  00EDE0  ECBF  F077         	call	_sha256_final	;wreg free
   634  00EDE4  EF00  F000         	goto	start
   635  00EDE8                     __end_of_main:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           prodl	equ	0xFF3
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           indf1	equ	0xFE7
   645                           postinc1	equ	0xFE6
   646                           postdec1	equ	0xFE5
   647                           fsr1h	equ	0xFE2
   648                           fsr1l	equ	0xFE1
   649                           indf2	equ	0xFDF
   650                           postinc2	equ	0xFDE
   651                           postdec2	equ	0xFDD
   652                           plusw2	equ	0xFDB
   653                           fsr2h	equ	0xFDA
   654                           fsr2l	equ	0xFD9
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _strlen *****************
   658 ;; Defined at:
   659 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.37\sources\common\strlen.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  s               2    0[COMRAM] PTR const unsigned char 
   662 ;;		 -> main@text1(4), 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  cp              2    2[COMRAM] PTR const unsigned char 
   665 ;;		 -> main@text1(4), 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  2    0[COMRAM] unsigned int 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:        4 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text1
   689  00ED10                     __ptext1:
   690                           	opt stack 0
   691  00ED10                     _strlen:
   692                           	opt stack 30
   693                           
   694                           ;incstack = 0
   695  00ED10  C001  F003         	movff	strlen@s,strlen@cp
   696  00ED14  C002  F004         	movff	strlen@s+1,strlen@cp+1
   697  00ED18  D002               	goto	l901
   698  00ED1A                     l899:
   699  00ED1A  4A03               	infsnz	strlen@cp,f,c
   700  00ED1C  2A04               	incf	strlen@cp+1,f,c
   701  00ED1E                     l901:
   702  00ED1E  C003  FFD9         	movff	strlen@cp,fsr2l
   703  00ED22  C004  FFDA         	movff	strlen@cp+1,fsr2h
   704  00ED26  50DF               	movf	indf2,w,c
   705  00ED28  E1F8               	bnz	l899
   706  00ED2A  5001               	movf	strlen@s,w,c
   707  00ED2C  5C03               	subwf	strlen@cp,w,c
   708  00ED2E  6E01               	movwf	?_strlen,c
   709  00ED30  5002               	movf	strlen@s+1,w,c
   710  00ED32  5804               	subwfb	strlen@cp+1,w,c
   711  00ED34  6E02               	movwf	?_strlen+1,c
   712  00ED36  0012               	return		;funcret
   713  00ED38                     __end_of_strlen:
   714                           	opt stack 0
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           prodl	equ	0xFF3
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           indf1	equ	0xFE7
   723                           postinc1	equ	0xFE6
   724                           postdec1	equ	0xFE5
   725                           fsr1h	equ	0xFE2
   726                           fsr1l	equ	0xFE1
   727                           indf2	equ	0xFDF
   728                           postinc2	equ	0xFDE
   729                           postdec2	equ	0xFDD
   730                           plusw2	equ	0xFDB
   731                           fsr2h	equ	0xFDA
   732                           fsr2l	equ	0xFD9
   733                           status	equ	0xFD8
   734                           
   735 ;; *************** function _sha256_update *****************
   736 ;; Defined at:
   737 ;;		line 108 in file "sha256.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  ctx             2   56[COMRAM] PTR struct .
   740 ;;		 -> main@ctx(104), 
   741 ;;  data            2   58[COMRAM] PTR const unsigned char 
   742 ;;		 -> main@text1(4), 
   743 ;;  len             2   60[COMRAM] unsigned int 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  i               4   66[COMRAM] unsigned long 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   755 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;Total ram usage:       14 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    1
   762 ;; This function calls:
   763 ;;		_sha256_transform
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770  00EDE8                     __ptext2:
   771                           	opt stack 0
   772  00EDE8                     _sha256_update:
   773                           	opt stack 29
   774                           
   775                           ;sha256.c: 110: WORD i;
   776                           ;sha256.c: 112: for (i = 0; i < len; ++i) {
   777                           
   778                           ;incstack = 0
   779  00EDE8  6A43               	clrf	sha256_update@i,c
   780  00EDEA  6A44               	clrf	sha256_update@i+1,c
   781  00EDEC  6A45               	clrf	sha256_update@i+2,c
   782  00EDEE  6A46               	clrf	sha256_update@i+3,c
   783  00EDF0  D044               	goto	l923
   784  00EDF2                     l909:
   785                           
   786                           ;sha256.c: 113: ctx->data[ctx->datalen] = data[i];
   787  00EDF2  5043               	movf	sha256_update@i,w,c
   788  00EDF4  243B               	addwf	sha256_update@data,w,c
   789  00EDF6  6ED9               	movwf	fsr2l,c
   790  00EDF8  5044               	movf	sha256_update@i+1,w,c
   791  00EDFA  203C               	addwfc	sha256_update@data+1,w,c
   792  00EDFC  6EDA               	movwf	fsr2h,c
   793  00EDFE  EE10 F040          	lfsr	1,64
   794  00EE02  5039               	movf	sha256_update@ctx,w,c
   795  00EE04  26E1               	addwf	fsr1l,f,c
   796  00EE06  503A               	movf	sha256_update@ctx+1,w,c
   797  00EE08  22E2               	addwfc	fsr1h,f,c
   798  00EE0A  CFE6 F03F          	movff	postinc1,??_sha256_update
   799  00EE0E  CFE5 F040          	movff	postdec1,??_sha256_update+1
   800  00EE12  503F               	movf	??_sha256_update,w,c
   801  00EE14  2439               	addwf	sha256_update@ctx,w,c
   802  00EE16  6EE1               	movwf	fsr1l,c
   803  00EE18  5040               	movf	??_sha256_update+1,w,c
   804  00EE1A  203A               	addwfc	sha256_update@ctx+1,w,c
   805  00EE1C  6EE2               	movwf	fsr1h,c
   806  00EE1E  CFDF FFE7          	movff	indf2,indf1
   807                           
   808                           ;sha256.c: 114: ctx->datalen++;
   809  00EE22  D83B               	call	PL30	;call to abstracted procedure
   810  00EE24  2ADE               	incf	postinc2,f,c
   811  00EE26  0E00               	movlw	0
   812  00EE28  22DE               	addwfc	postinc2,f,c
   813  00EE2A  22DE               	addwfc	postinc2,f,c
   814  00EE2C  22DE               	addwfc	postinc2,f,c
   815                           
   816                           ;sha256.c: 115: if (ctx->datalen == 64) {
   817  00EE2E  D835               	call	PL30	;call to abstracted procedure
   818  00EE30  0E40               	movlw	64
   819  00EE32  18DE               	xorwf	postinc2,w,c
   820  00EE34  10DE               	iorwf	postinc2,w,c
   821  00EE36  10DE               	iorwf	postinc2,w,c
   822  00EE38  10DE               	iorwf	postinc2,w,c
   823  00EE3A  E11A               	bnz	l921
   824                           
   825                           ;sha256.c: 116: sha256_transform(ctx, ctx->data);
   826  00EE3C  C039  F001         	movff	sha256_update@ctx,sha256_transform@ctx
   827  00EE40  C03A  F002         	movff	sha256_update@ctx+1,sha256_transform@ctx+1
   828  00EE44  C039  F003         	movff	sha256_update@ctx,sha256_transform@data
   829  00EE48  C03A  F004         	movff	sha256_update@ctx+1,sha256_transform@data+1
   830  00EE4C  EC1B  F079         	call	_sha256_transform	;wreg free
   831                           
   832                           ; BSR set to: 0
   833                           ;sha256.c: 117: ctx->bitlen += 512;
   834  00EE50  EE20 F044          	lfsr	2,68
   835  00EE54  5039               	movf	sha256_update@ctx,w,c
   836  00EE56  26D9               	addwf	fsr2l,f,c
   837  00EE58  503A               	movf	sha256_update@ctx+1,w,c
   838  00EE5A  22DA               	addwfc	fsr2h,f,c
   839  00EE5C  0E00               	movlw	0
   840  00EE5E  26DE               	addwf	postinc2,f,c
   841  00EE60  0E02               	movlw	2
   842  00EE62  26DE               	addwf	postinc2,f,c
   843  00EE64  0E00               	movlw	0
   844  00EE66  22DE               	addwfc	postinc2,f,c
   845  00EE68  22DE               	addwfc	postinc2,f,c
   846                           
   847                           ; BSR set to: 0
   848                           ;sha256.c: 118: ctx->datalen = 0;
   849  00EE6A  D817               	call	PL30	;call to abstracted procedure
   850  00EE6C  ECBA  F077         	call	PL40	;call to abstracted procedure
   851  00EE70                     l921:
   852  00EE70  2A43               	incf	sha256_update@i,f,c
   853  00EE72  0E00               	movlw	0
   854  00EE74  2244               	addwfc	sha256_update@i+1,f,c
   855  00EE76  2245               	addwfc	sha256_update@i+2,f,c
   856  00EE78  2246               	addwfc	sha256_update@i+3,f,c
   857  00EE7A                     l923:
   858  00EE7A  503D               	movf	sha256_update@len,w,c
   859  00EE7C  6E3F               	movwf	??_sha256_update& (0+255),c
   860  00EE7E  503E               	movf	sha256_update@len+1,w,c
   861  00EE80  6E40               	movwf	(??_sha256_update+1)& (0+255),c
   862  00EE82  6A41               	clrf	(??_sha256_update+2)& (0+255),c
   863  00EE84  6A42               	clrf	(??_sha256_update+3)& (0+255),c
   864  00EE86  503F               	movf	??_sha256_update,w,c
   865  00EE88  5C43               	subwf	sha256_update@i,w,c
   866  00EE8A  5040               	movf	??_sha256_update+1,w,c
   867  00EE8C  5844               	subwfb	sha256_update@i+1,w,c
   868  00EE8E  5041               	movf	??_sha256_update+2,w,c
   869  00EE90  5845               	subwfb	sha256_update@i+2,w,c
   870  00EE92  5042               	movf	??_sha256_update+3,w,c
   871  00EE94  5846               	subwfb	sha256_update@i+3,w,c
   872  00EE96  E3AD               	bnc	l909
   873  00EE98  0012               	return		;funcret
   874  00EE9A                     __end_of_sha256_update:
   875                           	opt stack 0
   876  00EE9A                     PL30:
   877                           	opt stack 29
   878  00EE9A  EE20 F040          	lfsr	2,64
   879  00EE9E  5039               	movf	sha256_update@ctx,w,c
   880  00EEA0  26D9               	addwf	fsr2l,f,c
   881  00EEA2  503A               	movf	sha256_update@ctx+1,w,c
   882  00EEA4  22DA               	addwfc	fsr2h,f,c
   883  00EEA6  0012               	return	
   884  00EEA8                     __end_ofPL30:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           prodl	equ	0xFF3
   891                           postinc0	equ	0xFEE
   892                           wreg	equ	0xFE8
   893                           indf1	equ	0xFE7
   894                           postinc1	equ	0xFE6
   895                           postdec1	equ	0xFE5
   896                           fsr1h	equ	0xFE2
   897                           fsr1l	equ	0xFE1
   898                           indf2	equ	0xFDF
   899                           postinc2	equ	0xFDE
   900                           postdec2	equ	0xFDD
   901                           plusw2	equ	0xFDB
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _sha256_init *****************
   907 ;; Defined at:
   908 ;;		line 94 in file "sha256.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  ctx             2    0[COMRAM] PTR struct .
   911 ;;		 -> main@ctx(104), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;Total ram usage:        2 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text3
   937  00EEA8                     __ptext3:
   938                           	opt stack 0
   939  00EEA8                     _sha256_init:
   940                           	opt stack 30
   941                           
   942                           ;sha256.c: 96: ctx->datalen = 0;
   943                           
   944                           ;incstack = 0
   945  00EEA8  EE20 F040          	lfsr	2,64
   946  00EEAC  D85E               	call	PL24	;call to abstracted procedure
   947  00EEAE  D862               	call	PL40	;call to abstracted procedure
   948                           
   949                           ;sha256.c: 97: ctx->bitlen = 0;
   950  00EEB0  EE20 F044          	lfsr	2,68
   951  00EEB4  D85A               	call	PL24	;call to abstracted procedure
   952  00EEB6  D85E               	call	PL40	;call to abstracted procedure
   953                           
   954                           ;sha256.c: 98: ctx->state[0] = 0x6a09e667;
   955  00EEB8  EE20 F048          	lfsr	2,72
   956  00EEBC  D856               	call	PL24	;call to abstracted procedure
   957  00EEBE  0E67               	movlw	103
   958  00EEC0  6EDE               	movwf	postinc2,c
   959  00EEC2  0EE6               	movlw	230
   960  00EEC4  6EDE               	movwf	postinc2,c
   961  00EEC6  0E09               	movlw	9
   962  00EEC8  6EDE               	movwf	postinc2,c
   963  00EECA  0E6A               	movlw	106
   964  00EECC  6EDD               	movwf	postdec2,c
   965                           
   966                           ;sha256.c: 99: ctx->state[1] = 0xbb67ae85;
   967  00EECE  EE20 F04C          	lfsr	2,76
   968  00EED2  D84B               	call	PL24	;call to abstracted procedure
   969  00EED4  0E85               	movlw	133
   970  00EED6  6EDE               	movwf	postinc2,c
   971  00EED8  0EAE               	movlw	174
   972  00EEDA  6EDE               	movwf	postinc2,c
   973  00EEDC  0E67               	movlw	103
   974  00EEDE  6EDE               	movwf	postinc2,c
   975  00EEE0  0EBB               	movlw	187
   976  00EEE2  6EDD               	movwf	postdec2,c
   977                           
   978                           ;sha256.c: 100: ctx->state[2] = 0x3c6ef372;
   979  00EEE4  EE20 F050          	lfsr	2,80
   980  00EEE8  D840               	call	PL24	;call to abstracted procedure
   981  00EEEA  0E72               	movlw	114
   982  00EEEC  6EDE               	movwf	postinc2,c
   983  00EEEE  0EF3               	movlw	243
   984  00EEF0  6EDE               	movwf	postinc2,c
   985  00EEF2  0E6E               	movlw	110
   986  00EEF4  6EDE               	movwf	postinc2,c
   987  00EEF6  0E3C               	movlw	60
   988  00EEF8  6EDD               	movwf	postdec2,c
   989                           
   990                           ;sha256.c: 101: ctx->state[3] = 0xa54ff53a;
   991  00EEFA  EE20 F054          	lfsr	2,84
   992  00EEFE  D835               	call	PL24	;call to abstracted procedure
   993  00EF00  0E3A               	movlw	58
   994  00EF02  6EDE               	movwf	postinc2,c
   995  00EF04  0EF5               	movlw	245
   996  00EF06  6EDE               	movwf	postinc2,c
   997  00EF08  0E4F               	movlw	79
   998  00EF0A  6EDE               	movwf	postinc2,c
   999  00EF0C  0EA5               	movlw	165
  1000  00EF0E  6EDD               	movwf	postdec2,c
  1001                           
  1002                           ;sha256.c: 102: ctx->state[4] = 0x510e527f;
  1003  00EF10  EE20 F058          	lfsr	2,88
  1004  00EF14  D82A               	call	PL24	;call to abstracted procedure
  1005  00EF16  0E7F               	movlw	127
  1006  00EF18  6EDE               	movwf	postinc2,c
  1007  00EF1A  0E52               	movlw	82
  1008  00EF1C  6EDE               	movwf	postinc2,c
  1009  00EF1E  0E0E               	movlw	14
  1010  00EF20  6EDE               	movwf	postinc2,c
  1011  00EF22  0E51               	movlw	81
  1012  00EF24  6EDD               	movwf	postdec2,c
  1013                           
  1014                           ;sha256.c: 103: ctx->state[5] = 0x9b05688c;
  1015  00EF26  EE20 F05C          	lfsr	2,92
  1016  00EF2A  D81F               	call	PL24	;call to abstracted procedure
  1017  00EF2C  0E8C               	movlw	140
  1018  00EF2E  6EDE               	movwf	postinc2,c
  1019  00EF30  0E68               	movlw	104
  1020  00EF32  6EDE               	movwf	postinc2,c
  1021  00EF34  0E05               	movlw	5
  1022  00EF36  6EDE               	movwf	postinc2,c
  1023  00EF38  0E9B               	movlw	155
  1024  00EF3A  6EDD               	movwf	postdec2,c
  1025                           
  1026                           ;sha256.c: 104: ctx->state[6] = 0x1f83d9ab;
  1027  00EF3C  EE20 F060          	lfsr	2,96
  1028  00EF40  D814               	call	PL24	;call to abstracted procedure
  1029  00EF42  0EAB               	movlw	171
  1030  00EF44  6EDE               	movwf	postinc2,c
  1031  00EF46  0ED9               	movlw	217
  1032  00EF48  6EDE               	movwf	postinc2,c
  1033  00EF4A  0E83               	movlw	131
  1034  00EF4C  6EDE               	movwf	postinc2,c
  1035  00EF4E  0E1F               	movlw	31
  1036  00EF50  6EDD               	movwf	postdec2,c
  1037                           
  1038                           ;sha256.c: 105: ctx->state[7] = 0x5be0cd19;
  1039  00EF52  EE20 F064          	lfsr	2,100
  1040  00EF56  D809               	call	PL24	;call to abstracted procedure
  1041  00EF58  0E19               	movlw	25
  1042  00EF5A  6EDE               	movwf	postinc2,c
  1043  00EF5C  0ECD               	movlw	205
  1044  00EF5E  6EDE               	movwf	postinc2,c
  1045  00EF60  0EE0               	movlw	224
  1046  00EF62  6EDE               	movwf	postinc2,c
  1047  00EF64  0E5B               	movlw	91
  1048  00EF66  6EDD               	movwf	postdec2,c
  1049  00EF68  0C5B               	retlw	91	;funcret
  1050  00EF6A                     __end_of_sha256_init:
  1051                           	opt stack 0
  1052  00EF6A                     PL24:
  1053                           	opt stack 30
  1054  00EF6A  5001               	movf	sha256_init@ctx,w,c
  1055  00EF6C  26D9               	addwf	fsr2l,f,c
  1056  00EF6E  5002               	movf	sha256_init@ctx+1,w,c
  1057  00EF70  22DA               	addwfc	fsr2h,f,c
  1058  00EF72  0012               	return	
  1059  00EF74                     __end_ofPL24:
  1060                           	opt stack 0
  1061  00EF74                     PL40:
  1062                           	opt stack 29
  1063  00EF74  6ADE               	clrf	postinc2,c
  1064  00EF76  6ADE               	clrf	postinc2,c
  1065  00EF78  6ADE               	clrf	postinc2,c
  1066  00EF7A  6ADD               	clrf	postdec2,c
  1067  00EF7C  0012               	return	
  1068  00EF7E                     __end_ofPL40:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           prodl	equ	0xFF3
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           indf1	equ	0xFE7
  1078                           postinc1	equ	0xFE6
  1079                           postdec1	equ	0xFE5
  1080                           fsr1h	equ	0xFE2
  1081                           fsr1l	equ	0xFE1
  1082                           indf2	equ	0xFDF
  1083                           postinc2	equ	0xFDE
  1084                           postdec2	equ	0xFDD
  1085                           plusw2	equ	0xFDB
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _sha256_final *****************
  1091 ;; Defined at:
  1092 ;;		line 123 in file "sha256.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  ctx             2   56[COMRAM] PTR struct .
  1095 ;;		 -> main@ctx(104), 
  1096 ;;  hash            2   58[COMRAM] PTR unsigned char 
  1097 ;;		 -> main@buf(32), 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  i               4   66[COMRAM] unsigned long 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:       14 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		_memset
  1118 ;;		_sha256_transform
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text4
  1125  00EF7E                     __ptext4:
  1126                           	opt stack 0
  1127  00EF7E                     _sha256_final:
  1128                           	opt stack 29
  1129                           
  1130                           ;sha256.c: 125: WORD i;
  1131                           ;sha256.c: 127: i = ctx->datalen;
  1132                           
  1133                           ;incstack = 0
  1134  00EF7E  EE20 F040          	lfsr	2,64
  1135  00EF82  D938               	call	PL26	;call to abstracted procedure
  1136  00EF84  CFDE F043          	movff	postinc2,sha256_final@i
  1137  00EF88  CFDE F044          	movff	postinc2,sha256_final@i+1
  1138  00EF8C  CFDE F045          	movff	postinc2,sha256_final@i+2
  1139  00EF90  CFDE F046          	movff	postinc2,sha256_final@i+3
  1140                           
  1141                           ;sha256.c: 130: if (ctx->datalen < 56) {
  1142  00EF94  EE20 F040          	lfsr	2,64
  1143  00EF98  D92D               	call	PL26	;call to abstracted procedure
  1144  00EF9A  0E03               	movlw	3
  1145  00EF9C  50DB               	movf	plusw2,w,c
  1146  00EF9E  E119               	bnz	l937
  1147  00EFA0  0E02               	movlw	2
  1148  00EFA2  50DB               	movf	plusw2,w,c
  1149  00EFA4  E116               	bnz	l937
  1150  00EFA6  0E01               	movlw	1
  1151  00EFA8  50DB               	movf	plusw2,w,c
  1152  00EFAA  E113               	bnz	l937
  1153  00EFAC  0E38               	movlw	56
  1154  00EFAE  5CDE               	subwf	postinc2,w,c
  1155  00EFB0  E210               	bc	l937
  1156                           
  1157                           ;sha256.c: 131: ctx->data[i++] = 0x80;
  1158  00EFB2  D925               	call	PL28	;call to abstracted procedure
  1159  00EFB4  0E80               	movlw	128
  1160  00EFB6  6EDF               	movwf	indf2,c
  1161  00EFB8                     l929:
  1162  00EFB8  D938               	call	PL38	;call to abstracted procedure
  1163                           
  1164                           ;sha256.c: 132: while (i < 56)
  1165  00EFBA  D003               	goto	l935
  1166  00EFBC                     l931:
  1167                           
  1168                           ;sha256.c: 133: ctx->data[i++] = 0x00;
  1169  00EFBC  D920               	call	PL28	;call to abstracted procedure
  1170  00EFBE  6ADF               	clrf	indf2,c
  1171  00EFC0  D7FB               	goto	l929
  1172  00EFC2                     l935:
  1173  00EFC2  5046               	movf	sha256_final@i+3,w,c
  1174  00EFC4  1045               	iorwf	sha256_final@i+2,w,c
  1175  00EFC6  1044               	iorwf	sha256_final@i+1,w,c
  1176  00EFC8  E121               	bnz	l951
  1177  00EFCA  0E38               	movlw	56
  1178  00EFCC  5C43               	subwf	sha256_final@i,w,c
  1179  00EFCE  E21E               	bc	l951
  1180  00EFD0  D7F5               	goto	l931
  1181  00EFD2                     l937:
  1182                           
  1183                           ;sha256.c: 135: else {
  1184                           ;sha256.c: 136: ctx->data[i++] = 0x80;
  1185  00EFD2  D915               	call	PL28	;call to abstracted procedure
  1186  00EFD4  0E80               	movlw	128
  1187  00EFD6  6EDF               	movwf	indf2,c
  1188  00EFD8                     l939:
  1189  00EFD8  D928               	call	PL38	;call to abstracted procedure
  1190                           
  1191                           ;sha256.c: 137: while (i < 64)
  1192  00EFDA  D003               	goto	l945
  1193  00EFDC                     l941:
  1194                           
  1195                           ;sha256.c: 138: ctx->data[i++] = 0x00;
  1196  00EFDC  D910               	call	PL28	;call to abstracted procedure
  1197  00EFDE  6ADF               	clrf	indf2,c
  1198  00EFE0  D7FB               	goto	l939
  1199  00EFE2                     l945:
  1200  00EFE2  5046               	movf	sha256_final@i+3,w,c
  1201  00EFE4  1045               	iorwf	sha256_final@i+2,w,c
  1202  00EFE6  1044               	iorwf	sha256_final@i+1,w,c
  1203  00EFE8  E103               	bnz	u760
  1204  00EFEA  0E40               	movlw	64
  1205  00EFEC  5C43               	subwf	sha256_final@i,w,c
  1206  00EFEE  E3F6               	bnc	l941
  1207  00EFF0                     u760:
  1208                           
  1209                           ;sha256.c: 139: sha256_transform(ctx, ctx->data);
  1210  00EFF0  D90D               	call	PL32	;call to abstracted procedure
  1211  00EFF2  EC1B  F079         	call	_sha256_transform	;wreg free
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;sha256.c: 140: memset(ctx->data, 0, 56);
  1215  00EFF6  C039  F001         	movff	sha256_final@ctx,memset@p1
  1216  00EFFA  C03A  F002         	movff	sha256_final@ctx+1,memset@p1+1
  1217  00EFFE  6A04               	clrf	memset@c+1,c
  1218  00F000  6A03               	clrf	memset@c,c
  1219  00F002  6A06               	clrf	memset@n+1,c
  1220  00F004  0E38               	movlw	56
  1221  00F006  6E05               	movwf	memset@n,c
  1222  00F008  EC9C  F076         	call	_memset	;wreg free
  1223  00F00C                     l951:
  1224                           
  1225                           ;sha256.c: 141: }
  1226                           ;sha256.c: 144: ctx->bitlen += ctx->datalen * 8;
  1227  00F00C  EE20 F040          	lfsr	2,64
  1228  00F010  D8F1               	call	PL26	;call to abstracted procedure
  1229  00F012  CFDE F03D          	movff	postinc2,??_sha256_final
  1230  00F016  CFDE F03E          	movff	postinc2,??_sha256_final+1
  1231  00F01A  CFDE F03F          	movff	postinc2,??_sha256_final+2
  1232  00F01E  CFDE F040          	movff	postinc2,??_sha256_final+3
  1233  00F022  0E03               	movlw	3
  1234  00F024                     u775:
  1235  00F024  90D8               	bcf	status,0,c
  1236  00F026  363D               	rlcf	??_sha256_final,f,c
  1237  00F028  363E               	rlcf	??_sha256_final+1,f,c
  1238  00F02A  363F               	rlcf	??_sha256_final+2,f,c
  1239  00F02C  3640               	rlcf	??_sha256_final+3,f,c
  1240  00F02E  2EE8               	decfsz	wreg,f,c
  1241  00F030  D7F9               	goto	u775
  1242  00F032  EE20 F044          	lfsr	2,68
  1243  00F036  D8DE               	call	PL26	;call to abstracted procedure
  1244  00F038  503D               	movf	??_sha256_final,w,c
  1245  00F03A  26DE               	addwf	postinc2,f,c
  1246  00F03C  503E               	movf	??_sha256_final+1,w,c
  1247  00F03E  22DE               	addwfc	postinc2,f,c
  1248  00F040  503F               	movf	??_sha256_final+2,w,c
  1249  00F042  22DE               	addwfc	postinc2,f,c
  1250  00F044  5040               	movf	??_sha256_final+3,w,c
  1251  00F046  22DE               	addwfc	postinc2,f,c
  1252                           
  1253                           ;sha256.c: 145: ctx->data[63] = ctx->bitlen;
  1254  00F048  EE20 F044          	lfsr	2,68
  1255  00F04C  D8D3               	call	PL26	;call to abstracted procedure
  1256  00F04E  EE10 F03F          	lfsr	1,63
  1257  00F052  5039               	movf	sha256_final@ctx,w,c
  1258  00F054  26E1               	addwf	fsr1l,f,c
  1259  00F056  503A               	movf	sha256_final@ctx+1,w,c
  1260  00F058  22E2               	addwfc	fsr1h,f,c
  1261  00F05A  CFDF FFE7          	movff	indf2,indf1
  1262                           
  1263                           ;sha256.c: 146: ctx->data[62] = ctx->bitlen >> 8;
  1264  00F05E  EE20 F03E          	lfsr	2,62
  1265  00F062  5039               	movf	sha256_final@ctx,w,c
  1266  00F064  D8B3               	call	PL16	;call to abstracted procedure
  1267  00F066  D8A7               	call	PL4	;call to abstracted procedure
  1268  00F068  C03E  F03D         	movff	??_sha256_final+1,??_sha256_final
  1269  00F06C  C03F  F03E         	movff	??_sha256_final+2,??_sha256_final+1
  1270  00F070  C040  F03F         	movff	??_sha256_final+3,??_sha256_final+2
  1271  00F074  6A40               	clrf	??_sha256_final+3,c
  1272  00F076  503D               	movf	??_sha256_final,w,c
  1273  00F078  6EDF               	movwf	indf2,c
  1274                           
  1275                           ;sha256.c: 147: ctx->data[61] = ctx->bitlen >> 16;
  1276  00F07A  EE20 F03D          	lfsr	2,61
  1277  00F07E  5039               	movf	sha256_final@ctx,w,c
  1278  00F080  D8A5               	call	PL16	;call to abstracted procedure
  1279  00F082  D899               	call	PL4	;call to abstracted procedure
  1280  00F084  0E11               	movlw	17
  1281  00F086  D001               	goto	u780
  1282  00F088                     u785:
  1283  00F088  D8CA               	call	PL34	;call to abstracted procedure
  1284  00F08A                     u780:
  1285  00F08A  2EE8               	decfsz	wreg,f,c
  1286  00F08C  D7FD               	goto	u785
  1287  00F08E  503D               	movf	??_sha256_final,w,c
  1288  00F090  6EDF               	movwf	indf2,c
  1289                           
  1290                           ;sha256.c: 148: ctx->data[60] = ctx->bitlen >> 24;
  1291  00F092  EE20 F03C          	lfsr	2,60
  1292  00F096  5039               	movf	sha256_final@ctx,w,c
  1293  00F098  D899               	call	PL16	;call to abstracted procedure
  1294  00F09A  D88D               	call	PL4	;call to abstracted procedure
  1295  00F09C  0E19               	movlw	25
  1296  00F09E  D001               	goto	u790
  1297  00F0A0                     u795:
  1298  00F0A0  D8BE               	call	PL34	;call to abstracted procedure
  1299  00F0A2                     u790:
  1300  00F0A2  2EE8               	decfsz	wreg,f,c
  1301  00F0A4  D7FD               	goto	u795
  1302  00F0A6  503D               	movf	??_sha256_final,w,c
  1303  00F0A8  6EDF               	movwf	indf2,c
  1304                           
  1305                           ;sha256.c: 153: sha256_transform(ctx, ctx->data);
  1306  00F0AA  D8B0               	call	PL32	;call to abstracted procedure
  1307  00F0AC  EC1B  F079         	call	_sha256_transform	;wreg free
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;sha256.c: 157: for (i = 0; i < 4; ++i) {
  1311  00F0B0  6A43               	clrf	sha256_final@i,c
  1312  00F0B2  6A44               	clrf	sha256_final@i+1,c
  1313  00F0B4  6A45               	clrf	sha256_final@i+2,c
  1314  00F0B6  6A46               	clrf	sha256_final@i+3,c
  1315  00F0B8                     l969:
  1316                           
  1317                           ;sha256.c: 158: hash[i] = (ctx->state[0] >> (24 - i * 8)) & 0x000000ff;
  1318  00F0B8  5043               	movf	sha256_final@i,w,c
  1319  00F0BA  243B               	addwf	sha256_final@hash,w,c
  1320  00F0BC  6ED9               	movwf	fsr2l,c
  1321  00F0BE  5044               	movf	sha256_final@i+1,w,c
  1322  00F0C0  203C               	addwfc	sha256_final@hash+1,w,c
  1323  00F0C2  6EDA               	movwf	fsr2h,c
  1324  00F0C4  EE10 F048          	lfsr	1,72
  1325  00F0C8  5039               	movf	sha256_final@ctx,w,c
  1326  00F0CA  26E1               	addwf	fsr1l,f,c
  1327  00F0CC  503A               	movf	sha256_final@ctx+1,w,c
  1328  00F0CE  22E2               	addwfc	fsr1h,f,c
  1329  00F0D0  CFE6 F03D          	movff	postinc1,??_sha256_final
  1330  00F0D4  CFE6 F03E          	movff	postinc1,??_sha256_final+1
  1331  00F0D8  D86E               	call	PL4	;call to abstracted procedure
  1332  00F0DA  D872               	call	PL6	;call to abstracted procedure
  1333  00F0DC  D001               	goto	u800
  1334  00F0DE                     u805:
  1335  00F0DE  D89F               	call	PL34	;call to abstracted procedure
  1336  00F0E0                     u800:
  1337  00F0E0  2EE8               	decfsz	wreg,f,c
  1338  00F0E2  D7FD               	goto	u805
  1339  00F0E4  503D               	movf	??_sha256_final,w,c
  1340  00F0E6  6EDF               	movwf	indf2,c
  1341                           
  1342                           ;sha256.c: 159: hash[i + 4] = (ctx->state[1] >> (24 - i * 8)) & 0x000000ff;
  1343  00F0E8  5043               	movf	sha256_final@i,w,c
  1344  00F0EA  243B               	addwf	sha256_final@hash,w,c
  1345  00F0EC  6E3D               	movwf	??_sha256_final& (0+255),c
  1346  00F0EE  5044               	movf	sha256_final@i+1,w,c
  1347  00F0F0  203C               	addwfc	sha256_final@hash+1,w,c
  1348  00F0F2  6E3E               	movwf	(??_sha256_final+1)& (0+255),c
  1349  00F0F4  0E04               	movlw	4
  1350  00F0F6  D878               	call	PL22	;call to abstracted procedure
  1351  00F0F8  EE10 F04C          	lfsr	1,76
  1352                           
  1353                           ;sha256.c: 160: hash[i + 8] = (ctx->state[2] >> (24 - i * 8)) & 0x000000ff;
  1354  00F0FC  D83A               	call	PL2	;call to abstracted procedure
  1355  00F0FE  0E08               	movlw	8
  1356  00F100  D873               	call	PL22	;call to abstracted procedure
  1357  00F102  EE10 F050          	lfsr	1,80
  1358                           
  1359                           ;sha256.c: 161: hash[i + 12] = (ctx->state[3] >> (24 - i * 8)) & 0x000000ff;
  1360  00F106  D835               	call	PL2	;call to abstracted procedure
  1361  00F108  0E0C               	movlw	12
  1362  00F10A  D86E               	call	PL22	;call to abstracted procedure
  1363  00F10C  EE10 F054          	lfsr	1,84
  1364                           
  1365                           ;sha256.c: 162: hash[i + 16] = (ctx->state[4] >> (24 - i * 8)) & 0x000000ff;
  1366  00F110  D830               	call	PL2	;call to abstracted procedure
  1367  00F112  0E10               	movlw	16
  1368  00F114  D869               	call	PL22	;call to abstracted procedure
  1369  00F116  EE10 F058          	lfsr	1,88
  1370                           
  1371                           ;sha256.c: 163: hash[i + 20] = (ctx->state[5] >> (24 - i * 8)) & 0x000000ff;
  1372  00F11A  D82B               	call	PL2	;call to abstracted procedure
  1373  00F11C  0E14               	movlw	20
  1374  00F11E  D864               	call	PL22	;call to abstracted procedure
  1375  00F120  EE10 F05C          	lfsr	1,92
  1376                           
  1377                           ;sha256.c: 164: hash[i + 24] = (ctx->state[6] >> (24 - i * 8)) & 0x000000ff;
  1378  00F124  D826               	call	PL2	;call to abstracted procedure
  1379  00F126  0E18               	movlw	24
  1380  00F128  D85F               	call	PL22	;call to abstracted procedure
  1381  00F12A  EE10 F060          	lfsr	1,96
  1382                           
  1383                           ;sha256.c: 165: hash[i + 28] = (ctx->state[7] >> (24 - i * 8)) & 0x000000ff;
  1384  00F12E  D821               	call	PL2	;call to abstracted procedure
  1385  00F130  0E1C               	movlw	28
  1386  00F132  D85A               	call	PL22	;call to abstracted procedure
  1387  00F134  EE10 F064          	lfsr	1,100
  1388  00F138  5039               	movf	sha256_final@ctx,w,c
  1389  00F13A  26E1               	addwf	fsr1l,f,c
  1390  00F13C  503A               	movf	sha256_final@ctx+1,w,c
  1391  00F13E  22E2               	addwfc	fsr1h,f,c
  1392  00F140  D83A               	call	PL4	;call to abstracted procedure
  1393  00F142  CFE6 F041          	movff	postinc1,??_sha256_final+4
  1394  00F146  CFE6 F042          	movff	postinc1,??_sha256_final+5
  1395  00F14A  D83A               	call	PL6	;call to abstracted procedure
  1396  00F14C  D005               	goto	u870
  1397  00F14E                     u875:
  1398  00F14E  90D8               	bcf	status,0,c
  1399  00F150  3242               	rrcf	??_sha256_final+5,f,c
  1400  00F152  3241               	rrcf	??_sha256_final+4,f,c
  1401  00F154  3240               	rrcf	??_sha256_final+3,f,c
  1402  00F156  323F               	rrcf	??_sha256_final+2,f,c
  1403  00F158                     u870:
  1404  00F158  2EE8               	decfsz	wreg,f,c
  1405  00F15A  D7F9               	goto	u875
  1406  00F15C  503F               	movf	??_sha256_final+2,w,c
  1407  00F15E  6EDF               	movwf	indf2,c
  1408  00F160  D864               	call	PL38	;call to abstracted procedure
  1409  00F162  5046               	movf	sha256_final@i+3,w,c
  1410  00F164  1045               	iorwf	sha256_final@i+2,w,c
  1411  00F166  1044               	iorwf	sha256_final@i+1,w,c
  1412  00F168  E103               	bnz	u880
  1413  00F16A  0E04               	movlw	4
  1414  00F16C  5C43               	subwf	sha256_final@i,w,c
  1415  00F16E  E3A4               	bnc	l969
  1416  00F170                     u880:
  1417  00F170  0012               	return		;funcret
  1418  00F172                     __end_of_sha256_final:
  1419                           	opt stack 0
  1420  00F172                     PL2:
  1421                           	opt stack 29
  1422  00F172  5039               	movf	sha256_final@ctx,w,c
  1423  00F174  26E1               	addwf	fsr1l,f,c
  1424  00F176  503A               	movf	sha256_final@ctx+1,w,c
  1425  00F178  22E2               	addwfc	fsr1h,f,c
  1426  00F17A  CFE6 F03F          	movff	postinc1,??_sha256_final+2
  1427  00F17E  CFE6 F040          	movff	postinc1,??_sha256_final+3
  1428  00F182  CFE6 F041          	movff	postinc1,??_sha256_final+4
  1429  00F186  CFE6 F042          	movff	postinc1,??_sha256_final+5
  1430  00F18A  5043               	movf	sha256_final@i,w,c
  1431  00F18C  0DF8               	mullw	-8
  1432  00F18E  50F3               	movf	prodl,w,c
  1433  00F190  0F18               	addlw	24
  1434  00F192  2AE8               	incf	wreg,f,c
  1435  00F194  D005               	goto	u810
  1436  00F196                     u815:
  1437  00F196  90D8               	bcf	status,0,c
  1438  00F198  3242               	rrcf	??_sha256_final+5,f,c
  1439  00F19A  3241               	rrcf	??_sha256_final+4,f,c
  1440  00F19C  3240               	rrcf	??_sha256_final+3,f,c
  1441  00F19E  323F               	rrcf	??_sha256_final+2,f,c
  1442  00F1A0                     u810:
  1443  00F1A0  2EE8               	decfsz	wreg,f,c
  1444  00F1A2  D7F9               	goto	u815
  1445  00F1A4  503F               	movf	??_sha256_final+2,w,c
  1446  00F1A6  6EDF               	movwf	indf2,c
  1447  00F1A8  5043               	movf	sha256_final@i,w,c
  1448  00F1AA  243B               	addwf	sha256_final@hash,w,c
  1449  00F1AC  6E3D               	movwf	??_sha256_final& (0+255),c
  1450  00F1AE  5044               	movf	sha256_final@i+1,w,c
  1451  00F1B0  203C               	addwfc	sha256_final@hash+1,w,c
  1452  00F1B2  6E3E               	movwf	(??_sha256_final+1)& (0+255),c
  1453  00F1B4  0012               	return	
  1454  00F1B6                     __end_ofPL2:
  1455                           	opt stack 0
  1456  00F1B6                     PL4:
  1457                           	opt stack 29
  1458  00F1B6  CFE6 F03F          	movff	postinc1,??_sha256_final+2
  1459  00F1BA  CFE6 F040          	movff	postinc1,??_sha256_final+3
  1460  00F1BE  0012               	return	
  1461  00F1C0                     __end_ofPL4:
  1462                           	opt stack 0
  1463  00F1C0                     PL6:
  1464                           	opt stack 29
  1465  00F1C0  5043               	movf	sha256_final@i,w,c
  1466  00F1C2  0DF8               	mullw	-8
  1467  00F1C4  50F3               	movf	prodl,w,c
  1468  00F1C6  0F18               	addlw	24
  1469  00F1C8  2AE8               	incf	wreg,f,c
  1470  00F1CA  0012               	return	
  1471  00F1CC                     __end_ofPL6:
  1472                           	opt stack 0
  1473  00F1CC                     PL16:
  1474                           	opt stack 29
  1475  00F1CC  26D9               	addwf	fsr2l,f,c
  1476  00F1CE  503A               	movf	sha256_final@ctx+1,w,c
  1477  00F1D0  22DA               	addwfc	fsr2h,f,c
  1478  00F1D2  EE10 F044          	lfsr	1,68
  1479  00F1D6  5039               	movf	sha256_final@ctx,w,c
  1480  00F1D8  26E1               	addwf	fsr1l,f,c
  1481  00F1DA  503A               	movf	sha256_final@ctx+1,w,c
  1482  00F1DC  22E2               	addwfc	fsr1h,f,c
  1483  00F1DE  CFE6 F03D          	movff	postinc1,??_sha256_final
  1484  00F1E2  CFE6 F03E          	movff	postinc1,??_sha256_final+1
  1485  00F1E6  0012               	return	
  1486  00F1E8                     __end_ofPL16:
  1487                           	opt stack 0
  1488  00F1E8                     PL22:
  1489                           	opt stack 29
  1490  00F1E8  243D               	addwf	??_sha256_final,w,c
  1491  00F1EA  6ED9               	movwf	fsr2l,c
  1492  00F1EC  0E00               	movlw	0
  1493  00F1EE  203E               	addwfc	??_sha256_final+1,w,c
  1494  00F1F0  6EDA               	movwf	fsr2h,c
  1495  00F1F2  0012               	return	
  1496  00F1F4                     __end_ofPL22:
  1497                           	opt stack 0
  1498  00F1F4                     PL26:
  1499                           	opt stack 29
  1500  00F1F4  5039               	movf	sha256_final@ctx,w,c
  1501  00F1F6  26D9               	addwf	fsr2l,f,c
  1502  00F1F8  503A               	movf	sha256_final@ctx+1,w,c
  1503  00F1FA  22DA               	addwfc	fsr2h,f,c
  1504  00F1FC  0012               	return	
  1505  00F1FE                     __end_ofPL26:
  1506                           	opt stack 0
  1507  00F1FE                     PL28:
  1508                           	opt stack 29
  1509  00F1FE  5043               	movf	sha256_final@i,w,c
  1510  00F200  2439               	addwf	sha256_final@ctx,w,c
  1511  00F202  6ED9               	movwf	fsr2l,c
  1512  00F204  5044               	movf	sha256_final@i+1,w,c
  1513  00F206  203A               	addwfc	sha256_final@ctx+1,w,c
  1514  00F208  6EDA               	movwf	fsr2h,c
  1515  00F20A  0012               	return	
  1516  00F20C                     __end_ofPL28:
  1517                           	opt stack 0
  1518  00F20C                     PL32:
  1519                           	opt stack 29
  1520  00F20C  C039  F001         	movff	sha256_final@ctx,sha256_transform@ctx
  1521  00F210  C03A  F002         	movff	sha256_final@ctx+1,sha256_transform@ctx+1
  1522  00F214  C039  F003         	movff	sha256_final@ctx,sha256_transform@data
  1523  00F218  C03A  F004         	movff	sha256_final@ctx+1,sha256_transform@data+1
  1524  00F21C  0012               	return	
  1525  00F21E                     __end_ofPL32:
  1526                           	opt stack 0
  1527  00F21E                     PL34:
  1528                           	opt stack 29
  1529  00F21E  90D8               	bcf	status,0,c
  1530  00F220  3240               	rrcf	??_sha256_final+3,f,c
  1531  00F222  323F               	rrcf	??_sha256_final+2,f,c
  1532  00F224  323E               	rrcf	??_sha256_final+1,f,c
  1533  00F226  323D               	rrcf	??_sha256_final,f,c
  1534  00F228  0012               	return	
  1535  00F22A                     __end_ofPL34:
  1536                           	opt stack 0
  1537  00F22A                     PL38:
  1538                           	opt stack 29
  1539  00F22A  2A43               	incf	sha256_final@i,f,c
  1540  00F22C  0E00               	movlw	0
  1541  00F22E  2244               	addwfc	sha256_final@i+1,f,c
  1542  00F230  2245               	addwfc	sha256_final@i+2,f,c
  1543  00F232  2246               	addwfc	sha256_final@i+3,f,c
  1544  00F234  0C00               	retlw	0
  1545  00F236                     __end_ofPL38:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodl	equ	0xFF3
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           indf1	equ	0xFE7
  1555                           postinc1	equ	0xFE6
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           indf2	equ	0xFDF
  1560                           postinc2	equ	0xFDE
  1561                           postdec2	equ	0xFDD
  1562                           plusw2	equ	0xFDB
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _sha256_transform *****************
  1568 ;; Defined at:
  1569 ;;		line 44 in file "sha256.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  ctx             2    0[COMRAM] PTR struct .
  1572 ;;		 -> main@ctx(104), 
  1573 ;;  data            2    2[COMRAM] PTR const unsigned char 
  1574 ;;		 -> ctx.data(64), main@ctx(104), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  m             256    0[BANK1 ] unsigned long [64]
  1577 ;;  i               4   52[COMRAM] unsigned long 
  1578 ;;  e               4   48[COMRAM] unsigned long 
  1579 ;;  a               4   44[COMRAM] unsigned long 
  1580 ;;  l               4   40[COMRAM] unsigned long 
  1581 ;;  j               4   36[COMRAM] unsigned long 
  1582 ;;  c               4   32[COMRAM] unsigned long 
  1583 ;;  b               4   28[COMRAM] unsigned long 
  1584 ;;  g               4   24[COMRAM] unsigned long 
  1585 ;;  f               4   20[COMRAM] unsigned long 
  1586 ;;  h               4   16[COMRAM] unsigned long 
  1587 ;;  d               4   12[COMRAM] unsigned long 
  1588 ;;  t1              4    8[COMRAM] unsigned long 
  1589 ;;  t2              4    4[COMRAM] unsigned long 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : F/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:        52       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0     142       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:        56     142     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:      454 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_sha256_update
  1609 ;;		_sha256_final
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text5
  1614  00F236                     __ptext5:
  1615                           	opt stack 0
  1616  00F236                     _sha256_transform:
  1617                           	opt stack 0
  1618                           
  1619                           ;sha256.c: 46: WORD a, b, c, d, e, f, g, h, i, j, t1, t2, m[64],l;
  1620                           ;sha256.c: 48: for (i = 0, j = 0; i < 16; ++i, j += 4){
  1621                           
  1622                           ;incstack = 0
  1623  00F236  EC7A  F07F         	call	PL48	;call to abstracted procedure
  1624  00F23A  6A25               	clrf	sha256_transform@j,c
  1625  00F23C  6A26               	clrf	sha256_transform@j+1,c
  1626  00F23E  6A27               	clrf	sha256_transform@j+2,c
  1627  00F240  6A28               	clrf	sha256_transform@j+3,c
  1628  00F242                     l835:
  1629                           
  1630                           ;sha256.c: 49: l=data[j];
  1631  00F242  5025               	movf	sha256_transform@j,w,c
  1632  00F244  2403               	addwf	sha256_transform@data,w,c
  1633  00F246  6ED9               	movwf	fsr2l,c
  1634  00F248  5026               	movf	sha256_transform@j+1,w,c
  1635  00F24A  2004               	addwfc	sha256_transform@data+1,w,c
  1636  00F24C  6EDA               	movwf	fsr2h,c
  1637  00F24E  50DF               	movf	indf2,w,c
  1638  00F250  6E29               	movwf	sha256_transform@l,c
  1639  00F252  6A2A               	clrf	sha256_transform@l+1,c
  1640  00F254  6A2B               	clrf	sha256_transform@l+2,c
  1641  00F256  6A2C               	clrf	sha256_transform@l+3,c
  1642                           
  1643                           ;sha256.c: 50: m[i]=l<<24;
  1644  00F258  C029  F060         	movff	sha256_transform@l,??_sha256_transform
  1645  00F25C  C02A  F061         	movff	sha256_transform@l+1,??_sha256_transform+1
  1646  00F260  C02B  F062         	movff	sha256_transform@l+2,??_sha256_transform+2
  1647  00F264  C02C  F063         	movff	sha256_transform@l+3,??_sha256_transform+3
  1648  00F268  C060  F063         	movff	??_sha256_transform,??_sha256_transform+3
  1649  00F26C  0100               	movlb	0	; () banked
  1650  00F26E  6B62               	clrf	(??_sha256_transform+2)& (0+255),b
  1651  00F270  6B61               	clrf	(??_sha256_transform+1)& (0+255),b
  1652  00F272  6B60               	clrf	??_sha256_transform& (0+255),b
  1653  00F274  0E00               	movlw	low sha256_transform@m
  1654  00F276  6F64               	movwf	(??_sha256_transform+4)& (0+255),b
  1655  00F278  0E01               	movlw	high sha256_transform@m
  1656  00F27A  6F65               	movwf	(??_sha256_transform+5)& (0+255),b
  1657  00F27C  EC2F  F07F         	call	PL12	;call to abstracted procedure
  1658  00F280  5164               	movf	(??_sha256_transform+4)& (0+255),w,b
  1659  00F282  26D9               	addwf	fsr2l,f,c
  1660  00F284  5165               	movf	(??_sha256_transform+5)& (0+255),w,b
  1661  00F286  22DA               	addwfc	fsr2h,f,c
  1662  00F288  C060  FFDE         	movff	??_sha256_transform,postinc2
  1663  00F28C  C061  FFDE         	movff	??_sha256_transform+1,postinc2
  1664  00F290  C062  FFDE         	movff	??_sha256_transform+2,postinc2
  1665  00F294  C063  FFDE         	movff	??_sha256_transform+3,postinc2
  1666                           
  1667                           ;sha256.c: 51: l=data[j+1];
  1668  00F298  5025               	movf	sha256_transform@j,w,c
  1669  00F29A  2403               	addwf	sha256_transform@data,w,c
  1670  00F29C  6F60               	movwf	??_sha256_transform& (0+255),b
  1671  00F29E  5026               	movf	sha256_transform@j+1,w,c
  1672  00F2A0  2004               	addwfc	sha256_transform@data+1,w,c
  1673  00F2A2  6F61               	movwf	(??_sha256_transform+1)& (0+255),b
  1674  00F2A4  2960               	incf	??_sha256_transform& (0+255),w,b
  1675  00F2A6  EC25  F07F         	call	PL10	;call to abstracted procedure
  1676                           
  1677                           ;sha256.c: 52: m[i]=m[i]|(l<<16);
  1678  00F2AA  EC0C  F07F         	call	PL8	;call to abstracted procedure
  1679  00F2AE  C029  F066         	movff	sha256_transform@l,??_sha256_transform+6
  1680  00F2B2  C02A  F067         	movff	sha256_transform@l+1,??_sha256_transform+7
  1681  00F2B6  C02B  F068         	movff	sha256_transform@l+2,??_sha256_transform+8
  1682  00F2BA  C02C  F069         	movff	sha256_transform@l+3,??_sha256_transform+9
  1683  00F2BE  C067  F069         	movff	??_sha256_transform+7,??_sha256_transform+9
  1684  00F2C2  C066  F068         	movff	??_sha256_transform+6,??_sha256_transform+8
  1685  00F2C6  6B67               	clrf	(??_sha256_transform+7)& (0+255),b
  1686  00F2C8  EC38  F07F         	call	PL14	;call to abstracted procedure
  1687  00F2CC  EC2F  F07F         	call	PL12	;call to abstracted procedure
  1688                           
  1689                           ;sha256.c: 53: l=data[j+2];
  1690  00F2D0  EC4F  F07F         	call	PL20	;call to abstracted procedure
  1691  00F2D4  0E02               	movlw	2
  1692  00F2D6  2560               	addwf	??_sha256_transform& (0+255),w,b
  1693  00F2D8  EC25  F07F         	call	PL10	;call to abstracted procedure
  1694                           
  1695                           ;sha256.c: 54: m[i]=m[i]|(l<<8);
  1696  00F2DC  EC0C  F07F         	call	PL8	;call to abstracted procedure
  1697  00F2E0  C029  F067         	movff	sha256_transform@l,??_sha256_transform+7
  1698  00F2E4  C02A  F068         	movff	sha256_transform@l+1,??_sha256_transform+8
  1699  00F2E8  C02B  F069         	movff	sha256_transform@l+2,??_sha256_transform+9
  1700  00F2EC  EC38  F07F         	call	PL14	;call to abstracted procedure
  1701  00F2F0  EC2F  F07F         	call	PL12	;call to abstracted procedure
  1702                           
  1703                           ;sha256.c: 55: l=data[j+3];
  1704  00F2F4  EC4F  F07F         	call	PL20	;call to abstracted procedure
  1705  00F2F8  0E03               	movlw	3
  1706  00F2FA  2560               	addwf	??_sha256_transform& (0+255),w,b
  1707  00F2FC  EC25  F07F         	call	PL10	;call to abstracted procedure
  1708                           
  1709                           ;sha256.c: 56: m[i]=m[i]|l;
  1710  00F300  EC0C  F07F         	call	PL8	;call to abstracted procedure
  1711  00F304  5029               	movf	sha256_transform@l,w,c
  1712  00F306  1162               	iorwf	(??_sha256_transform+2)& (0+255),w,b
  1713  00F308  6F66               	movwf	(??_sha256_transform+6)& (0+255),b
  1714  00F30A  502A               	movf	sha256_transform@l+1,w,c
  1715  00F30C  1163               	iorwf	(??_sha256_transform+3)& (0+255),w,b
  1716  00F30E  6F67               	movwf	(??_sha256_transform+7)& (0+255),b
  1717  00F310  502B               	movf	sha256_transform@l+2,w,c
  1718  00F312  1164               	iorwf	(??_sha256_transform+4)& (0+255),w,b
  1719  00F314  6F68               	movwf	(??_sha256_transform+8)& (0+255),b
  1720  00F316  502C               	movf	sha256_transform@l+3,w,c
  1721  00F318  1165               	iorwf	(??_sha256_transform+5)& (0+255),w,b
  1722  00F31A  6F69               	movwf	(??_sha256_transform+9)& (0+255),b
  1723  00F31C  0E00               	movlw	low sha256_transform@m
  1724  00F31E  6F6A               	movwf	(??_sha256_transform+10)& (0+255),b
  1725  00F320  0E01               	movlw	high sha256_transform@m
  1726  00F322  6F6B               	movwf	(??_sha256_transform+11)& (0+255),b
  1727  00F324  EC2F  F07F         	call	PL12	;call to abstracted procedure
  1728  00F328  516A               	movf	(??_sha256_transform+10)& (0+255),w,b
  1729  00F32A  26D9               	addwf	fsr2l,f,c
  1730  00F32C  516B               	movf	(??_sha256_transform+11)& (0+255),w,b
  1731  00F32E  22DA               	addwfc	fsr2h,f,c
  1732  00F330  C066  FFDE         	movff	??_sha256_transform+6,postinc2
  1733  00F334  C067  FFDE         	movff	??_sha256_transform+7,postinc2
  1734  00F338  C068  FFDE         	movff	??_sha256_transform+8,postinc2
  1735  00F33C  C069  FFDE         	movff	??_sha256_transform+9,postinc2
  1736                           
  1737                           ; BSR set to: 0
  1738  00F340  EC62  F07F         	call	PL36	;call to abstracted procedure
  1739                           
  1740                           ; BSR set to: 0
  1741  00F344  0E04               	movlw	4
  1742  00F346  2625               	addwf	sha256_transform@j,f,c
  1743  00F348  0E00               	movlw	0
  1744  00F34A  2226               	addwfc	sha256_transform@j+1,f,c
  1745  00F34C  2227               	addwfc	sha256_transform@j+2,f,c
  1746  00F34E  2228               	addwfc	sha256_transform@j+3,f,c
  1747                           
  1748                           ; BSR set to: 0
  1749  00F350  5038               	movf	sha256_transform@i+3,w,c
  1750  00F352  1037               	iorwf	sha256_transform@i+2,w,c
  1751  00F354  1036               	iorwf	sha256_transform@i+1,w,c
  1752  00F356  E104               	bnz	u450
  1753  00F358  0E10               	movlw	16
  1754  00F35A  5C35               	subwf	sha256_transform@i,w,c
  1755  00F35C  E201 D771          	bnc	l835
  1756  00F360                     u450:
  1757  00F360                     l843:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;sha256.c: 58: }
  1761                           ;sha256.c: 59: for ( ; i < 64; ++i)
  1762  00F360  5038               	movf	sha256_transform@i+3,w,c
  1763  00F362  1037               	iorwf	sha256_transform@i+2,w,c
  1764  00F364  1036               	iorwf	sha256_transform@i+1,w,c
  1765  00F366  E105               	bnz	u460
  1766  00F368  0E40               	movlw	64
  1767  00F36A  5C35               	subwf	sha256_transform@i,w,c
  1768  00F36C  E301 D25A          	bc	l853
  1769  00F370  D001               	goto	l847
  1770  00F372                     u460:
  1771  00F372  D258               	goto	l853
  1772  00F374                     l847:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;sha256.c: 60: m[i] = ((((m[i - 2]) >> (17)) | ((m[i - 2]) << (32-(17)))) ^ (((m[i - 2])
      +                           >> (19)) | ((m[i - 2]) << (32-(19)))) ^ ((m[i - 2]) >> 10)) + m[i - 7] + ((((m[i - 15])
      +                           >> (7)) | ((m[i - 15]) << (32-(7)))) ^ (((m[i - 15]) >> (18)) | ((m[i - 15]) << (32-(18
      +                          )
  1776  00F374  0EC0               	movlw	192
  1777  00F376  6F60               	movwf	??_sha256_transform& (0+255),b
  1778  00F378  6961               	setf	(??_sha256_transform+1)& (0+255),b
  1779  00F37A  C035  F062         	movff	sha256_transform@i,??_sha256_transform+2
  1780  00F37E  C036  F063         	movff	sha256_transform@i+1,??_sha256_transform+3
  1781  00F382  90D8               	bcf	status,0,c
  1782  00F384  3762               	rlcf	(??_sha256_transform+2)& (0+255),f,b
  1783  00F386  3763               	rlcf	(??_sha256_transform+3)& (0+255),f,b
  1784  00F388  90D8               	bcf	status,0,c
  1785  00F38A  3762               	rlcf	(??_sha256_transform+2)& (0+255),f,b
  1786  00F38C  3763               	rlcf	(??_sha256_transform+3)& (0+255),f,b
  1787  00F38E  5160               	movf	??_sha256_transform& (0+255),w,b
  1788  00F390  2762               	addwf	(??_sha256_transform+2)& (0+255),f,b
  1789  00F392  5161               	movf	(??_sha256_transform+1)& (0+255),w,b
  1790  00F394  2363               	addwfc	(??_sha256_transform+3)& (0+255),f,b
  1791  00F396  0E00               	movlw	low sha256_transform@m
  1792  00F398  2562               	addwf	(??_sha256_transform+2)& (0+255),w,b
  1793  00F39A  6ED9               	movwf	fsr2l,c
  1794  00F39C  0E01               	movlw	high sha256_transform@m
  1795  00F39E  2163               	addwfc	(??_sha256_transform+3)& (0+255),w,b
  1796  00F3A0  6EDA               	movwf	fsr2h,c
  1797  00F3A2  CFDE F064          	movff	postinc2,??_sha256_transform+4
  1798  00F3A6  CFDE F065          	movff	postinc2,??_sha256_transform+5
  1799  00F3AA  CFDE F066          	movff	postinc2,??_sha256_transform+6
  1800  00F3AE  CFDE F067          	movff	postinc2,??_sha256_transform+7
  1801  00F3B2  0EE4               	movlw	228
  1802  00F3B4  6F68               	movwf	(??_sha256_transform+8)& (0+255),b
  1803  00F3B6  6969               	setf	(??_sha256_transform+9)& (0+255),b
  1804  00F3B8  C035  F06A         	movff	sha256_transform@i,??_sha256_transform+10
  1805  00F3BC  C036  F06B         	movff	sha256_transform@i+1,??_sha256_transform+11
  1806  00F3C0  90D8               	bcf	status,0,c
  1807  00F3C2  376A               	rlcf	(??_sha256_transform+10)& (0+255),f,b
  1808  00F3C4  376B               	rlcf	(??_sha256_transform+11)& (0+255),f,b
  1809  00F3C6  90D8               	bcf	status,0,c
  1810  00F3C8  376A               	rlcf	(??_sha256_transform+10)& (0+255),f,b
  1811  00F3CA  376B               	rlcf	(??_sha256_transform+11)& (0+255),f,b
  1812  00F3CC  5168               	movf	(??_sha256_transform+8)& (0+255),w,b
  1813  00F3CE  276A               	addwf	(??_sha256_transform+10)& (0+255),f,b
  1814  00F3D0  5169               	movf	(??_sha256_transform+9)& (0+255),w,b
  1815  00F3D2  236B               	addwfc	(??_sha256_transform+11)& (0+255),f,b
  1816  00F3D4  0E00               	movlw	low sha256_transform@m
  1817  00F3D6  256A               	addwf	(??_sha256_transform+10)& (0+255),w,b
  1818  00F3D8  6ED9               	movwf	fsr2l,c
  1819  00F3DA  0E01               	movlw	high sha256_transform@m
  1820  00F3DC  216B               	addwfc	(??_sha256_transform+11)& (0+255),w,b
  1821  00F3DE  6EDA               	movwf	fsr2h,c
  1822  00F3E0  CFDE F06C          	movff	postinc2,??_sha256_transform+12
  1823  00F3E4  CFDE F06D          	movff	postinc2,??_sha256_transform+13
  1824  00F3E8  CFDE F06E          	movff	postinc2,??_sha256_transform+14
  1825  00F3EC  CFDE F06F          	movff	postinc2,??_sha256_transform+15
  1826  00F3F0  0EC4               	movlw	196
  1827  00F3F2  6F70               	movwf	(??_sha256_transform+16)& (0+255),b
  1828  00F3F4  6971               	setf	(??_sha256_transform+17)& (0+255),b
  1829  00F3F6  C035  F072         	movff	sha256_transform@i,??_sha256_transform+18
  1830  00F3FA  C036  F073         	movff	sha256_transform@i+1,??_sha256_transform+19
  1831  00F3FE  90D8               	bcf	status,0,c
  1832  00F400  3772               	rlcf	(??_sha256_transform+18)& (0+255),f,b
  1833  00F402  3773               	rlcf	(??_sha256_transform+19)& (0+255),f,b
  1834  00F404  90D8               	bcf	status,0,c
  1835  00F406  3772               	rlcf	(??_sha256_transform+18)& (0+255),f,b
  1836  00F408  3773               	rlcf	(??_sha256_transform+19)& (0+255),f,b
  1837  00F40A  5170               	movf	(??_sha256_transform+16)& (0+255),w,b
  1838  00F40C  2772               	addwf	(??_sha256_transform+18)& (0+255),f,b
  1839  00F40E  5171               	movf	(??_sha256_transform+17)& (0+255),w,b
  1840  00F410  2373               	addwfc	(??_sha256_transform+19)& (0+255),f,b
  1841  00F412  0E00               	movlw	low sha256_transform@m
  1842  00F414  2572               	addwf	(??_sha256_transform+18)& (0+255),w,b
  1843  00F416  6ED9               	movwf	fsr2l,c
  1844  00F418  0E01               	movlw	high sha256_transform@m
  1845  00F41A  2173               	addwfc	(??_sha256_transform+19)& (0+255),w,b
  1846  00F41C  6EDA               	movwf	fsr2h,c
  1847  00F41E  CFDE F074          	movff	postinc2,??_sha256_transform+20
  1848  00F422  CFDE F075          	movff	postinc2,??_sha256_transform+21
  1849  00F426  CFDE F076          	movff	postinc2,??_sha256_transform+22
  1850  00F42A  CFDE F077          	movff	postinc2,??_sha256_transform+23
  1851  00F42E  0E04               	movlw	4
  1852  00F430  D005               	goto	u470
  1853  00F432                     u475:
  1854  00F432  90D8               	bcf	status,0,c
  1855  00F434  3377               	rrcf	(??_sha256_transform+23)& (0+255),f,b
  1856  00F436  3376               	rrcf	(??_sha256_transform+22)& (0+255),f,b
  1857  00F438  3375               	rrcf	(??_sha256_transform+21)& (0+255),f,b
  1858  00F43A  3374               	rrcf	(??_sha256_transform+20)& (0+255),f,b
  1859  00F43C                     u470:
  1860  00F43C  2EE8               	decfsz	wreg,f,c
  1861  00F43E  D7F9               	goto	u475
  1862  00F440  0EC4               	movlw	196
  1863  00F442  6F78               	movwf	(??_sha256_transform+24)& (0+255),b
  1864  00F444  6979               	setf	(??_sha256_transform+25)& (0+255),b
  1865  00F446  C035  F07A         	movff	sha256_transform@i,??_sha256_transform+26
  1866  00F44A  C036  F07B         	movff	sha256_transform@i+1,??_sha256_transform+27
  1867  00F44E  90D8               	bcf	status,0,c
  1868  00F450  377A               	rlcf	(??_sha256_transform+26)& (0+255),f,b
  1869  00F452  377B               	rlcf	(??_sha256_transform+27)& (0+255),f,b
  1870  00F454  90D8               	bcf	status,0,c
  1871  00F456  377A               	rlcf	(??_sha256_transform+26)& (0+255),f,b
  1872  00F458  377B               	rlcf	(??_sha256_transform+27)& (0+255),f,b
  1873  00F45A  5178               	movf	(??_sha256_transform+24)& (0+255),w,b
  1874  00F45C  277A               	addwf	(??_sha256_transform+26)& (0+255),f,b
  1875  00F45E  5179               	movf	(??_sha256_transform+25)& (0+255),w,b
  1876  00F460  237B               	addwfc	(??_sha256_transform+27)& (0+255),f,b
  1877  00F462  0E00               	movlw	low sha256_transform@m
  1878  00F464  257A               	addwf	(??_sha256_transform+26)& (0+255),w,b
  1879  00F466  6ED9               	movwf	fsr2l,c
  1880  00F468  0E01               	movlw	high sha256_transform@m
  1881  00F46A  217B               	addwfc	(??_sha256_transform+27)& (0+255),w,b
  1882  00F46C  6EDA               	movwf	fsr2h,c
  1883  00F46E  CFDE F07C          	movff	postinc2,??_sha256_transform+28
  1884  00F472  CFDE F07D          	movff	postinc2,??_sha256_transform+29
  1885  00F476  CFDE F07E          	movff	postinc2,??_sha256_transform+30
  1886  00F47A  CFDE F07F          	movff	postinc2,??_sha256_transform+31
  1887  00F47E  0E0E               	movlw	14
  1888  00F480                     u485:
  1889  00F480  EC74  F07F         	call	PL46	;call to abstracted procedure
  1890  00F484  2EE8               	decfsz	wreg,f,c
  1891  00F486  D7FC               	goto	u485
  1892  00F488  0EC4               	movlw	196
  1893  00F48A  6F80               	movwf	(??_sha256_transform+32)& (0+255),b
  1894  00F48C  6981               	setf	(??_sha256_transform+33)& (0+255),b
  1895  00F48E  C035  F082         	movff	sha256_transform@i,??_sha256_transform+34
  1896  00F492  C036  F083         	movff	sha256_transform@i+1,??_sha256_transform+35
  1897  00F496  90D8               	bcf	status,0,c
  1898  00F498  3782               	rlcf	(??_sha256_transform+34)& (0+255),f,b
  1899  00F49A  3783               	rlcf	(??_sha256_transform+35)& (0+255),f,b
  1900  00F49C  90D8               	bcf	status,0,c
  1901  00F49E  3782               	rlcf	(??_sha256_transform+34)& (0+255),f,b
  1902  00F4A0  3783               	rlcf	(??_sha256_transform+35)& (0+255),f,b
  1903  00F4A2  5180               	movf	(??_sha256_transform+32)& (0+255),w,b
  1904  00F4A4  2782               	addwf	(??_sha256_transform+34)& (0+255),f,b
  1905  00F4A6  5181               	movf	(??_sha256_transform+33)& (0+255),w,b
  1906  00F4A8  2383               	addwfc	(??_sha256_transform+35)& (0+255),f,b
  1907  00F4AA  0E00               	movlw	low sha256_transform@m
  1908  00F4AC  2582               	addwf	(??_sha256_transform+34)& (0+255),w,b
  1909  00F4AE  6ED9               	movwf	fsr2l,c
  1910  00F4B0  0E01               	movlw	high sha256_transform@m
  1911  00F4B2  2183               	addwfc	(??_sha256_transform+35)& (0+255),w,b
  1912  00F4B4  6EDA               	movwf	fsr2h,c
  1913  00F4B6  CFDE F084          	movff	postinc2,??_sha256_transform+36
  1914  00F4BA  CFDE F085          	movff	postinc2,??_sha256_transform+37
  1915  00F4BE  CFDE F086          	movff	postinc2,??_sha256_transform+38
  1916  00F4C2  CFDE F087          	movff	postinc2,??_sha256_transform+39
  1917  00F4C6  0E13               	movlw	19
  1918  00F4C8  D002               	goto	u490
  1919  00F4CA                     u495:
  1920  00F4CA  EC6E  F07F         	call	PL44	;call to abstracted procedure
  1921  00F4CE                     u490:
  1922  00F4CE  2EE8               	decfsz	wreg,f,c
  1923  00F4D0  D7FC               	goto	u495
  1924  00F4D2  517C               	movf	(??_sha256_transform+28)& (0+255),w,b
  1925  00F4D4  1184               	iorwf	(??_sha256_transform+36)& (0+255),w,b
  1926  00F4D6  6F88               	movwf	(??_sha256_transform+40)& (0+255),b
  1927  00F4D8  517D               	movf	(??_sha256_transform+29)& (0+255),w,b
  1928  00F4DA  1185               	iorwf	(??_sha256_transform+37)& (0+255),w,b
  1929  00F4DC  6F89               	movwf	(??_sha256_transform+41)& (0+255),b
  1930  00F4DE  517E               	movf	(??_sha256_transform+30)& (0+255),w,b
  1931  00F4E0  1186               	iorwf	(??_sha256_transform+38)& (0+255),w,b
  1932  00F4E2  6F8A               	movwf	(??_sha256_transform+42)& (0+255),b
  1933  00F4E4  517F               	movf	(??_sha256_transform+31)& (0+255),w,b
  1934  00F4E6  1187               	iorwf	(??_sha256_transform+39)& (0+255),w,b
  1935  00F4E8  6F8B               	movwf	(??_sha256_transform+43)& (0+255),b
  1936  00F4EA  0EC4               	movlw	196
  1937  00F4EC  6F8C               	movwf	(??_sha256_transform+44)& (0+255),b
  1938  00F4EE  698D               	setf	(??_sha256_transform+45)& (0+255),b
  1939  00F4F0  C035  F08E         	movff	sha256_transform@i,??_sha256_transform+46
  1940  00F4F4  C036  F08F         	movff	sha256_transform@i+1,??_sha256_transform+47
  1941  00F4F8  90D8               	bcf	status,0,c
  1942  00F4FA  378E               	rlcf	(??_sha256_transform+46)& (0+255),f,b
  1943  00F4FC  378F               	rlcf	(??_sha256_transform+47)& (0+255),f,b
  1944  00F4FE  90D8               	bcf	status,0,c
  1945  00F500  378E               	rlcf	(??_sha256_transform+46)& (0+255),f,b
  1946  00F502  378F               	rlcf	(??_sha256_transform+47)& (0+255),f,b
  1947  00F504  518C               	movf	(??_sha256_transform+44)& (0+255),w,b
  1948  00F506  278E               	addwf	(??_sha256_transform+46)& (0+255),f,b
  1949  00F508  518D               	movf	(??_sha256_transform+45)& (0+255),w,b
  1950  00F50A  238F               	addwfc	(??_sha256_transform+47)& (0+255),f,b
  1951  00F50C  0E00               	movlw	low sha256_transform@m
  1952  00F50E  258E               	addwf	(??_sha256_transform+46)& (0+255),w,b
  1953  00F510  6ED9               	movwf	fsr2l,c
  1954  00F512  0E01               	movlw	high sha256_transform@m
  1955  00F514  218F               	addwfc	(??_sha256_transform+47)& (0+255),w,b
  1956  00F516  6EDA               	movwf	fsr2h,c
  1957  00F518  CFDE F090          	movff	postinc2,??_sha256_transform+48
  1958  00F51C  CFDE F091          	movff	postinc2,??_sha256_transform+49
  1959  00F520  CFDE F092          	movff	postinc2,??_sha256_transform+50
  1960  00F524  CFDE F093          	movff	postinc2,??_sha256_transform+51
  1961  00F528  0E19               	movlw	25
  1962  00F52A                     u505:
  1963  00F52A  90D8               	bcf	status,0,c
  1964  00F52C  3790               	rlcf	(??_sha256_transform+48)& (0+255),f,b
  1965  00F52E  3791               	rlcf	(??_sha256_transform+49)& (0+255),f,b
  1966  00F530  3792               	rlcf	(??_sha256_transform+50)& (0+255),f,b
  1967  00F532  3793               	rlcf	(??_sha256_transform+51)& (0+255),f,b
  1968  00F534  2EE8               	decfsz	wreg,f,c
  1969  00F536  D7F9               	goto	u505
  1970  00F538  0EC4               	movlw	196
  1971  00F53A  6F94               	movwf	(??_sha256_transform+52)& (0+255),b
  1972  00F53C  6995               	setf	(??_sha256_transform+53)& (0+255),b
  1973  00F53E  C035  F096         	movff	sha256_transform@i,??_sha256_transform+54
  1974  00F542  C036  F097         	movff	sha256_transform@i+1,??_sha256_transform+55
  1975  00F546  90D8               	bcf	status,0,c
  1976  00F548  3796               	rlcf	(??_sha256_transform+54)& (0+255),f,b
  1977  00F54A  3797               	rlcf	(??_sha256_transform+55)& (0+255),f,b
  1978  00F54C  90D8               	bcf	status,0,c
  1979  00F54E  3796               	rlcf	(??_sha256_transform+54)& (0+255),f,b
  1980  00F550  3797               	rlcf	(??_sha256_transform+55)& (0+255),f,b
  1981  00F552  5194               	movf	(??_sha256_transform+52)& (0+255),w,b
  1982  00F554  2796               	addwf	(??_sha256_transform+54)& (0+255),f,b
  1983  00F556  5195               	movf	(??_sha256_transform+53)& (0+255),w,b
  1984  00F558  2397               	addwfc	(??_sha256_transform+55)& (0+255),f,b
  1985  00F55A  0E00               	movlw	low sha256_transform@m
  1986  00F55C  2596               	addwf	(??_sha256_transform+54)& (0+255),w,b
  1987  00F55E  6ED9               	movwf	fsr2l,c
  1988  00F560  0E01               	movlw	high sha256_transform@m
  1989  00F562  2197               	addwfc	(??_sha256_transform+55)& (0+255),w,b
  1990  00F564  6EDA               	movwf	fsr2h,c
  1991  00F566  CFDE F098          	movff	postinc2,??_sha256_transform+56
  1992  00F56A  CFDE F099          	movff	postinc2,??_sha256_transform+57
  1993  00F56E  CFDE F09A          	movff	postinc2,??_sha256_transform+58
  1994  00F572  CFDE F09B          	movff	postinc2,??_sha256_transform+59
  1995  00F576  0E08               	movlw	8
  1996  00F578  D002               	goto	u510
  1997  00F57A                     u515:
  1998  00F57A  EC68  F07F         	call	PL42	;call to abstracted procedure
  1999  00F57E                     u510:
  2000  00F57E  2EE8               	decfsz	wreg,f,c
  2001  00F580  D7FC               	goto	u515
  2002  00F582  5190               	movf	(??_sha256_transform+48)& (0+255),w,b
  2003  00F584  1198               	iorwf	(??_sha256_transform+56)& (0+255),w,b
  2004  00F586  6F9C               	movwf	(??_sha256_transform+60)& (0+255),b
  2005  00F588  5191               	movf	(??_sha256_transform+49)& (0+255),w,b
  2006  00F58A  1199               	iorwf	(??_sha256_transform+57)& (0+255),w,b
  2007  00F58C  6F9D               	movwf	(??_sha256_transform+61)& (0+255),b
  2008  00F58E  5192               	movf	(??_sha256_transform+50)& (0+255),w,b
  2009  00F590  119A               	iorwf	(??_sha256_transform+58)& (0+255),w,b
  2010  00F592  6F9E               	movwf	(??_sha256_transform+62)& (0+255),b
  2011  00F594  5193               	movf	(??_sha256_transform+51)& (0+255),w,b
  2012  00F596  119B               	iorwf	(??_sha256_transform+59)& (0+255),w,b
  2013  00F598  6F9F               	movwf	(??_sha256_transform+63)& (0+255),b
  2014  00F59A  5188               	movf	(??_sha256_transform+40)& (0+255),w,b
  2015  00F59C  199C               	xorwf	(??_sha256_transform+60)& (0+255),w,b
  2016  00F59E  6FA0               	movwf	(??_sha256_transform+64)& (0+255),b
  2017  00F5A0  5189               	movf	(??_sha256_transform+41)& (0+255),w,b
  2018  00F5A2  199D               	xorwf	(??_sha256_transform+61)& (0+255),w,b
  2019  00F5A4  6FA1               	movwf	(??_sha256_transform+65)& (0+255),b
  2020  00F5A6  518A               	movf	(??_sha256_transform+42)& (0+255),w,b
  2021  00F5A8  199E               	xorwf	(??_sha256_transform+62)& (0+255),w,b
  2022  00F5AA  6FA2               	movwf	(??_sha256_transform+66)& (0+255),b
  2023  00F5AC  518B               	movf	(??_sha256_transform+43)& (0+255),w,b
  2024  00F5AE  199F               	xorwf	(??_sha256_transform+63)& (0+255),w,b
  2025  00F5B0  6FA3               	movwf	(??_sha256_transform+67)& (0+255),b
  2026  00F5B2  5174               	movf	(??_sha256_transform+20)& (0+255),w,b
  2027  00F5B4  19A0               	xorwf	(??_sha256_transform+64)& (0+255),w,b
  2028  00F5B6  6FA4               	movwf	(??_sha256_transform+68)& (0+255),b
  2029  00F5B8  5175               	movf	(??_sha256_transform+21)& (0+255),w,b
  2030  00F5BA  19A1               	xorwf	(??_sha256_transform+65)& (0+255),w,b
  2031  00F5BC  6FA5               	movwf	(??_sha256_transform+69)& (0+255),b
  2032  00F5BE  5176               	movf	(??_sha256_transform+22)& (0+255),w,b
  2033  00F5C0  19A2               	xorwf	(??_sha256_transform+66)& (0+255),w,b
  2034  00F5C2  6FA6               	movwf	(??_sha256_transform+70)& (0+255),b
  2035  00F5C4  5177               	movf	(??_sha256_transform+23)& (0+255),w,b
  2036  00F5C6  19A3               	xorwf	(??_sha256_transform+67)& (0+255),w,b
  2037  00F5C8  6FA7               	movwf	(??_sha256_transform+71)& (0+255),b
  2038  00F5CA  0EF8               	movlw	248
  2039  00F5CC  6FA8               	movwf	(??_sha256_transform+72)& (0+255),b
  2040  00F5CE  69A9               	setf	(??_sha256_transform+73)& (0+255),b
  2041  00F5D0  C035  F0AA         	movff	sha256_transform@i,??_sha256_transform+74
  2042  00F5D4  C036  F0AB         	movff	sha256_transform@i+1,??_sha256_transform+75
  2043  00F5D8  90D8               	bcf	status,0,c
  2044  00F5DA  37AA               	rlcf	(??_sha256_transform+74)& (0+255),f,b
  2045  00F5DC  37AB               	rlcf	(??_sha256_transform+75)& (0+255),f,b
  2046  00F5DE  90D8               	bcf	status,0,c
  2047  00F5E0  37AA               	rlcf	(??_sha256_transform+74)& (0+255),f,b
  2048  00F5E2  37AB               	rlcf	(??_sha256_transform+75)& (0+255),f,b
  2049  00F5E4  51A8               	movf	(??_sha256_transform+72)& (0+255),w,b
  2050  00F5E6  27AA               	addwf	(??_sha256_transform+74)& (0+255),f,b
  2051  00F5E8  51A9               	movf	(??_sha256_transform+73)& (0+255),w,b
  2052  00F5EA  23AB               	addwfc	(??_sha256_transform+75)& (0+255),f,b
  2053  00F5EC  0E00               	movlw	low sha256_transform@m
  2054  00F5EE  25AA               	addwf	(??_sha256_transform+74)& (0+255),w,b
  2055  00F5F0  6ED9               	movwf	fsr2l,c
  2056  00F5F2  0E01               	movlw	high sha256_transform@m
  2057  00F5F4  21AB               	addwfc	(??_sha256_transform+75)& (0+255),w,b
  2058  00F5F6  6EDA               	movwf	fsr2h,c
  2059  00F5F8  CFDE F0AC          	movff	postinc2,??_sha256_transform+76
  2060  00F5FC  CFDE F0AD          	movff	postinc2,??_sha256_transform+77
  2061  00F600  CFDE F0AE          	movff	postinc2,??_sha256_transform+78
  2062  00F604  CFDE F0AF          	movff	postinc2,??_sha256_transform+79
  2063  00F608  0E0B               	movlw	11
  2064  00F60A  D005               	goto	u520
  2065  00F60C                     u525:
  2066  00F60C  90D8               	bcf	status,0,c
  2067  00F60E  33AF               	rrcf	(??_sha256_transform+79)& (0+255),f,b
  2068  00F610  33AE               	rrcf	(??_sha256_transform+78)& (0+255),f,b
  2069  00F612  33AD               	rrcf	(??_sha256_transform+77)& (0+255),f,b
  2070  00F614  33AC               	rrcf	(??_sha256_transform+76)& (0+255),f,b
  2071  00F616                     u520:
  2072  00F616  2EE8               	decfsz	wreg,f,c
  2073  00F618  D7F9               	goto	u525
  2074  00F61A  0EF8               	movlw	248
  2075  00F61C  6FB0               	movwf	(??_sha256_transform+80)& (0+255),b
  2076  00F61E  69B1               	setf	(??_sha256_transform+81)& (0+255),b
  2077  00F620  C035  F0B2         	movff	sha256_transform@i,??_sha256_transform+82
  2078  00F624  C036  F0B3         	movff	sha256_transform@i+1,??_sha256_transform+83
  2079  00F628  90D8               	bcf	status,0,c
  2080  00F62A  37B2               	rlcf	(??_sha256_transform+82)& (0+255),f,b
  2081  00F62C  37B3               	rlcf	(??_sha256_transform+83)& (0+255),f,b
  2082  00F62E  90D8               	bcf	status,0,c
  2083  00F630  37B2               	rlcf	(??_sha256_transform+82)& (0+255),f,b
  2084  00F632  37B3               	rlcf	(??_sha256_transform+83)& (0+255),f,b
  2085  00F634  51B0               	movf	(??_sha256_transform+80)& (0+255),w,b
  2086  00F636  27B2               	addwf	(??_sha256_transform+82)& (0+255),f,b
  2087  00F638  51B1               	movf	(??_sha256_transform+81)& (0+255),w,b
  2088  00F63A  23B3               	addwfc	(??_sha256_transform+83)& (0+255),f,b
  2089  00F63C  0E00               	movlw	low sha256_transform@m
  2090  00F63E  25B2               	addwf	(??_sha256_transform+82)& (0+255),w,b
  2091  00F640  6ED9               	movwf	fsr2l,c
  2092  00F642  0E01               	movlw	high sha256_transform@m
  2093  00F644  21B3               	addwfc	(??_sha256_transform+83)& (0+255),w,b
  2094  00F646  6EDA               	movwf	fsr2h,c
  2095  00F648  CFDE F0B4          	movff	postinc2,??_sha256_transform+84
  2096  00F64C  CFDE F0B5          	movff	postinc2,??_sha256_transform+85
  2097  00F650  CFDE F0B6          	movff	postinc2,??_sha256_transform+86
  2098  00F654  CFDE F0B7          	movff	postinc2,??_sha256_transform+87
  2099  00F658  0E0D               	movlw	13
  2100  00F65A                     u535:
  2101  00F65A  90D8               	bcf	status,0,c
  2102  00F65C  37B4               	rlcf	(??_sha256_transform+84)& (0+255),f,b
  2103  00F65E  37B5               	rlcf	(??_sha256_transform+85)& (0+255),f,b
  2104  00F660  37B6               	rlcf	(??_sha256_transform+86)& (0+255),f,b
  2105  00F662  37B7               	rlcf	(??_sha256_transform+87)& (0+255),f,b
  2106  00F664  2EE8               	decfsz	wreg,f,c
  2107  00F666  D7F9               	goto	u535
  2108  00F668  0EF8               	movlw	248
  2109  00F66A  6FB8               	movwf	(??_sha256_transform+88)& (0+255),b
  2110  00F66C  69B9               	setf	(??_sha256_transform+89)& (0+255),b
  2111  00F66E  C035  F0BA         	movff	sha256_transform@i,??_sha256_transform+90
  2112  00F672  C036  F0BB         	movff	sha256_transform@i+1,??_sha256_transform+91
  2113  00F676  90D8               	bcf	status,0,c
  2114  00F678  37BA               	rlcf	(??_sha256_transform+90)& (0+255),f,b
  2115  00F67A  37BB               	rlcf	(??_sha256_transform+91)& (0+255),f,b
  2116  00F67C  90D8               	bcf	status,0,c
  2117  00F67E  37BA               	rlcf	(??_sha256_transform+90)& (0+255),f,b
  2118  00F680  37BB               	rlcf	(??_sha256_transform+91)& (0+255),f,b
  2119  00F682  51B8               	movf	(??_sha256_transform+88)& (0+255),w,b
  2120  00F684  27BA               	addwf	(??_sha256_transform+90)& (0+255),f,b
  2121  00F686  51B9               	movf	(??_sha256_transform+89)& (0+255),w,b
  2122  00F688  23BB               	addwfc	(??_sha256_transform+91)& (0+255),f,b
  2123  00F68A  0E00               	movlw	low sha256_transform@m
  2124  00F68C  25BA               	addwf	(??_sha256_transform+90)& (0+255),w,b
  2125  00F68E  6ED9               	movwf	fsr2l,c
  2126  00F690  0E01               	movlw	high sha256_transform@m
  2127  00F692  21BB               	addwfc	(??_sha256_transform+91)& (0+255),w,b
  2128  00F694  6EDA               	movwf	fsr2h,c
  2129  00F696  CFDE F0BC          	movff	postinc2,??_sha256_transform+92
  2130  00F69A  CFDE F0BD          	movff	postinc2,??_sha256_transform+93
  2131  00F69E  CFDE F0BE          	movff	postinc2,??_sha256_transform+94
  2132  00F6A2  CFDE F0BF          	movff	postinc2,??_sha256_transform+95
  2133  00F6A6  0E14               	movlw	20
  2134  00F6A8  D005               	goto	u540
  2135  00F6AA                     u545:
  2136  00F6AA  90D8               	bcf	status,0,c
  2137  00F6AC  33BF               	rrcf	(??_sha256_transform+95)& (0+255),f,b
  2138  00F6AE  33BE               	rrcf	(??_sha256_transform+94)& (0+255),f,b
  2139  00F6B0  33BD               	rrcf	(??_sha256_transform+93)& (0+255),f,b
  2140  00F6B2  33BC               	rrcf	(??_sha256_transform+92)& (0+255),f,b
  2141  00F6B4                     u540:
  2142  00F6B4  2EE8               	decfsz	wreg,f,c
  2143  00F6B6  D7F9               	goto	u545
  2144  00F6B8  51B4               	movf	(??_sha256_transform+84)& (0+255),w,b
  2145  00F6BA  11BC               	iorwf	(??_sha256_transform+92)& (0+255),w,b
  2146  00F6BC  6FC0               	movwf	(??_sha256_transform+96)& (0+255),b
  2147  00F6BE  51B5               	movf	(??_sha256_transform+85)& (0+255),w,b
  2148  00F6C0  11BD               	iorwf	(??_sha256_transform+93)& (0+255),w,b
  2149  00F6C2  6FC1               	movwf	(??_sha256_transform+97)& (0+255),b
  2150  00F6C4  51B6               	movf	(??_sha256_transform+86)& (0+255),w,b
  2151  00F6C6  11BE               	iorwf	(??_sha256_transform+94)& (0+255),w,b
  2152  00F6C8  6FC2               	movwf	(??_sha256_transform+98)& (0+255),b
  2153  00F6CA  51B7               	movf	(??_sha256_transform+87)& (0+255),w,b
  2154  00F6CC  11BF               	iorwf	(??_sha256_transform+95)& (0+255),w,b
  2155  00F6CE  6FC3               	movwf	(??_sha256_transform+99)& (0+255),b
  2156  00F6D0  0EF8               	movlw	248
  2157  00F6D2  6FC4               	movwf	(??_sha256_transform+100)& (0+255),b
  2158  00F6D4  69C5               	setf	(??_sha256_transform+101)& (0+255),b
  2159  00F6D6  C035  F0C6         	movff	sha256_transform@i,??_sha256_transform+102
  2160  00F6DA  C036  F0C7         	movff	sha256_transform@i+1,??_sha256_transform+103
  2161  00F6DE  90D8               	bcf	status,0,c
  2162  00F6E0  37C6               	rlcf	(??_sha256_transform+102)& (0+255),f,b
  2163  00F6E2  37C7               	rlcf	(??_sha256_transform+103)& (0+255),f,b
  2164  00F6E4  90D8               	bcf	status,0,c
  2165  00F6E6  37C6               	rlcf	(??_sha256_transform+102)& (0+255),f,b
  2166  00F6E8  37C7               	rlcf	(??_sha256_transform+103)& (0+255),f,b
  2167  00F6EA  51C4               	movf	(??_sha256_transform+100)& (0+255),w,b
  2168  00F6EC  27C6               	addwf	(??_sha256_transform+102)& (0+255),f,b
  2169  00F6EE  51C5               	movf	(??_sha256_transform+101)& (0+255),w,b
  2170  00F6F0  23C7               	addwfc	(??_sha256_transform+103)& (0+255),f,b
  2171  00F6F2  0E00               	movlw	low sha256_transform@m
  2172  00F6F4  25C6               	addwf	(??_sha256_transform+102)& (0+255),w,b
  2173  00F6F6  6ED9               	movwf	fsr2l,c
  2174  00F6F8  0E01               	movlw	high sha256_transform@m
  2175  00F6FA  21C7               	addwfc	(??_sha256_transform+103)& (0+255),w,b
  2176  00F6FC  6EDA               	movwf	fsr2h,c
  2177  00F6FE  CFDE F0C8          	movff	postinc2,??_sha256_transform+104
  2178  00F702  CFDE F0C9          	movff	postinc2,??_sha256_transform+105
  2179  00F706  CFDE F0CA          	movff	postinc2,??_sha256_transform+106
  2180  00F70A  CFDE F0CB          	movff	postinc2,??_sha256_transform+107
  2181  00F70E  0E0F               	movlw	15
  2182  00F710                     u555:
  2183  00F710  90D8               	bcf	status,0,c
  2184  00F712  37C8               	rlcf	(??_sha256_transform+104)& (0+255),f,b
  2185  00F714  37C9               	rlcf	(??_sha256_transform+105)& (0+255),f,b
  2186  00F716  37CA               	rlcf	(??_sha256_transform+106)& (0+255),f,b
  2187  00F718  37CB               	rlcf	(??_sha256_transform+107)& (0+255),f,b
  2188  00F71A  2EE8               	decfsz	wreg,f,c
  2189  00F71C  D7F9               	goto	u555
  2190  00F71E  0EF8               	movlw	248
  2191  00F720  6FCC               	movwf	(??_sha256_transform+108)& (0+255),b
  2192  00F722  69CD               	setf	(??_sha256_transform+109)& (0+255),b
  2193  00F724  C035  F0CE         	movff	sha256_transform@i,??_sha256_transform+110
  2194  00F728  C036  F0CF         	movff	sha256_transform@i+1,??_sha256_transform+111
  2195  00F72C  90D8               	bcf	status,0,c
  2196  00F72E  37CE               	rlcf	(??_sha256_transform+110)& (0+255),f,b
  2197  00F730  37CF               	rlcf	(??_sha256_transform+111)& (0+255),f,b
  2198  00F732  90D8               	bcf	status,0,c
  2199  00F734  37CE               	rlcf	(??_sha256_transform+110)& (0+255),f,b
  2200  00F736  37CF               	rlcf	(??_sha256_transform+111)& (0+255),f,b
  2201  00F738  51CC               	movf	(??_sha256_transform+108)& (0+255),w,b
  2202  00F73A  27CE               	addwf	(??_sha256_transform+110)& (0+255),f,b
  2203  00F73C  51CD               	movf	(??_sha256_transform+109)& (0+255),w,b
  2204  00F73E  23CF               	addwfc	(??_sha256_transform+111)& (0+255),f,b
  2205  00F740  0E00               	movlw	low sha256_transform@m
  2206  00F742  25CE               	addwf	(??_sha256_transform+110)& (0+255),w,b
  2207  00F744  6ED9               	movwf	fsr2l,c
  2208  00F746  0E01               	movlw	high sha256_transform@m
  2209  00F748  21CF               	addwfc	(??_sha256_transform+111)& (0+255),w,b
  2210  00F74A  6EDA               	movwf	fsr2h,c
  2211  00F74C  CFDE F0D0          	movff	postinc2,??_sha256_transform+112
  2212  00F750  CFDE F0D1          	movff	postinc2,??_sha256_transform+113
  2213  00F754  CFDE F0D2          	movff	postinc2,??_sha256_transform+114
  2214  00F758  CFDE F0D3          	movff	postinc2,??_sha256_transform+115
  2215  00F75C  0E12               	movlw	18
  2216  00F75E  D005               	goto	u560
  2217  00F760                     u565:
  2218  00F760  90D8               	bcf	status,0,c
  2219  00F762  33D3               	rrcf	(??_sha256_transform+115)& (0+255),f,b
  2220  00F764  33D2               	rrcf	(??_sha256_transform+114)& (0+255),f,b
  2221  00F766  33D1               	rrcf	(??_sha256_transform+113)& (0+255),f,b
  2222  00F768  33D0               	rrcf	(??_sha256_transform+112)& (0+255),f,b
  2223  00F76A                     u560:
  2224  00F76A  2EE8               	decfsz	wreg,f,c
  2225  00F76C  D7F9               	goto	u565
  2226  00F76E  51C8               	movf	(??_sha256_transform+104)& (0+255),w,b
  2227  00F770  11D0               	iorwf	(??_sha256_transform+112)& (0+255),w,b
  2228  00F772  6FD4               	movwf	(??_sha256_transform+116)& (0+255),b
  2229  00F774  51C9               	movf	(??_sha256_transform+105)& (0+255),w,b
  2230  00F776  11D1               	iorwf	(??_sha256_transform+113)& (0+255),w,b
  2231  00F778  6FD5               	movwf	(??_sha256_transform+117)& (0+255),b
  2232  00F77A  51CA               	movf	(??_sha256_transform+106)& (0+255),w,b
  2233  00F77C  11D2               	iorwf	(??_sha256_transform+114)& (0+255),w,b
  2234  00F77E  6FD6               	movwf	(??_sha256_transform+118)& (0+255),b
  2235  00F780  51CB               	movf	(??_sha256_transform+107)& (0+255),w,b
  2236  00F782  11D3               	iorwf	(??_sha256_transform+115)& (0+255),w,b
  2237  00F784  6FD7               	movwf	(??_sha256_transform+119)& (0+255),b
  2238  00F786  51C0               	movf	(??_sha256_transform+96)& (0+255),w,b
  2239  00F788  19D4               	xorwf	(??_sha256_transform+116)& (0+255),w,b
  2240  00F78A  6FD8               	movwf	(??_sha256_transform+120)& (0+255),b
  2241  00F78C  51C1               	movf	(??_sha256_transform+97)& (0+255),w,b
  2242  00F78E  19D5               	xorwf	(??_sha256_transform+117)& (0+255),w,b
  2243  00F790  6FD9               	movwf	(??_sha256_transform+121)& (0+255),b
  2244  00F792  51C2               	movf	(??_sha256_transform+98)& (0+255),w,b
  2245  00F794  19D6               	xorwf	(??_sha256_transform+118)& (0+255),w,b
  2246  00F796  6FDA               	movwf	(??_sha256_transform+122)& (0+255),b
  2247  00F798  51C3               	movf	(??_sha256_transform+99)& (0+255),w,b
  2248  00F79A  19D7               	xorwf	(??_sha256_transform+119)& (0+255),w,b
  2249  00F79C  6FDB               	movwf	(??_sha256_transform+123)& (0+255),b
  2250  00F79E  51AC               	movf	(??_sha256_transform+76)& (0+255),w,b
  2251  00F7A0  19D8               	xorwf	(??_sha256_transform+120)& (0+255),w,b
  2252  00F7A2  6FDC               	movwf	(??_sha256_transform+124)& (0+255),b
  2253  00F7A4  51AD               	movf	(??_sha256_transform+77)& (0+255),w,b
  2254  00F7A6  19D9               	xorwf	(??_sha256_transform+121)& (0+255),w,b
  2255  00F7A8  6FDD               	movwf	(??_sha256_transform+125)& (0+255),b
  2256  00F7AA  51AE               	movf	(??_sha256_transform+78)& (0+255),w,b
  2257  00F7AC  19DA               	xorwf	(??_sha256_transform+122)& (0+255),w,b
  2258  00F7AE  6FDE               	movwf	(??_sha256_transform+126)& (0+255),b
  2259  00F7B0  51AF               	movf	(??_sha256_transform+79)& (0+255),w,b
  2260  00F7B2  19DB               	xorwf	(??_sha256_transform+123)& (0+255),w,b
  2261  00F7B4  6FDF               	movwf	(??_sha256_transform+127)& (0+255),b
  2262  00F7B6  51A4               	movf	(??_sha256_transform+68)& (0+255),w,b
  2263  00F7B8  25DC               	addwf	(??_sha256_transform+124)& (0+255),w,b
  2264  00F7BA  6FE0               	movwf	(??_sha256_transform+128)& (0+255),b
  2265  00F7BC  51A5               	movf	(??_sha256_transform+69)& (0+255),w,b
  2266  00F7BE  21DD               	addwfc	(??_sha256_transform+125)& (0+255),w,b
  2267  00F7C0  6FE1               	movwf	(??_sha256_transform+129)& (0+255),b
  2268  00F7C2  51A6               	movf	(??_sha256_transform+70)& (0+255),w,b
  2269  00F7C4  21DE               	addwfc	(??_sha256_transform+126)& (0+255),w,b
  2270  00F7C6  6FE2               	movwf	(??_sha256_transform+130)& (0+255),b
  2271  00F7C8  51A7               	movf	(??_sha256_transform+71)& (0+255),w,b
  2272  00F7CA  21DF               	addwfc	(??_sha256_transform+127)& (0+255),w,b
  2273  00F7CC  6FE3               	movwf	(??_sha256_transform+131)& (0+255),b
  2274  00F7CE  516C               	movf	(??_sha256_transform+12)& (0+255),w,b
  2275  00F7D0  25E0               	addwf	(??_sha256_transform+128)& (0+255),w,b
  2276  00F7D2  6FE4               	movwf	(??_sha256_transform+132)& (0+255),b
  2277  00F7D4  516D               	movf	(??_sha256_transform+13)& (0+255),w,b
  2278  00F7D6  21E1               	addwfc	(??_sha256_transform+129)& (0+255),w,b
  2279  00F7D8  6FE5               	movwf	(??_sha256_transform+133)& (0+255),b
  2280  00F7DA  516E               	movf	(??_sha256_transform+14)& (0+255),w,b
  2281  00F7DC  21E2               	addwfc	(??_sha256_transform+130)& (0+255),w,b
  2282  00F7DE  6FE6               	movwf	(??_sha256_transform+134)& (0+255),b
  2283  00F7E0  516F               	movf	(??_sha256_transform+15)& (0+255),w,b
  2284  00F7E2  21E3               	addwfc	(??_sha256_transform+131)& (0+255),w,b
  2285  00F7E4  6FE7               	movwf	(??_sha256_transform+135)& (0+255),b
  2286  00F7E6  5164               	movf	(??_sha256_transform+4)& (0+255),w,b
  2287  00F7E8  25E4               	addwf	(??_sha256_transform+132)& (0+255),w,b
  2288  00F7EA  6FE8               	movwf	(??_sha256_transform+136)& (0+255),b
  2289  00F7EC  5165               	movf	(??_sha256_transform+5)& (0+255),w,b
  2290  00F7EE  21E5               	addwfc	(??_sha256_transform+133)& (0+255),w,b
  2291  00F7F0  6FE9               	movwf	(??_sha256_transform+137)& (0+255),b
  2292  00F7F2  5166               	movf	(??_sha256_transform+6)& (0+255),w,b
  2293  00F7F4  21E6               	addwfc	(??_sha256_transform+134)& (0+255),w,b
  2294  00F7F6  6FEA               	movwf	(??_sha256_transform+138)& (0+255),b
  2295  00F7F8  5167               	movf	(??_sha256_transform+7)& (0+255),w,b
  2296  00F7FA  21E7               	addwfc	(??_sha256_transform+135)& (0+255),w,b
  2297  00F7FC  6FEB               	movwf	(??_sha256_transform+139)& (0+255),b
  2298  00F7FE  0E00               	movlw	low sha256_transform@m
  2299  00F800  6FEC               	movwf	(??_sha256_transform+140)& (0+255),b
  2300  00F802  0E01               	movlw	high sha256_transform@m
  2301  00F804  6FED               	movwf	(??_sha256_transform+141)& (0+255),b
  2302  00F806  DB2B               	call	PL12	;call to abstracted procedure
  2303  00F808  51EC               	movf	(??_sha256_transform+140)& (0+255),w,b
  2304  00F80A  26D9               	addwf	fsr2l,f,c
  2305  00F80C  51ED               	movf	(??_sha256_transform+141)& (0+255),w,b
  2306  00F80E  22DA               	addwfc	fsr2h,f,c
  2307  00F810  C0E8  FFDE         	movff	??_sha256_transform+136,postinc2
  2308  00F814  C0E9  FFDE         	movff	??_sha256_transform+137,postinc2
  2309  00F818  C0EA  FFDE         	movff	??_sha256_transform+138,postinc2
  2310  00F81C  C0EB  FFDE         	movff	??_sha256_transform+139,postinc2
  2311                           
  2312                           ; BSR set to: 0
  2313  00F820  DB51               	call	PL36	;call to abstracted procedure
  2314  00F822  D59E               	goto	l843
  2315  00F824                     l853:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;sha256.c: 62: a = ctx->state[0];
  2319  00F824  EE20 F048          	lfsr	2,72
  2320  00F828  DB35               	call	PL18	;call to abstracted procedure
  2321  00F82A  CFDE F02D          	movff	postinc2,sha256_transform@a
  2322  00F82E  CFDE F02E          	movff	postinc2,sha256_transform@a+1
  2323  00F832  CFDE F02F          	movff	postinc2,sha256_transform@a+2
  2324  00F836  CFDE F030          	movff	postinc2,sha256_transform@a+3
  2325                           
  2326                           ;sha256.c: 63: b = ctx->state[1];
  2327  00F83A  EE20 F04C          	lfsr	2,76
  2328  00F83E  DB2A               	call	PL18	;call to abstracted procedure
  2329  00F840  CFDE F01D          	movff	postinc2,sha256_transform@b
  2330  00F844  CFDE F01E          	movff	postinc2,sha256_transform@b+1
  2331  00F848  CFDE F01F          	movff	postinc2,sha256_transform@b+2
  2332  00F84C  CFDE F020          	movff	postinc2,sha256_transform@b+3
  2333                           
  2334                           ;sha256.c: 64: c = ctx->state[2];
  2335  00F850  EE20 F050          	lfsr	2,80
  2336  00F854  DB1F               	call	PL18	;call to abstracted procedure
  2337  00F856  CFDE F021          	movff	postinc2,sha256_transform@c
  2338  00F85A  CFDE F022          	movff	postinc2,sha256_transform@c+1
  2339  00F85E  CFDE F023          	movff	postinc2,sha256_transform@c+2
  2340  00F862  CFDE F024          	movff	postinc2,sha256_transform@c+3
  2341                           
  2342                           ;sha256.c: 65: d = ctx->state[3];
  2343  00F866  EE20 F054          	lfsr	2,84
  2344  00F86A  DB14               	call	PL18	;call to abstracted procedure
  2345  00F86C  CFDE F00D          	movff	postinc2,sha256_transform@d
  2346  00F870  CFDE F00E          	movff	postinc2,sha256_transform@d+1
  2347  00F874  CFDE F00F          	movff	postinc2,sha256_transform@d+2
  2348  00F878  CFDE F010          	movff	postinc2,sha256_transform@d+3
  2349                           
  2350                           ;sha256.c: 66: e = ctx->state[4];
  2351  00F87C  EE20 F058          	lfsr	2,88
  2352  00F880  DB09               	call	PL18	;call to abstracted procedure
  2353  00F882  CFDE F031          	movff	postinc2,sha256_transform@e
  2354  00F886  CFDE F032          	movff	postinc2,sha256_transform@e+1
  2355  00F88A  CFDE F033          	movff	postinc2,sha256_transform@e+2
  2356  00F88E  CFDE F034          	movff	postinc2,sha256_transform@e+3
  2357                           
  2358                           ;sha256.c: 67: f = ctx->state[5];
  2359  00F892  EE20 F05C          	lfsr	2,92
  2360  00F896  DAFE               	call	PL18	;call to abstracted procedure
  2361  00F898  CFDE F015          	movff	postinc2,sha256_transform@f
  2362  00F89C  CFDE F016          	movff	postinc2,sha256_transform@f+1
  2363  00F8A0  CFDE F017          	movff	postinc2,sha256_transform@f+2
  2364  00F8A4  CFDE F018          	movff	postinc2,sha256_transform@f+3
  2365                           
  2366                           ;sha256.c: 68: g = ctx->state[6];
  2367  00F8A8  EE20 F060          	lfsr	2,96
  2368  00F8AC  DAF3               	call	PL18	;call to abstracted procedure
  2369  00F8AE  CFDE F019          	movff	postinc2,sha256_transform@g
  2370  00F8B2  CFDE F01A          	movff	postinc2,sha256_transform@g+1
  2371  00F8B6  CFDE F01B          	movff	postinc2,sha256_transform@g+2
  2372  00F8BA  CFDE F01C          	movff	postinc2,sha256_transform@g+3
  2373                           
  2374                           ;sha256.c: 69: h = ctx->state[7];
  2375  00F8BE  EE20 F064          	lfsr	2,100
  2376  00F8C2  DAE8               	call	PL18	;call to abstracted procedure
  2377  00F8C4  CFDE F011          	movff	postinc2,sha256_transform@h
  2378  00F8C8  CFDE F012          	movff	postinc2,sha256_transform@h+1
  2379  00F8CC  CFDE F013          	movff	postinc2,sha256_transform@h+2
  2380  00F8D0  CFDE F014          	movff	postinc2,sha256_transform@h+3
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;sha256.c: 71: for (i = 0; i < 64; ++i) {
  2384  00F8D4  DB0F               	call	PL48	;call to abstracted procedure
  2385  00F8D6                     l861:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;sha256.c: 72: t1 = h + ((((e) >> (6)) | ((e) << (32-(6)))) ^ (((e) >> (11)) | ((e) << (
      +                          32-(11)))) ^ (((e) >> (25)) | ((e) << (32-(25))))) + (((e) & (f)) ^ (~(e) & (g))) + k[i]
      +                           + m[i];
  2389  00F8D6  DAA0               	call	PL8	;call to abstracted procedure
  2390  00F8D8  C035  F066         	movff	sha256_transform@i,??_sha256_transform+6
  2391  00F8DC  C036  F067         	movff	sha256_transform@i+1,??_sha256_transform+7
  2392  00F8E0  90D8               	bcf	status,0,c
  2393  00F8E2  3766               	rlcf	(??_sha256_transform+6)& (0+255),f,b
  2394  00F8E4  3767               	rlcf	(??_sha256_transform+7)& (0+255),f,b
  2395  00F8E6  90D8               	bcf	status,0,c
  2396  00F8E8  3766               	rlcf	(??_sha256_transform+6)& (0+255),f,b
  2397  00F8EA  3767               	rlcf	(??_sha256_transform+7)& (0+255),f,b
  2398  00F8EC  0EFF               	movlw	low _k
  2399  00F8EE  2566               	addwf	(??_sha256_transform+6)& (0+255),w,b
  2400  00F8F0  6EF6               	movwf	tblptrl,c
  2401  00F8F2  0EFE               	movlw	high _k
  2402  00F8F4  2167               	addwfc	(??_sha256_transform+7)& (0+255),w,b
  2403  00F8F6  6EF7               	movwf	tblptrh,c
  2404  00F8F8                     	if	0	;There are less than 3 active tblptr bytes
  2405  00F8F8                     	endif
  2406  00F8F8  0009               	tblrd		*+
  2407  00F8FA  CFF5 F068          	movff	tablat,??_sha256_transform+8
  2408  00F8FE  0009               	tblrd		*+
  2409  00F900  CFF5 F069          	movff	tablat,??_sha256_transform+9
  2410  00F904  0009               	tblrd		*+
  2411  00F906  CFF5 F06A          	movff	tablat,??_sha256_transform+10
  2412  00F90A  0009               	tblrd		*+
  2413  00F90C  CFF5 F06B          	movff	tablat,??_sha256_transform+11
  2414  00F910  C031  F06C         	movff	sha256_transform@e,??_sha256_transform+12
  2415  00F914  C032  F06D         	movff	sha256_transform@e+1,??_sha256_transform+13
  2416  00F918  C033  F06E         	movff	sha256_transform@e+2,??_sha256_transform+14
  2417  00F91C  C034  F06F         	movff	sha256_transform@e+3,??_sha256_transform+15
  2418  00F920  1F6C               	comf	(??_sha256_transform+12)& (0+255),f,b
  2419  00F922  1F6D               	comf	(??_sha256_transform+13)& (0+255),f,b
  2420  00F924  1F6E               	comf	(??_sha256_transform+14)& (0+255),f,b
  2421  00F926  1F6F               	comf	(??_sha256_transform+15)& (0+255),f,b
  2422  00F928  5019               	movf	sha256_transform@g,w,c
  2423  00F92A  156C               	andwf	(??_sha256_transform+12)& (0+255),w,b
  2424  00F92C  6F70               	movwf	(??_sha256_transform+16)& (0+255),b
  2425  00F92E  501A               	movf	sha256_transform@g+1,w,c
  2426  00F930  156D               	andwf	(??_sha256_transform+13)& (0+255),w,b
  2427  00F932  6F71               	movwf	(??_sha256_transform+17)& (0+255),b
  2428  00F934  501B               	movf	sha256_transform@g+2,w,c
  2429  00F936  156E               	andwf	(??_sha256_transform+14)& (0+255),w,b
  2430  00F938  6F72               	movwf	(??_sha256_transform+18)& (0+255),b
  2431  00F93A  501C               	movf	sha256_transform@g+3,w,c
  2432  00F93C  156F               	andwf	(??_sha256_transform+15)& (0+255),w,b
  2433  00F93E  6F73               	movwf	(??_sha256_transform+19)& (0+255),b
  2434  00F940  5015               	movf	sha256_transform@f,w,c
  2435  00F942  1431               	andwf	sha256_transform@e,w,c
  2436  00F944  6F74               	movwf	(??_sha256_transform+20)& (0+255),b
  2437  00F946  5016               	movf	sha256_transform@f+1,w,c
  2438  00F948  1432               	andwf	sha256_transform@e+1,w,c
  2439  00F94A  6F75               	movwf	(??_sha256_transform+21)& (0+255),b
  2440  00F94C  5017               	movf	sha256_transform@f+2,w,c
  2441  00F94E  1433               	andwf	sha256_transform@e+2,w,c
  2442  00F950  6F76               	movwf	(??_sha256_transform+22)& (0+255),b
  2443  00F952  5018               	movf	sha256_transform@f+3,w,c
  2444  00F954  1434               	andwf	sha256_transform@e+3,w,c
  2445  00F956  6F77               	movwf	(??_sha256_transform+23)& (0+255),b
  2446  00F958  5170               	movf	(??_sha256_transform+16)& (0+255),w,b
  2447  00F95A  1974               	xorwf	(??_sha256_transform+20)& (0+255),w,b
  2448  00F95C  6F78               	movwf	(??_sha256_transform+24)& (0+255),b
  2449  00F95E  5171               	movf	(??_sha256_transform+17)& (0+255),w,b
  2450  00F960  1975               	xorwf	(??_sha256_transform+21)& (0+255),w,b
  2451  00F962  6F79               	movwf	(??_sha256_transform+25)& (0+255),b
  2452  00F964  5172               	movf	(??_sha256_transform+18)& (0+255),w,b
  2453  00F966  1976               	xorwf	(??_sha256_transform+22)& (0+255),w,b
  2454  00F968  6F7A               	movwf	(??_sha256_transform+26)& (0+255),b
  2455  00F96A  5173               	movf	(??_sha256_transform+19)& (0+255),w,b
  2456  00F96C  1977               	xorwf	(??_sha256_transform+23)& (0+255),w,b
  2457  00F96E  6F7B               	movwf	(??_sha256_transform+27)& (0+255),b
  2458  00F970  C031  F07C         	movff	sha256_transform@e,??_sha256_transform+28
  2459  00F974  C032  F07D         	movff	sha256_transform@e+1,??_sha256_transform+29
  2460  00F978  C033  F07E         	movff	sha256_transform@e+2,??_sha256_transform+30
  2461  00F97C  C034  F07F         	movff	sha256_transform@e+3,??_sha256_transform+31
  2462  00F980  0E07               	movlw	7
  2463  00F982                     u575:
  2464  00F982  DAB2               	call	PL46	;call to abstracted procedure
  2465  00F984  2EE8               	decfsz	wreg,f,c
  2466  00F986  D7FD               	goto	u575
  2467  00F988  C031  F080         	movff	sha256_transform@e,??_sha256_transform+32
  2468  00F98C  C032  F081         	movff	sha256_transform@e+1,??_sha256_transform+33
  2469  00F990  C033  F082         	movff	sha256_transform@e+2,??_sha256_transform+34
  2470  00F994  C034  F083         	movff	sha256_transform@e+3,??_sha256_transform+35
  2471  00F998  0E1A               	movlw	26
  2472  00F99A  D005               	goto	u580
  2473  00F99C                     u585:
  2474  00F99C  90D8               	bcf	status,0,c
  2475  00F99E  3383               	rrcf	(??_sha256_transform+35)& (0+255),f,b
  2476  00F9A0  3382               	rrcf	(??_sha256_transform+34)& (0+255),f,b
  2477  00F9A2  3381               	rrcf	(??_sha256_transform+33)& (0+255),f,b
  2478  00F9A4  3380               	rrcf	(??_sha256_transform+32)& (0+255),f,b
  2479  00F9A6                     u580:
  2480  00F9A6  2EE8               	decfsz	wreg,f,c
  2481  00F9A8  D7F9               	goto	u585
  2482  00F9AA  517C               	movf	(??_sha256_transform+28)& (0+255),w,b
  2483  00F9AC  1180               	iorwf	(??_sha256_transform+32)& (0+255),w,b
  2484  00F9AE  6F84               	movwf	(??_sha256_transform+36)& (0+255),b
  2485  00F9B0  517D               	movf	(??_sha256_transform+29)& (0+255),w,b
  2486  00F9B2  1181               	iorwf	(??_sha256_transform+33)& (0+255),w,b
  2487  00F9B4  6F85               	movwf	(??_sha256_transform+37)& (0+255),b
  2488  00F9B6  517E               	movf	(??_sha256_transform+30)& (0+255),w,b
  2489  00F9B8  1182               	iorwf	(??_sha256_transform+34)& (0+255),w,b
  2490  00F9BA  6F86               	movwf	(??_sha256_transform+38)& (0+255),b
  2491  00F9BC  517F               	movf	(??_sha256_transform+31)& (0+255),w,b
  2492  00F9BE  1183               	iorwf	(??_sha256_transform+35)& (0+255),w,b
  2493  00F9C0  6F87               	movwf	(??_sha256_transform+39)& (0+255),b
  2494  00F9C2  C031  F088         	movff	sha256_transform@e,??_sha256_transform+40
  2495  00F9C6  C032  F089         	movff	sha256_transform@e+1,??_sha256_transform+41
  2496  00F9CA  C033  F08A         	movff	sha256_transform@e+2,??_sha256_transform+42
  2497  00F9CE  C034  F08B         	movff	sha256_transform@e+3,??_sha256_transform+43
  2498  00F9D2  0E15               	movlw	21
  2499  00F9D4                     u595:
  2500  00F9D4  90D8               	bcf	status,0,c
  2501  00F9D6  3788               	rlcf	(??_sha256_transform+40)& (0+255),f,b
  2502  00F9D8  3789               	rlcf	(??_sha256_transform+41)& (0+255),f,b
  2503  00F9DA  378A               	rlcf	(??_sha256_transform+42)& (0+255),f,b
  2504  00F9DC  378B               	rlcf	(??_sha256_transform+43)& (0+255),f,b
  2505  00F9DE  2EE8               	decfsz	wreg,f,c
  2506  00F9E0  D7F9               	goto	u595
  2507  00F9E2  C031  F08C         	movff	sha256_transform@e,??_sha256_transform+44
  2508  00F9E6  C032  F08D         	movff	sha256_transform@e+1,??_sha256_transform+45
  2509  00F9EA  C033  F08E         	movff	sha256_transform@e+2,??_sha256_transform+46
  2510  00F9EE  C034  F08F         	movff	sha256_transform@e+3,??_sha256_transform+47
  2511  00F9F2  0E0C               	movlw	12
  2512  00F9F4  D005               	goto	u600
  2513  00F9F6                     u605:
  2514  00F9F6  90D8               	bcf	status,0,c
  2515  00F9F8  338F               	rrcf	(??_sha256_transform+47)& (0+255),f,b
  2516  00F9FA  338E               	rrcf	(??_sha256_transform+46)& (0+255),f,b
  2517  00F9FC  338D               	rrcf	(??_sha256_transform+45)& (0+255),f,b
  2518  00F9FE  338C               	rrcf	(??_sha256_transform+44)& (0+255),f,b
  2519  00FA00                     u600:
  2520  00FA00  2EE8               	decfsz	wreg,f,c
  2521  00FA02  D7F9               	goto	u605
  2522  00FA04  5188               	movf	(??_sha256_transform+40)& (0+255),w,b
  2523  00FA06  118C               	iorwf	(??_sha256_transform+44)& (0+255),w,b
  2524  00FA08  6F90               	movwf	(??_sha256_transform+48)& (0+255),b
  2525  00FA0A  5189               	movf	(??_sha256_transform+41)& (0+255),w,b
  2526  00FA0C  118D               	iorwf	(??_sha256_transform+45)& (0+255),w,b
  2527  00FA0E  6F91               	movwf	(??_sha256_transform+49)& (0+255),b
  2528  00FA10  518A               	movf	(??_sha256_transform+42)& (0+255),w,b
  2529  00FA12  118E               	iorwf	(??_sha256_transform+46)& (0+255),w,b
  2530  00FA14  6F92               	movwf	(??_sha256_transform+50)& (0+255),b
  2531  00FA16  518B               	movf	(??_sha256_transform+43)& (0+255),w,b
  2532  00FA18  118F               	iorwf	(??_sha256_transform+47)& (0+255),w,b
  2533  00FA1A  6F93               	movwf	(??_sha256_transform+51)& (0+255),b
  2534  00FA1C  C031  F094         	movff	sha256_transform@e,??_sha256_transform+52
  2535  00FA20  C032  F095         	movff	sha256_transform@e+1,??_sha256_transform+53
  2536  00FA24  C033  F096         	movff	sha256_transform@e+2,??_sha256_transform+54
  2537  00FA28  C034  F097         	movff	sha256_transform@e+3,??_sha256_transform+55
  2538  00FA2C  0E1A               	movlw	26
  2539  00FA2E                     u615:
  2540  00FA2E  90D8               	bcf	status,0,c
  2541  00FA30  3794               	rlcf	(??_sha256_transform+52)& (0+255),f,b
  2542  00FA32  3795               	rlcf	(??_sha256_transform+53)& (0+255),f,b
  2543  00FA34  3796               	rlcf	(??_sha256_transform+54)& (0+255),f,b
  2544  00FA36  3797               	rlcf	(??_sha256_transform+55)& (0+255),f,b
  2545  00FA38  2EE8               	decfsz	wreg,f,c
  2546  00FA3A  D7F9               	goto	u615
  2547  00FA3C  C031  F098         	movff	sha256_transform@e,??_sha256_transform+56
  2548  00FA40  C032  F099         	movff	sha256_transform@e+1,??_sha256_transform+57
  2549  00FA44  C033  F09A         	movff	sha256_transform@e+2,??_sha256_transform+58
  2550  00FA48  C034  F09B         	movff	sha256_transform@e+3,??_sha256_transform+59
  2551  00FA4C  0E07               	movlw	7
  2552  00FA4E  D001               	goto	u620
  2553  00FA50                     u625:
  2554  00FA50  DA3F               	call	PL42	;call to abstracted procedure
  2555  00FA52                     u620:
  2556  00FA52  2EE8               	decfsz	wreg,f,c
  2557  00FA54  D7FD               	goto	u625
  2558  00FA56  5194               	movf	(??_sha256_transform+52)& (0+255),w,b
  2559  00FA58  1198               	iorwf	(??_sha256_transform+56)& (0+255),w,b
  2560  00FA5A  6F9C               	movwf	(??_sha256_transform+60)& (0+255),b
  2561  00FA5C  5195               	movf	(??_sha256_transform+53)& (0+255),w,b
  2562  00FA5E  1199               	iorwf	(??_sha256_transform+57)& (0+255),w,b
  2563  00FA60  6F9D               	movwf	(??_sha256_transform+61)& (0+255),b
  2564  00FA62  5196               	movf	(??_sha256_transform+54)& (0+255),w,b
  2565  00FA64  119A               	iorwf	(??_sha256_transform+58)& (0+255),w,b
  2566  00FA66  6F9E               	movwf	(??_sha256_transform+62)& (0+255),b
  2567  00FA68  5197               	movf	(??_sha256_transform+55)& (0+255),w,b
  2568  00FA6A  119B               	iorwf	(??_sha256_transform+59)& (0+255),w,b
  2569  00FA6C  6F9F               	movwf	(??_sha256_transform+63)& (0+255),b
  2570  00FA6E  5190               	movf	(??_sha256_transform+48)& (0+255),w,b
  2571  00FA70  199C               	xorwf	(??_sha256_transform+60)& (0+255),w,b
  2572  00FA72  6FA0               	movwf	(??_sha256_transform+64)& (0+255),b
  2573  00FA74  5191               	movf	(??_sha256_transform+49)& (0+255),w,b
  2574  00FA76  199D               	xorwf	(??_sha256_transform+61)& (0+255),w,b
  2575  00FA78  6FA1               	movwf	(??_sha256_transform+65)& (0+255),b
  2576  00FA7A  5192               	movf	(??_sha256_transform+50)& (0+255),w,b
  2577  00FA7C  199E               	xorwf	(??_sha256_transform+62)& (0+255),w,b
  2578  00FA7E  6FA2               	movwf	(??_sha256_transform+66)& (0+255),b
  2579  00FA80  5193               	movf	(??_sha256_transform+51)& (0+255),w,b
  2580  00FA82  199F               	xorwf	(??_sha256_transform+63)& (0+255),w,b
  2581  00FA84  6FA3               	movwf	(??_sha256_transform+67)& (0+255),b
  2582  00FA86  5184               	movf	(??_sha256_transform+36)& (0+255),w,b
  2583  00FA88  19A0               	xorwf	(??_sha256_transform+64)& (0+255),w,b
  2584  00FA8A  6FA4               	movwf	(??_sha256_transform+68)& (0+255),b
  2585  00FA8C  5185               	movf	(??_sha256_transform+37)& (0+255),w,b
  2586  00FA8E  19A1               	xorwf	(??_sha256_transform+65)& (0+255),w,b
  2587  00FA90  6FA5               	movwf	(??_sha256_transform+69)& (0+255),b
  2588  00FA92  5186               	movf	(??_sha256_transform+38)& (0+255),w,b
  2589  00FA94  19A2               	xorwf	(??_sha256_transform+66)& (0+255),w,b
  2590  00FA96  6FA6               	movwf	(??_sha256_transform+70)& (0+255),b
  2591  00FA98  5187               	movf	(??_sha256_transform+39)& (0+255),w,b
  2592  00FA9A  19A3               	xorwf	(??_sha256_transform+67)& (0+255),w,b
  2593  00FA9C  6FA7               	movwf	(??_sha256_transform+71)& (0+255),b
  2594  00FA9E  5178               	movf	(??_sha256_transform+24)& (0+255),w,b
  2595  00FAA0  25A4               	addwf	(??_sha256_transform+68)& (0+255),w,b
  2596  00FAA2  6FA8               	movwf	(??_sha256_transform+72)& (0+255),b
  2597  00FAA4  5179               	movf	(??_sha256_transform+25)& (0+255),w,b
  2598  00FAA6  21A5               	addwfc	(??_sha256_transform+69)& (0+255),w,b
  2599  00FAA8  6FA9               	movwf	(??_sha256_transform+73)& (0+255),b
  2600  00FAAA  517A               	movf	(??_sha256_transform+26)& (0+255),w,b
  2601  00FAAC  21A6               	addwfc	(??_sha256_transform+70)& (0+255),w,b
  2602  00FAAE  6FAA               	movwf	(??_sha256_transform+74)& (0+255),b
  2603  00FAB0  517B               	movf	(??_sha256_transform+27)& (0+255),w,b
  2604  00FAB2  21A7               	addwfc	(??_sha256_transform+71)& (0+255),w,b
  2605  00FAB4  6FAB               	movwf	(??_sha256_transform+75)& (0+255),b
  2606  00FAB6  5168               	movf	(??_sha256_transform+8)& (0+255),w,b
  2607  00FAB8  25A8               	addwf	(??_sha256_transform+72)& (0+255),w,b
  2608  00FABA  6FAC               	movwf	(??_sha256_transform+76)& (0+255),b
  2609  00FABC  5169               	movf	(??_sha256_transform+9)& (0+255),w,b
  2610  00FABE  21A9               	addwfc	(??_sha256_transform+73)& (0+255),w,b
  2611  00FAC0  6FAD               	movwf	(??_sha256_transform+77)& (0+255),b
  2612  00FAC2  516A               	movf	(??_sha256_transform+10)& (0+255),w,b
  2613  00FAC4  21AA               	addwfc	(??_sha256_transform+74)& (0+255),w,b
  2614  00FAC6  6FAE               	movwf	(??_sha256_transform+78)& (0+255),b
  2615  00FAC8  516B               	movf	(??_sha256_transform+11)& (0+255),w,b
  2616  00FACA  21AB               	addwfc	(??_sha256_transform+75)& (0+255),w,b
  2617  00FACC  6FAF               	movwf	(??_sha256_transform+79)& (0+255),b
  2618  00FACE  5162               	movf	(??_sha256_transform+2)& (0+255),w,b
  2619  00FAD0  25AC               	addwf	(??_sha256_transform+76)& (0+255),w,b
  2620  00FAD2  6FB0               	movwf	(??_sha256_transform+80)& (0+255),b
  2621  00FAD4  5163               	movf	(??_sha256_transform+3)& (0+255),w,b
  2622  00FAD6  21AD               	addwfc	(??_sha256_transform+77)& (0+255),w,b
  2623  00FAD8  6FB1               	movwf	(??_sha256_transform+81)& (0+255),b
  2624  00FADA  5164               	movf	(??_sha256_transform+4)& (0+255),w,b
  2625  00FADC  21AE               	addwfc	(??_sha256_transform+78)& (0+255),w,b
  2626  00FADE  6FB2               	movwf	(??_sha256_transform+82)& (0+255),b
  2627  00FAE0  5165               	movf	(??_sha256_transform+5)& (0+255),w,b
  2628  00FAE2  21AF               	addwfc	(??_sha256_transform+79)& (0+255),w,b
  2629  00FAE4  6FB3               	movwf	(??_sha256_transform+83)& (0+255),b
  2630  00FAE6  5011               	movf	sha256_transform@h,w,c
  2631  00FAE8  25B0               	addwf	(??_sha256_transform+80)& (0+255),w,b
  2632  00FAEA  6E09               	movwf	sha256_transform@t1,c
  2633  00FAEC  5012               	movf	sha256_transform@h+1,w,c
  2634  00FAEE  21B1               	addwfc	(??_sha256_transform+81)& (0+255),w,b
  2635  00FAF0  6E0A               	movwf	sha256_transform@t1+1,c
  2636  00FAF2  5013               	movf	sha256_transform@h+2,w,c
  2637  00FAF4  21B2               	addwfc	(??_sha256_transform+82)& (0+255),w,b
  2638  00FAF6  6E0B               	movwf	sha256_transform@t1+2,c
  2639  00FAF8  5014               	movf	sha256_transform@h+3,w,c
  2640  00FAFA  21B3               	addwfc	(??_sha256_transform+83)& (0+255),w,b
  2641  00FAFC  6E0C               	movwf	sha256_transform@t1+3,c
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;sha256.c: 73: t2 = ((((a) >> (2)) | ((a) << (32-(2)))) ^ (((a) >> (13)) | ((a) << (32-(
      +                          13)))) ^ (((a) >> (22)) | ((a) << (32-(22))))) + (((a) & (b)) ^ ((a) & (c)) ^ ((b) & (c)
      +                          ));
  2645  00FAFE  5021               	movf	sha256_transform@c,w,c
  2646  00FB00  141D               	andwf	sha256_transform@b,w,c
  2647  00FB02  6F60               	movwf	??_sha256_transform& (0+255),b
  2648  00FB04  5022               	movf	sha256_transform@c+1,w,c
  2649  00FB06  141E               	andwf	sha256_transform@b+1,w,c
  2650  00FB08  6F61               	movwf	(??_sha256_transform+1)& (0+255),b
  2651  00FB0A  5023               	movf	sha256_transform@c+2,w,c
  2652  00FB0C  141F               	andwf	sha256_transform@b+2,w,c
  2653  00FB0E  6F62               	movwf	(??_sha256_transform+2)& (0+255),b
  2654  00FB10  5024               	movf	sha256_transform@c+3,w,c
  2655  00FB12  1420               	andwf	sha256_transform@b+3,w,c
  2656  00FB14  6F63               	movwf	(??_sha256_transform+3)& (0+255),b
  2657  00FB16  5021               	movf	sha256_transform@c,w,c
  2658  00FB18  142D               	andwf	sha256_transform@a,w,c
  2659  00FB1A  6F64               	movwf	(??_sha256_transform+4)& (0+255),b
  2660  00FB1C  5022               	movf	sha256_transform@c+1,w,c
  2661  00FB1E  142E               	andwf	sha256_transform@a+1,w,c
  2662  00FB20  6F65               	movwf	(??_sha256_transform+5)& (0+255),b
  2663  00FB22  5023               	movf	sha256_transform@c+2,w,c
  2664  00FB24  142F               	andwf	sha256_transform@a+2,w,c
  2665  00FB26  6F66               	movwf	(??_sha256_transform+6)& (0+255),b
  2666  00FB28  5024               	movf	sha256_transform@c+3,w,c
  2667  00FB2A  1430               	andwf	sha256_transform@a+3,w,c
  2668  00FB2C  6F67               	movwf	(??_sha256_transform+7)& (0+255),b
  2669  00FB2E  501D               	movf	sha256_transform@b,w,c
  2670  00FB30  142D               	andwf	sha256_transform@a,w,c
  2671  00FB32  6F68               	movwf	(??_sha256_transform+8)& (0+255),b
  2672  00FB34  501E               	movf	sha256_transform@b+1,w,c
  2673  00FB36  142E               	andwf	sha256_transform@a+1,w,c
  2674  00FB38  6F69               	movwf	(??_sha256_transform+9)& (0+255),b
  2675  00FB3A  501F               	movf	sha256_transform@b+2,w,c
  2676  00FB3C  142F               	andwf	sha256_transform@a+2,w,c
  2677  00FB3E  6F6A               	movwf	(??_sha256_transform+10)& (0+255),b
  2678  00FB40  5020               	movf	sha256_transform@b+3,w,c
  2679  00FB42  1430               	andwf	sha256_transform@a+3,w,c
  2680  00FB44  6F6B               	movwf	(??_sha256_transform+11)& (0+255),b
  2681  00FB46  5164               	movf	(??_sha256_transform+4)& (0+255),w,b
  2682  00FB48  1968               	xorwf	(??_sha256_transform+8)& (0+255),w,b
  2683  00FB4A  6F6C               	movwf	(??_sha256_transform+12)& (0+255),b
  2684  00FB4C  5165               	movf	(??_sha256_transform+5)& (0+255),w,b
  2685  00FB4E  1969               	xorwf	(??_sha256_transform+9)& (0+255),w,b
  2686  00FB50  6F6D               	movwf	(??_sha256_transform+13)& (0+255),b
  2687  00FB52  5166               	movf	(??_sha256_transform+6)& (0+255),w,b
  2688  00FB54  196A               	xorwf	(??_sha256_transform+10)& (0+255),w,b
  2689  00FB56  6F6E               	movwf	(??_sha256_transform+14)& (0+255),b
  2690  00FB58  5167               	movf	(??_sha256_transform+7)& (0+255),w,b
  2691  00FB5A  196B               	xorwf	(??_sha256_transform+11)& (0+255),w,b
  2692  00FB5C  6F6F               	movwf	(??_sha256_transform+15)& (0+255),b
  2693  00FB5E  5160               	movf	??_sha256_transform& (0+255),w,b
  2694  00FB60  196C               	xorwf	(??_sha256_transform+12)& (0+255),w,b
  2695  00FB62  6F70               	movwf	(??_sha256_transform+16)& (0+255),b
  2696  00FB64  5161               	movf	(??_sha256_transform+1)& (0+255),w,b
  2697  00FB66  196D               	xorwf	(??_sha256_transform+13)& (0+255),w,b
  2698  00FB68  6F71               	movwf	(??_sha256_transform+17)& (0+255),b
  2699  00FB6A  5162               	movf	(??_sha256_transform+2)& (0+255),w,b
  2700  00FB6C  196E               	xorwf	(??_sha256_transform+14)& (0+255),w,b
  2701  00FB6E  6F72               	movwf	(??_sha256_transform+18)& (0+255),b
  2702  00FB70  5163               	movf	(??_sha256_transform+3)& (0+255),w,b
  2703  00FB72  196F               	xorwf	(??_sha256_transform+15)& (0+255),w,b
  2704  00FB74  6F73               	movwf	(??_sha256_transform+19)& (0+255),b
  2705  00FB76  C02D  F074         	movff	sha256_transform@a,??_sha256_transform+20
  2706  00FB7A  C02E  F075         	movff	sha256_transform@a+1,??_sha256_transform+21
  2707  00FB7E  C02F  F076         	movff	sha256_transform@a+2,??_sha256_transform+22
  2708  00FB82  C030  F077         	movff	sha256_transform@a+3,??_sha256_transform+23
  2709  00FB86  0E0A               	movlw	10
  2710  00FB88                     u635:
  2711  00FB88  90D8               	bcf	status,0,c
  2712  00FB8A  3774               	rlcf	(??_sha256_transform+20)& (0+255),f,b
  2713  00FB8C  3775               	rlcf	(??_sha256_transform+21)& (0+255),f,b
  2714  00FB8E  3776               	rlcf	(??_sha256_transform+22)& (0+255),f,b
  2715  00FB90  3777               	rlcf	(??_sha256_transform+23)& (0+255),f,b
  2716  00FB92  2EE8               	decfsz	wreg,f,c
  2717  00FB94  D7F9               	goto	u635
  2718  00FB96  C02D  F078         	movff	sha256_transform@a,??_sha256_transform+24
  2719  00FB9A  C02E  F079         	movff	sha256_transform@a+1,??_sha256_transform+25
  2720  00FB9E  C02F  F07A         	movff	sha256_transform@a+2,??_sha256_transform+26
  2721  00FBA2  C030  F07B         	movff	sha256_transform@a+3,??_sha256_transform+27
  2722  00FBA6  0E17               	movlw	23
  2723  00FBA8  D005               	goto	u640
  2724  00FBAA                     u645:
  2725  00FBAA  90D8               	bcf	status,0,c
  2726  00FBAC  337B               	rrcf	(??_sha256_transform+27)& (0+255),f,b
  2727  00FBAE  337A               	rrcf	(??_sha256_transform+26)& (0+255),f,b
  2728  00FBB0  3379               	rrcf	(??_sha256_transform+25)& (0+255),f,b
  2729  00FBB2  3378               	rrcf	(??_sha256_transform+24)& (0+255),f,b
  2730  00FBB4                     u640:
  2731  00FBB4  2EE8               	decfsz	wreg,f,c
  2732  00FBB6  D7F9               	goto	u645
  2733  00FBB8  5174               	movf	(??_sha256_transform+20)& (0+255),w,b
  2734  00FBBA  1178               	iorwf	(??_sha256_transform+24)& (0+255),w,b
  2735  00FBBC  6F7C               	movwf	(??_sha256_transform+28)& (0+255),b
  2736  00FBBE  5175               	movf	(??_sha256_transform+21)& (0+255),w,b
  2737  00FBC0  1179               	iorwf	(??_sha256_transform+25)& (0+255),w,b
  2738  00FBC2  6F7D               	movwf	(??_sha256_transform+29)& (0+255),b
  2739  00FBC4  5176               	movf	(??_sha256_transform+22)& (0+255),w,b
  2740  00FBC6  117A               	iorwf	(??_sha256_transform+26)& (0+255),w,b
  2741  00FBC8  6F7E               	movwf	(??_sha256_transform+30)& (0+255),b
  2742  00FBCA  5177               	movf	(??_sha256_transform+23)& (0+255),w,b
  2743  00FBCC  117B               	iorwf	(??_sha256_transform+27)& (0+255),w,b
  2744  00FBCE  6F7F               	movwf	(??_sha256_transform+31)& (0+255),b
  2745  00FBD0  C02D  F080         	movff	sha256_transform@a,??_sha256_transform+32
  2746  00FBD4  C02E  F081         	movff	sha256_transform@a+1,??_sha256_transform+33
  2747  00FBD8  C02F  F082         	movff	sha256_transform@a+2,??_sha256_transform+34
  2748  00FBDC  C030  F083         	movff	sha256_transform@a+3,??_sha256_transform+35
  2749  00FBE0  0E13               	movlw	19
  2750  00FBE2                     u655:
  2751  00FBE2  90D8               	bcf	status,0,c
  2752  00FBE4  3780               	rlcf	(??_sha256_transform+32)& (0+255),f,b
  2753  00FBE6  3781               	rlcf	(??_sha256_transform+33)& (0+255),f,b
  2754  00FBE8  3782               	rlcf	(??_sha256_transform+34)& (0+255),f,b
  2755  00FBEA  3783               	rlcf	(??_sha256_transform+35)& (0+255),f,b
  2756  00FBEC  2EE8               	decfsz	wreg,f,c
  2757  00FBEE  D7F9               	goto	u655
  2758  00FBF0  C02D  F084         	movff	sha256_transform@a,??_sha256_transform+36
  2759  00FBF4  C02E  F085         	movff	sha256_transform@a+1,??_sha256_transform+37
  2760  00FBF8  C02F  F086         	movff	sha256_transform@a+2,??_sha256_transform+38
  2761  00FBFC  C030  F087         	movff	sha256_transform@a+3,??_sha256_transform+39
  2762  00FC00  0E0E               	movlw	14
  2763  00FC02  D001               	goto	u660
  2764  00FC04                     u665:
  2765  00FC04  D96B               	call	PL44	;call to abstracted procedure
  2766  00FC06                     u660:
  2767  00FC06  2EE8               	decfsz	wreg,f,c
  2768  00FC08  D7FD               	goto	u665
  2769  00FC0A  5180               	movf	(??_sha256_transform+32)& (0+255),w,b
  2770  00FC0C  1184               	iorwf	(??_sha256_transform+36)& (0+255),w,b
  2771  00FC0E  6F88               	movwf	(??_sha256_transform+40)& (0+255),b
  2772  00FC10  5181               	movf	(??_sha256_transform+33)& (0+255),w,b
  2773  00FC12  1185               	iorwf	(??_sha256_transform+37)& (0+255),w,b
  2774  00FC14  6F89               	movwf	(??_sha256_transform+41)& (0+255),b
  2775  00FC16  5182               	movf	(??_sha256_transform+34)& (0+255),w,b
  2776  00FC18  1186               	iorwf	(??_sha256_transform+38)& (0+255),w,b
  2777  00FC1A  6F8A               	movwf	(??_sha256_transform+42)& (0+255),b
  2778  00FC1C  5183               	movf	(??_sha256_transform+35)& (0+255),w,b
  2779  00FC1E  1187               	iorwf	(??_sha256_transform+39)& (0+255),w,b
  2780  00FC20  6F8B               	movwf	(??_sha256_transform+43)& (0+255),b
  2781  00FC22  C02D  F08C         	movff	sha256_transform@a,??_sha256_transform+44
  2782  00FC26  C02E  F08D         	movff	sha256_transform@a+1,??_sha256_transform+45
  2783  00FC2A  C02F  F08E         	movff	sha256_transform@a+2,??_sha256_transform+46
  2784  00FC2E  C030  F08F         	movff	sha256_transform@a+3,??_sha256_transform+47
  2785  00FC32  0E1E               	movlw	30
  2786  00FC34                     u675:
  2787  00FC34  90D8               	bcf	status,0,c
  2788  00FC36  378C               	rlcf	(??_sha256_transform+44)& (0+255),f,b
  2789  00FC38  378D               	rlcf	(??_sha256_transform+45)& (0+255),f,b
  2790  00FC3A  378E               	rlcf	(??_sha256_transform+46)& (0+255),f,b
  2791  00FC3C  378F               	rlcf	(??_sha256_transform+47)& (0+255),f,b
  2792  00FC3E  2EE8               	decfsz	wreg,f,c
  2793  00FC40  D7F9               	goto	u675
  2794  00FC42  C02D  F090         	movff	sha256_transform@a,??_sha256_transform+48
  2795  00FC46  C02E  F091         	movff	sha256_transform@a+1,??_sha256_transform+49
  2796  00FC4A  C02F  F092         	movff	sha256_transform@a+2,??_sha256_transform+50
  2797  00FC4E  C030  F093         	movff	sha256_transform@a+3,??_sha256_transform+51
  2798  00FC52  0E03               	movlw	3
  2799  00FC54  D005               	goto	u680
  2800  00FC56                     u685:
  2801  00FC56  90D8               	bcf	status,0,c
  2802  00FC58  3393               	rrcf	(??_sha256_transform+51)& (0+255),f,b
  2803  00FC5A  3392               	rrcf	(??_sha256_transform+50)& (0+255),f,b
  2804  00FC5C  3391               	rrcf	(??_sha256_transform+49)& (0+255),f,b
  2805  00FC5E  3390               	rrcf	(??_sha256_transform+48)& (0+255),f,b
  2806  00FC60                     u680:
  2807  00FC60  2EE8               	decfsz	wreg,f,c
  2808  00FC62  D7F9               	goto	u685
  2809  00FC64  518C               	movf	(??_sha256_transform+44)& (0+255),w,b
  2810  00FC66  1190               	iorwf	(??_sha256_transform+48)& (0+255),w,b
  2811  00FC68  6F94               	movwf	(??_sha256_transform+52)& (0+255),b
  2812  00FC6A  518D               	movf	(??_sha256_transform+45)& (0+255),w,b
  2813  00FC6C  1191               	iorwf	(??_sha256_transform+49)& (0+255),w,b
  2814  00FC6E  6F95               	movwf	(??_sha256_transform+53)& (0+255),b
  2815  00FC70  518E               	movf	(??_sha256_transform+46)& (0+255),w,b
  2816  00FC72  1192               	iorwf	(??_sha256_transform+50)& (0+255),w,b
  2817  00FC74  6F96               	movwf	(??_sha256_transform+54)& (0+255),b
  2818  00FC76  518F               	movf	(??_sha256_transform+47)& (0+255),w,b
  2819  00FC78  1193               	iorwf	(??_sha256_transform+51)& (0+255),w,b
  2820  00FC7A  6F97               	movwf	(??_sha256_transform+55)& (0+255),b
  2821  00FC7C  5188               	movf	(??_sha256_transform+40)& (0+255),w,b
  2822  00FC7E  1994               	xorwf	(??_sha256_transform+52)& (0+255),w,b
  2823  00FC80  6F98               	movwf	(??_sha256_transform+56)& (0+255),b
  2824  00FC82  5189               	movf	(??_sha256_transform+41)& (0+255),w,b
  2825  00FC84  1995               	xorwf	(??_sha256_transform+53)& (0+255),w,b
  2826  00FC86  6F99               	movwf	(??_sha256_transform+57)& (0+255),b
  2827  00FC88  518A               	movf	(??_sha256_transform+42)& (0+255),w,b
  2828  00FC8A  1996               	xorwf	(??_sha256_transform+54)& (0+255),w,b
  2829  00FC8C  6F9A               	movwf	(??_sha256_transform+58)& (0+255),b
  2830  00FC8E  518B               	movf	(??_sha256_transform+43)& (0+255),w,b
  2831  00FC90  1997               	xorwf	(??_sha256_transform+55)& (0+255),w,b
  2832  00FC92  6F9B               	movwf	(??_sha256_transform+59)& (0+255),b
  2833  00FC94  517C               	movf	(??_sha256_transform+28)& (0+255),w,b
  2834  00FC96  1998               	xorwf	(??_sha256_transform+56)& (0+255),w,b
  2835  00FC98  6F9C               	movwf	(??_sha256_transform+60)& (0+255),b
  2836  00FC9A  517D               	movf	(??_sha256_transform+29)& (0+255),w,b
  2837  00FC9C  1999               	xorwf	(??_sha256_transform+57)& (0+255),w,b
  2838  00FC9E  6F9D               	movwf	(??_sha256_transform+61)& (0+255),b
  2839  00FCA0  517E               	movf	(??_sha256_transform+30)& (0+255),w,b
  2840  00FCA2  199A               	xorwf	(??_sha256_transform+58)& (0+255),w,b
  2841  00FCA4  6F9E               	movwf	(??_sha256_transform+62)& (0+255),b
  2842  00FCA6  517F               	movf	(??_sha256_transform+31)& (0+255),w,b
  2843  00FCA8  199B               	xorwf	(??_sha256_transform+59)& (0+255),w,b
  2844  00FCAA  6F9F               	movwf	(??_sha256_transform+63)& (0+255),b
  2845  00FCAC  5170               	movf	(??_sha256_transform+16)& (0+255),w,b
  2846  00FCAE  259C               	addwf	(??_sha256_transform+60)& (0+255),w,b
  2847  00FCB0  6E05               	movwf	sha256_transform@t2,c
  2848  00FCB2  5171               	movf	(??_sha256_transform+17)& (0+255),w,b
  2849  00FCB4  219D               	addwfc	(??_sha256_transform+61)& (0+255),w,b
  2850  00FCB6  6E06               	movwf	sha256_transform@t2+1,c
  2851  00FCB8  5172               	movf	(??_sha256_transform+18)& (0+255),w,b
  2852  00FCBA  219E               	addwfc	(??_sha256_transform+62)& (0+255),w,b
  2853  00FCBC  6E07               	movwf	sha256_transform@t2+2,c
  2854  00FCBE  5173               	movf	(??_sha256_transform+19)& (0+255),w,b
  2855  00FCC0  219F               	addwfc	(??_sha256_transform+63)& (0+255),w,b
  2856  00FCC2  6E08               	movwf	sha256_transform@t2+3,c
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;sha256.c: 74: h = g;
  2860  00FCC4  C019  F011         	movff	sha256_transform@g,sha256_transform@h
  2861  00FCC8  C01A  F012         	movff	sha256_transform@g+1,sha256_transform@h+1
  2862  00FCCC  C01B  F013         	movff	sha256_transform@g+2,sha256_transform@h+2
  2863  00FCD0  C01C  F014         	movff	sha256_transform@g+3,sha256_transform@h+3
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;sha256.c: 75: g = f;
  2867  00FCD4  C015  F019         	movff	sha256_transform@f,sha256_transform@g
  2868  00FCD8  C016  F01A         	movff	sha256_transform@f+1,sha256_transform@g+1
  2869  00FCDC  C017  F01B         	movff	sha256_transform@f+2,sha256_transform@g+2
  2870  00FCE0  C018  F01C         	movff	sha256_transform@f+3,sha256_transform@g+3
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;sha256.c: 76: f = e;
  2874  00FCE4  C031  F015         	movff	sha256_transform@e,sha256_transform@f
  2875  00FCE8  C032  F016         	movff	sha256_transform@e+1,sha256_transform@f+1
  2876  00FCEC  C033  F017         	movff	sha256_transform@e+2,sha256_transform@f+2
  2877  00FCF0  C034  F018         	movff	sha256_transform@e+3,sha256_transform@f+3
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;sha256.c: 77: e = d + t1;
  2881  00FCF4  5009               	movf	sha256_transform@t1,w,c
  2882  00FCF6  240D               	addwf	sha256_transform@d,w,c
  2883  00FCF8  6E31               	movwf	sha256_transform@e,c
  2884  00FCFA  500A               	movf	sha256_transform@t1+1,w,c
  2885  00FCFC  200E               	addwfc	sha256_transform@d+1,w,c
  2886  00FCFE  6E32               	movwf	sha256_transform@e+1,c
  2887  00FD00  500B               	movf	sha256_transform@t1+2,w,c
  2888  00FD02  200F               	addwfc	sha256_transform@d+2,w,c
  2889  00FD04  6E33               	movwf	sha256_transform@e+2,c
  2890  00FD06  500C               	movf	sha256_transform@t1+3,w,c
  2891  00FD08  2010               	addwfc	sha256_transform@d+3,w,c
  2892  00FD0A  6E34               	movwf	sha256_transform@e+3,c
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;sha256.c: 78: d = c;
  2896  00FD0C  C021  F00D         	movff	sha256_transform@c,sha256_transform@d
  2897  00FD10  C022  F00E         	movff	sha256_transform@c+1,sha256_transform@d+1
  2898  00FD14  C023  F00F         	movff	sha256_transform@c+2,sha256_transform@d+2
  2899  00FD18  C024  F010         	movff	sha256_transform@c+3,sha256_transform@d+3
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;sha256.c: 79: c = b;
  2903  00FD1C  C01D  F021         	movff	sha256_transform@b,sha256_transform@c
  2904  00FD20  C01E  F022         	movff	sha256_transform@b+1,sha256_transform@c+1
  2905  00FD24  C01F  F023         	movff	sha256_transform@b+2,sha256_transform@c+2
  2906  00FD28  C020  F024         	movff	sha256_transform@b+3,sha256_transform@c+3
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;sha256.c: 80: b = a;
  2910  00FD2C  C02D  F01D         	movff	sha256_transform@a,sha256_transform@b
  2911  00FD30  C02E  F01E         	movff	sha256_transform@a+1,sha256_transform@b+1
  2912  00FD34  C02F  F01F         	movff	sha256_transform@a+2,sha256_transform@b+2
  2913  00FD38  C030  F020         	movff	sha256_transform@a+3,sha256_transform@b+3
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;sha256.c: 81: a = t1 + t2;
  2917  00FD3C  5005               	movf	sha256_transform@t2,w,c
  2918  00FD3E  2409               	addwf	sha256_transform@t1,w,c
  2919  00FD40  6E2D               	movwf	sha256_transform@a,c
  2920  00FD42  5006               	movf	sha256_transform@t2+1,w,c
  2921  00FD44  200A               	addwfc	sha256_transform@t1+1,w,c
  2922  00FD46  6E2E               	movwf	sha256_transform@a+1,c
  2923  00FD48  5007               	movf	sha256_transform@t2+2,w,c
  2924  00FD4A  200B               	addwfc	sha256_transform@t1+2,w,c
  2925  00FD4C  6E2F               	movwf	sha256_transform@a+2,c
  2926  00FD4E  5008               	movf	sha256_transform@t2+3,w,c
  2927  00FD50  200C               	addwfc	sha256_transform@t1+3,w,c
  2928  00FD52  6E30               	movwf	sha256_transform@a+3,c
  2929                           
  2930                           ; BSR set to: 0
  2931  00FD54  D8B7               	call	PL36	;call to abstracted procedure
  2932                           
  2933                           ; BSR set to: 0
  2934  00FD56  5038               	movf	sha256_transform@i+3,w,c
  2935  00FD58  1037               	iorwf	sha256_transform@i+2,w,c
  2936  00FD5A  1036               	iorwf	sha256_transform@i+1,w,c
  2937  00FD5C  E104               	bnz	u690
  2938  00FD5E  0E40               	movlw	64
  2939  00FD60  5C35               	subwf	sha256_transform@i,w,c
  2940  00FD62  E201 D5B8          	bnc	l861
  2941  00FD66                     u690:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;sha256.c: 82: }
  2945                           ;sha256.c: 84: ctx->state[0] += a;
  2946  00FD66  EE20 F048          	lfsr	2,72
  2947  00FD6A  D894               	call	PL18	;call to abstracted procedure
  2948  00FD6C  502D               	movf	sha256_transform@a,w,c
  2949  00FD6E  26DE               	addwf	postinc2,f,c
  2950  00FD70  502E               	movf	sha256_transform@a+1,w,c
  2951  00FD72  22DE               	addwfc	postinc2,f,c
  2952  00FD74  502F               	movf	sha256_transform@a+2,w,c
  2953  00FD76  22DE               	addwfc	postinc2,f,c
  2954  00FD78  5030               	movf	sha256_transform@a+3,w,c
  2955  00FD7A  22DE               	addwfc	postinc2,f,c
  2956                           
  2957                           ;sha256.c: 85: ctx->state[1] += b;
  2958  00FD7C  EE20 F04C          	lfsr	2,76
  2959  00FD80  D889               	call	PL18	;call to abstracted procedure
  2960  00FD82  501D               	movf	sha256_transform@b,w,c
  2961  00FD84  26DE               	addwf	postinc2,f,c
  2962  00FD86  501E               	movf	sha256_transform@b+1,w,c
  2963  00FD88  22DE               	addwfc	postinc2,f,c
  2964  00FD8A  501F               	movf	sha256_transform@b+2,w,c
  2965  00FD8C  22DE               	addwfc	postinc2,f,c
  2966  00FD8E  5020               	movf	sha256_transform@b+3,w,c
  2967  00FD90  22DE               	addwfc	postinc2,f,c
  2968                           
  2969                           ;sha256.c: 86: ctx->state[2] += c;
  2970  00FD92  EE20 F050          	lfsr	2,80
  2971  00FD96  D87E               	call	PL18	;call to abstracted procedure
  2972  00FD98  5021               	movf	sha256_transform@c,w,c
  2973  00FD9A  26DE               	addwf	postinc2,f,c
  2974  00FD9C  5022               	movf	sha256_transform@c+1,w,c
  2975  00FD9E  22DE               	addwfc	postinc2,f,c
  2976  00FDA0  5023               	movf	sha256_transform@c+2,w,c
  2977  00FDA2  22DE               	addwfc	postinc2,f,c
  2978  00FDA4  5024               	movf	sha256_transform@c+3,w,c
  2979  00FDA6  22DE               	addwfc	postinc2,f,c
  2980                           
  2981                           ;sha256.c: 87: ctx->state[3] += d;
  2982  00FDA8  EE20 F054          	lfsr	2,84
  2983  00FDAC  D873               	call	PL18	;call to abstracted procedure
  2984  00FDAE  500D               	movf	sha256_transform@d,w,c
  2985  00FDB0  26DE               	addwf	postinc2,f,c
  2986  00FDB2  500E               	movf	sha256_transform@d+1,w,c
  2987  00FDB4  22DE               	addwfc	postinc2,f,c
  2988  00FDB6  500F               	movf	sha256_transform@d+2,w,c
  2989  00FDB8  22DE               	addwfc	postinc2,f,c
  2990  00FDBA  5010               	movf	sha256_transform@d+3,w,c
  2991  00FDBC  22DE               	addwfc	postinc2,f,c
  2992                           
  2993                           ;sha256.c: 88: ctx->state[4] += e;
  2994  00FDBE  EE20 F058          	lfsr	2,88
  2995  00FDC2  D868               	call	PL18	;call to abstracted procedure
  2996  00FDC4  5031               	movf	sha256_transform@e,w,c
  2997  00FDC6  26DE               	addwf	postinc2,f,c
  2998  00FDC8  5032               	movf	sha256_transform@e+1,w,c
  2999  00FDCA  22DE               	addwfc	postinc2,f,c
  3000  00FDCC  5033               	movf	sha256_transform@e+2,w,c
  3001  00FDCE  22DE               	addwfc	postinc2,f,c
  3002  00FDD0  5034               	movf	sha256_transform@e+3,w,c
  3003  00FDD2  22DE               	addwfc	postinc2,f,c
  3004                           
  3005                           ;sha256.c: 89: ctx->state[5] += f;
  3006  00FDD4  EE20 F05C          	lfsr	2,92
  3007  00FDD8  D85D               	call	PL18	;call to abstracted procedure
  3008  00FDDA  5015               	movf	sha256_transform@f,w,c
  3009  00FDDC  26DE               	addwf	postinc2,f,c
  3010  00FDDE  5016               	movf	sha256_transform@f+1,w,c
  3011  00FDE0  22DE               	addwfc	postinc2,f,c
  3012  00FDE2  5017               	movf	sha256_transform@f+2,w,c
  3013  00FDE4  22DE               	addwfc	postinc2,f,c
  3014  00FDE6  5018               	movf	sha256_transform@f+3,w,c
  3015  00FDE8  22DE               	addwfc	postinc2,f,c
  3016                           
  3017                           ;sha256.c: 90: ctx->state[6] += g;
  3018  00FDEA  EE20 F060          	lfsr	2,96
  3019  00FDEE  D852               	call	PL18	;call to abstracted procedure
  3020  00FDF0  5019               	movf	sha256_transform@g,w,c
  3021  00FDF2  26DE               	addwf	postinc2,f,c
  3022  00FDF4  501A               	movf	sha256_transform@g+1,w,c
  3023  00FDF6  22DE               	addwfc	postinc2,f,c
  3024  00FDF8  501B               	movf	sha256_transform@g+2,w,c
  3025  00FDFA  22DE               	addwfc	postinc2,f,c
  3026  00FDFC  501C               	movf	sha256_transform@g+3,w,c
  3027  00FDFE  22DE               	addwfc	postinc2,f,c
  3028                           
  3029                           ;sha256.c: 91: ctx->state[7] += h;
  3030  00FE00  EE20 F064          	lfsr	2,100
  3031  00FE04  D847               	call	PL18	;call to abstracted procedure
  3032  00FE06  5011               	movf	sha256_transform@h,w,c
  3033  00FE08  26DE               	addwf	postinc2,f,c
  3034  00FE0A  5012               	movf	sha256_transform@h+1,w,c
  3035  00FE0C  22DE               	addwfc	postinc2,f,c
  3036  00FE0E  5013               	movf	sha256_transform@h+2,w,c
  3037  00FE10  22DE               	addwfc	postinc2,f,c
  3038  00FE12  5014               	movf	sha256_transform@h+3,w,c
  3039  00FE14  22DE               	addwfc	postinc2,f,c
  3040                           
  3041                           ; BSR set to: 0
  3042  00FE16  0012               	return		;funcret
  3043  00FE18                     __end_of_sha256_transform:
  3044                           	opt stack 0
  3045  00FE18                     PL8:
  3046                           	opt stack 29
  3047  00FE18  0E00               	movlw	low sha256_transform@m
  3048  00FE1A  6F60               	movwf	??_sha256_transform& (0+255),b
  3049  00FE1C  0E01               	movlw	high sha256_transform@m
  3050  00FE1E  6F61               	movwf	(??_sha256_transform+1)& (0+255),b
  3051  00FE20  90D8               	bcf	status,0,c
  3052  00FE22  3435               	rlcf	sha256_transform@i,w,c
  3053  00FE24  6ED9               	movwf	fsr2l,c
  3054  00FE26  3436               	rlcf	sha256_transform@i+1,w,c
  3055  00FE28  6EDA               	movwf	fsr2h,c
  3056  00FE2A  90D8               	bcf	status,0,c
  3057  00FE2C  36D9               	rlcf	fsr2l,f,c
  3058  00FE2E  36DA               	rlcf	fsr2h,f,c
  3059  00FE30  5160               	movf	??_sha256_transform& (0+255),w,b
  3060  00FE32  26D9               	addwf	fsr2l,f,c
  3061  00FE34  5161               	movf	(??_sha256_transform+1)& (0+255),w,b
  3062  00FE36  22DA               	addwfc	fsr2h,f,c
  3063  00FE38  CFDE F062          	movff	postinc2,??_sha256_transform+2
  3064  00FE3C  CFDE F063          	movff	postinc2,??_sha256_transform+3
  3065  00FE40  CFDE F064          	movff	postinc2,??_sha256_transform+4
  3066  00FE44  CFDE F065          	movff	postinc2,??_sha256_transform+5
  3067  00FE48  0012               	return	
  3068  00FE4A                     __end_ofPL8:
  3069                           	opt stack 0
  3070  00FE4A                     PL10:
  3071                           	opt stack 29
  3072  00FE4A  6ED9               	movwf	fsr2l,c
  3073  00FE4C  0E00               	movlw	0
  3074  00FE4E  2161               	addwfc	(??_sha256_transform+1)& (0+255),w,b
  3075  00FE50  6EDA               	movwf	fsr2h,c
  3076  00FE52  50DF               	movf	indf2,w,c
  3077  00FE54  6E29               	movwf	sha256_transform@l,c
  3078  00FE56  6A2A               	clrf	sha256_transform@l+1,c
  3079  00FE58  6A2B               	clrf	sha256_transform@l+2,c
  3080  00FE5A  6A2C               	clrf	sha256_transform@l+3,c
  3081  00FE5C  0012               	return	
  3082  00FE5E                     __end_ofPL10:
  3083                           	opt stack 0
  3084  00FE5E                     PL12:
  3085                           	opt stack 29
  3086  00FE5E  90D8               	bcf	status,0,c
  3087  00FE60  3435               	rlcf	sha256_transform@i,w,c
  3088  00FE62  6ED9               	movwf	fsr2l,c
  3089  00FE64  3436               	rlcf	sha256_transform@i+1,w,c
  3090  00FE66  6EDA               	movwf	fsr2h,c
  3091  00FE68  90D8               	bcf	status,0,c
  3092  00FE6A  36D9               	rlcf	fsr2l,f,c
  3093  00FE6C  36DA               	rlcf	fsr2h,f,c
  3094  00FE6E  0012               	return	
  3095  00FE70                     __end_ofPL12:
  3096                           	opt stack 0
  3097  00FE70                     PL14:
  3098                           	opt stack 29
  3099  00FE70  6B66               	clrf	(??_sha256_transform+6)& (0+255),b
  3100  00FE72  5162               	movf	(??_sha256_transform+2)& (0+255),w,b
  3101  00FE74  1166               	iorwf	(??_sha256_transform+6)& (0+255),w,b
  3102  00FE76  6F6A               	movwf	(??_sha256_transform+10)& (0+255),b
  3103  00FE78  5163               	movf	(??_sha256_transform+3)& (0+255),w,b
  3104  00FE7A  1167               	iorwf	(??_sha256_transform+7)& (0+255),w,b
  3105  00FE7C  6F6B               	movwf	(??_sha256_transform+11)& (0+255),b
  3106  00FE7E  5164               	movf	(??_sha256_transform+4)& (0+255),w,b
  3107  00FE80  1168               	iorwf	(??_sha256_transform+8)& (0+255),w,b
  3108  00FE82  6F6C               	movwf	(??_sha256_transform+12)& (0+255),b
  3109  00FE84  5165               	movf	(??_sha256_transform+5)& (0+255),w,b
  3110  00FE86  1169               	iorwf	(??_sha256_transform+9)& (0+255),w,b
  3111  00FE88  6F6D               	movwf	(??_sha256_transform+13)& (0+255),b
  3112  00FE8A  0E00               	movlw	low sha256_transform@m
  3113  00FE8C  6F6E               	movwf	(??_sha256_transform+14)& (0+255),b
  3114  00FE8E  0E01               	movlw	high sha256_transform@m
  3115  00FE90  6F6F               	movwf	(??_sha256_transform+15)& (0+255),b
  3116  00FE92  0012               	return	
  3117  00FE94                     __end_ofPL14:
  3118                           	opt stack 0
  3119  00FE94                     PL18:
  3120                           	opt stack 29
  3121  00FE94  5001               	movf	sha256_transform@ctx,w,c
  3122  00FE96  26D9               	addwf	fsr2l,f,c
  3123  00FE98  5002               	movf	sha256_transform@ctx+1,w,c
  3124  00FE9A  22DA               	addwfc	fsr2h,f,c
  3125  00FE9C  0012               	return	
  3126  00FE9E                     __end_ofPL18:
  3127                           	opt stack 0
  3128  00FE9E                     PL20:
  3129                           	opt stack 29
  3130  00FE9E  516E               	movf	(??_sha256_transform+14)& (0+255),w,b
  3131  00FEA0  26D9               	addwf	fsr2l,f,c
  3132  00FEA2  516F               	movf	(??_sha256_transform+15)& (0+255),w,b
  3133  00FEA4  22DA               	addwfc	fsr2h,f,c
  3134  00FEA6  C06A  FFDE         	movff	??_sha256_transform+10,postinc2
  3135  00FEAA  C06B  FFDE         	movff	??_sha256_transform+11,postinc2
  3136  00FEAE  C06C  FFDE         	movff	??_sha256_transform+12,postinc2
  3137  00FEB2  C06D  FFDE         	movff	??_sha256_transform+13,postinc2
  3138  00FEB6  5025               	movf	sha256_transform@j,w,c
  3139  00FEB8  2403               	addwf	sha256_transform@data,w,c
  3140  00FEBA  6F60               	movwf	??_sha256_transform& (0+255),b
  3141  00FEBC  5026               	movf	sha256_transform@j+1,w,c
  3142  00FEBE  2004               	addwfc	sha256_transform@data+1,w,c
  3143  00FEC0  6F61               	movwf	(??_sha256_transform+1)& (0+255),b
  3144  00FEC2  0012               	return	
  3145  00FEC4                     __end_ofPL20:
  3146                           	opt stack 0
  3147  00FEC4                     PL36:
  3148                           	opt stack 29
  3149  00FEC4  2A35               	incf	sha256_transform@i,f,c
  3150  00FEC6  0E00               	movlw	0
  3151  00FEC8  2236               	addwfc	sha256_transform@i+1,f,c
  3152  00FECA  2237               	addwfc	sha256_transform@i+2,f,c
  3153  00FECC  2238               	addwfc	sha256_transform@i+3,f,c
  3154  00FECE  0C00               	retlw	0
  3155  00FED0                     __end_ofPL36:
  3156                           	opt stack 0
  3157  00FED0                     PL42:
  3158                           	opt stack 29
  3159  00FED0  90D8               	bcf	status,0,c
  3160  00FED2  339B               	rrcf	(??_sha256_transform+59)& (0+255),f,b
  3161  00FED4  339A               	rrcf	(??_sha256_transform+58)& (0+255),f,b
  3162  00FED6  3399               	rrcf	(??_sha256_transform+57)& (0+255),f,b
  3163  00FED8  3398               	rrcf	(??_sha256_transform+56)& (0+255),f,b
  3164  00FEDA  0012               	return	
  3165  00FEDC                     __end_ofPL42:
  3166                           	opt stack 0
  3167  00FEDC                     PL44:
  3168                           	opt stack 29
  3169  00FEDC  90D8               	bcf	status,0,c
  3170  00FEDE  3387               	rrcf	(??_sha256_transform+39)& (0+255),f,b
  3171  00FEE0  3386               	rrcf	(??_sha256_transform+38)& (0+255),f,b
  3172  00FEE2  3385               	rrcf	(??_sha256_transform+37)& (0+255),f,b
  3173  00FEE4  3384               	rrcf	(??_sha256_transform+36)& (0+255),f,b
  3174  00FEE6  0012               	return	
  3175  00FEE8                     __end_ofPL44:
  3176                           	opt stack 0
  3177  00FEE8                     PL46:
  3178                           	opt stack 29
  3179  00FEE8  90D8               	bcf	status,0,c
  3180  00FEEA  377C               	rlcf	(??_sha256_transform+28)& (0+255),f,b
  3181  00FEEC  377D               	rlcf	(??_sha256_transform+29)& (0+255),f,b
  3182  00FEEE  377E               	rlcf	(??_sha256_transform+30)& (0+255),f,b
  3183  00FEF0  377F               	rlcf	(??_sha256_transform+31)& (0+255),f,b
  3184  00FEF2  0012               	return	
  3185  00FEF4                     __end_ofPL46:
  3186                           	opt stack 0
  3187  00FEF4                     PL48:
  3188                           	opt stack 29
  3189  00FEF4  6A35               	clrf	sha256_transform@i,c
  3190  00FEF6  6A36               	clrf	sha256_transform@i+1,c
  3191  00FEF8  6A37               	clrf	sha256_transform@i+2,c
  3192  00FEFA  6A38               	clrf	sha256_transform@i+3,c
  3193  00FEFC  0012               	return	
  3194  00FEFE                     __end_ofPL48:
  3195                           	opt stack 0
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodl	equ	0xFF3
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           indf1	equ	0xFE7
  3204                           postinc1	equ	0xFE6
  3205                           postdec1	equ	0xFE5
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           plusw2	equ	0xFDB
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _memset *****************
  3217 ;; Defined at:
  3218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.37\sources\common\memset.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  p1              2    0[COMRAM] PTR void 
  3221 ;;		 -> main@ctx(104), 
  3222 ;;  c               2    2[COMRAM] int 
  3223 ;;  n               2    4[COMRAM] unsigned int 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  p               2    6[COMRAM] PTR unsigned char 
  3226 ;;		 -> main@ctx(104), 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2    0[COMRAM] PTR void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : F/0
  3233 ;;		On exit  : F/0
  3234 ;;		Unchanged: F/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;Total ram usage:        8 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_sha256_final
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text6
  3250  00ED38                     __ptext6:
  3251                           	opt stack 0
  3252  00ED38                     _memset:
  3253                           	opt stack 29
  3254                           
  3255                           ; BSR set to: 0
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;incstack = 0
  3259  00ED38  C001  F007         	movff	memset@p1,memset@p
  3260  00ED3C  C002  F008         	movff	memset@p1+1,memset@p+1
  3261  00ED40  D008               	goto	l893
  3262  00ED42                     l889:
  3263                           
  3264                           ; BSR set to: 0
  3265  00ED42  C007  FFD9         	movff	memset@p,fsr2l
  3266  00ED46  C008  FFDA         	movff	memset@p+1,fsr2h
  3267  00ED4A  C003  FFDF         	movff	memset@c,indf2
  3268                           
  3269                           ; BSR set to: 0
  3270  00ED4E  4A07               	infsnz	memset@p,f,c
  3271  00ED50  2A08               	incf	memset@p+1,f,c
  3272  00ED52                     l893:
  3273                           
  3274                           ; BSR set to: 0
  3275  00ED52  0605               	decf	memset@n,f,c
  3276  00ED54  A0D8               	btfss	status,0,c
  3277  00ED56  0606               	decf	memset@n+1,f,c
  3278  00ED58  2805               	incf	memset@n,w,c
  3279  00ED5A  E1F3               	bnz	l889
  3280  00ED5C  2806               	incf	memset@n+1,w,c
  3281  00ED5E  E1F1               	bnz	l889
  3282                           
  3283                           ; BSR set to: 0
  3284  00ED60  0012               	return		;funcret
  3285  00ED62                     __end_of_memset:
  3286                           	opt stack 0
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           prodl	equ	0xFF3
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           indf1	equ	0xFE7
  3295                           postinc1	equ	0xFE6
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           plusw2	equ	0xFDB
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodl	equ	0xFF3
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           postinc1	equ	0xFE6
  3315                           postdec1	equ	0xFE5
  3316                           fsr1h	equ	0xFE2
  3317                           fsr1l	equ	0xFE1
  3318                           indf2	equ	0xFDF
  3319                           postinc2	equ	0xFDE
  3320                           postdec2	equ	0xFDD
  3321                           plusw2	equ	0xFDB
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326                           	psect	rparam
  3327  0000                     tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodl	equ	0xFF3
  3332                           postinc0	equ	0xFEE
  3333                           wreg	equ	0xFE8
  3334                           indf1	equ	0xFE7
  3335                           postinc1	equ	0xFE6
  3336                           postdec1	equ	0xFE5
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           plusw2	equ	0xFDB
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodl	equ	0xFF3
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           indf1	equ	0xFE7
  3354                           postinc1	equ	0xFE6
  3355                           postdec1	equ	0xFE5
  3356                           fsr1h	equ	0xFE2
  3357                           fsr1l	equ	0xFE1
  3358                           indf2	equ	0xFDF
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           plusw2	equ	0xFDB
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    256
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      70
    BANK0           160    142     142
    BANK1           256    256     256
    BANK2           256    140     144
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> main@text1(BANK2[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 4
		 -> main@text1(BANK2[4]), 

    memset@p1	PTR void  size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    memset@p	PTR unsigned char  size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_final@hash	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK2[32]), 

    sp__memset	PTR void  size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_final@ctx	PTR struct . size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_update@data	PTR const unsigned char  size(2) Largest target is 4
		 -> main@text1(BANK2[4]), 

    sha256_update@ctx	PTR struct . size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_init@ctx	PTR struct . size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_transform@ctx	PTR struct . size(2) Largest target is 104
		 -> main@ctx(BANK2[104]), 

    sha256_transform@data	PTR const unsigned char  size(2) Largest target is 104
		 -> ctx.data(BANK0[64]), main@ctx(BANK2[104]), 


Critical Paths under _main in COMRAM

    _main->_sha256_final
    _main->_sha256_update
    _sha256_update->_sha256_transform
    _sha256_final->_sha256_transform

Critical Paths under _main in BANK0

    _sha256_update->_sha256_transform
    _sha256_final->_sha256_transform

Critical Paths under _main in BANK1

    _sha256_update->_sha256_transform
    _sha256_final->_sha256_transform

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               140   140      0    8986
                                              0 BANK2    140   140      0
                       _sha256_final
                        _sha256_init
                      _sha256_update
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     121
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sha256_update                                       14     8      6    3361
                                             56 COMRAM    14     8      6
                   _sha256_transform
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sha256_init                                          2     0      2     347
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _sha256_final                                        14    10      4    4635
                                             56 COMRAM    14    10      4
                             _memset
                   _sha256_transform
 ---------------------------------------------------------------------------------
 (2) _sha256_transform                                   454   450      4    2936
                                              0 COMRAM    56    52      4
                                              0 BANK0    142   142      0
                                              0 BANK1    256   256      0
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     255
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sha256_final
     _memset
     _sha256_transform
   _sha256_init
   _sha256_update
     _sha256_transform
     _strlen (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     8C      90       9       56.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      46       1       73.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     264      12        0.0%
DATA                 0      0     264       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue May 03 14:57:06 2016

                        _k FEFF                         PL2 F172                         PL4 F1B6  
                       PL6 F1C0                         PL8 FE18                        PL10 FE4A  
                      PL20 FE9E                        PL12 FE5E                        PL30 EE9A  
                      PL22 F1E8                        PL14 FE70                        PL40 EF74  
                      PL32 F20C                        PL24 EF6A                        PL16 F1CC  
                      PL42 FED0                        PL34 F21E                        PL26 F1F4  
                      PL18 FE94                        PL44 FEDC                        PL36 FEC4  
                      PL28 F1FE                        PL46 FEE8                        PL38 F22A  
                      PL48 FEF4                        l901 ED1E                        l921 EE70  
                      l843 F360                        l835 F242                        l931 EFBC  
                      l923 EE7A                        l861 F8D6                        l853 F824  
                      l941 EFDC                        l909 EDF2                        l847 F374  
                      l951 F00C                        l935 EFC2                        l945 EFE2  
                      l929 EFB8                        l937 EFD2                        l939 EFD8  
                      l893 ED52                        l889 ED42                        l969 F0B8  
                      l899 ED1A                        u510 F57E                        u600 FA00  
                      u520 F616                        u505 F52A                        u450 F360  
                      u515 F57A                        u620 FA52                        u540 F6B4  
                      u460 F372                        u605 F9F6                        u525 F60C  
                      u470 F43C                        u615 FA2E                        u535 F65A  
                      u640 FBB4                        u560 F76A                        u800 F0E0  
                      u625 FA50                        u545 F6AA                        u490 F4CE  
                      u810 F1A0                        u635 FB88                        u555 F710  
                      u475 F432                        u660 FC06                        u580 F9A6  
                      u645 FBAA                        u565 F760                        u485 F480  
                      u805 F0DE                        u655 FBE2                        u575 F982  
                      u495 F4CA                        u815 F196                        u680 FC60  
                      u760 EFF0                        u665 FC04                        u585 F99C  
                      u690 FD66                        u675 FC34                        u595 F9D4  
                      u780 F08A                        u685 FC56                        u870 F158  
                      u790 F0A2                        u775 F024                        u880 F170  
                      u785 F088                        u875 F14E                        u795 F0A0  
                      wreg 000FE8                       _main ED8C                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf1 000FE7                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       prodl 000FF3  
                     start 0000               ___param_bank 000010                      ?_main 0001  
                    tablat 000FF5                      plusw2 000FDB                      status 000FD8  
          __initialization ED62        sha256_transform@ctx 0001               __end_of_main EDE8  
                   ??_main 0047              __activetblptr 000002       __end_of_sha256_final F172  
__size_of_sha256_transform 0BE2       __size_of_sha256_init 00C2                     _memset ED38  
                   _strlen ED10               __mediumconst FEFE                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization ED82              ___rparam_used 000001       sha256_transform@data 0003  
           __pcstackCOMRAM 0001               __pidataBANK2 ED0C                 __end_ofPL2 F1B6  
               __end_ofPL4 F1C0                 __end_ofPL6 F1CC                 __end_ofPL8 FE4A  
    __end_of_sha256_update EE9A      __size_of_sha256_final 01F4                    ?_memset 0001  
                  ?_strlen 0001           _sha256_transform F236            sha256_final@ctx 0039  
             _sha256_final EF7E                    __Hparam 0000                    __Lparam 0000  
                  __pcinit ED62            __size_of_memset 002A                    __ramtop 1000  
                  __ptext0 ED8C                    __ptext1 ED10                    __ptext2 EDE8  
                  __ptext3 EEA8                    __ptext4 EF7E                    __ptext5 F236  
                  __ptext6 ED38            __size_of_strlen 0028                    main@buf 0200  
                  main@ctx 0224       end_of_initialization ED82                    memset@c 0003  
                  memset@n 0005                    memset@p 0007              __Lmediumconst FEFE  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                    strlen@s 0001  
            ??_sha256_init 0003             __end_of_memset ED62             __end_of_strlen ED38  
              __end_ofPL10 FE5E                __end_ofPL20 FEC4                __end_ofPL12 FE70  
              __end_ofPL30 EEA8                __end_ofPL22 F1F4                __end_ofPL14 FE94  
              __end_ofPL40 EF7E                __end_ofPL32 F21E                __end_ofPL24 EF74  
              __end_ofPL16 F1E8                __end_ofPL42 FEDC                __end_ofPL34 F22A  
              __end_ofPL26 F1FE                __end_ofPL18 FE9E                __end_ofPL44 FEE8  
              __end_ofPL36 FED0                __end_ofPL28 F20C                __end_ofPL46 FEF4  
              __end_ofPL38 F236                __end_ofPL48 FEFE        start_initialization ED62  
       sha256_transform@t1 0009         sha256_transform@t2 0005        __end_of_sha256_init EF6A  
 __end_of_sha256_transform FE18                __pdataBANK2 028C                   ??_memset 0007  
                 ??_strlen 0003              __pcstackBANK0 0060              __pcstackBANK1 0100  
            __pcstackBANK2 0200                  __end_of_k FFFF              __pmediumconst FEFE  
           sha256_init@ctx 0001     __size_of_sha256_update 00B2                _sha256_init EEA8  
           sha256_update@i 0043           sha256_final@hash 003B                  main@F7829 028C  
        sha256_update@data 003B                  main@text1 0220                  copy_data0 ED76  
        sha256_transform@a 002D          sha256_transform@b 001D          sha256_transform@c 0021  
        sha256_transform@d 000D          sha256_transform@e 0031          sha256_transform@f 0015  
        sha256_transform@g 0019          sha256_transform@h 0011          sha256_transform@i 0035  
        sha256_transform@j 0025          sha256_transform@l 0029          sha256_transform@m 0100  
            _sha256_update EDE8                   __Hrparam 0000                   __Lrparam 0000  
            sha256_final@i 0043              __size_of_main 005C             ?_sha256_update 0039  
        ?_sha256_transform 0001         ??_sha256_transform 0060           sha256_update@len 003D  
         sha256_update@ctx 0039                   memset@p1 0001              ?_sha256_final 0039  
                 strlen@cp 0003               ?_sha256_init 0001            ??_sha256_update 003F  
           ??_sha256_final 003D  
